// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const typed_data = dart_sdk.typed_data;
  const html = dart_sdk.html;
  const js_util = dart_sdk.js_util;
  const collection = dart_sdk.collection;
  const developer = dart_sdk.developer;
  const io = dart_sdk.io;
  const convert = dart_sdk.convert;
  const _http = dart_sdk._http;
  const math = dart_sdk.math;
  const _native_typed_data = dart_sdk._native_typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = flutter_sdk.src__widgets__framework;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const change_notifier = flutter_sdk.src__foundation__change_notifier;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const async$ = flutter_sdk.src__widgets__async;
  const basic = flutter_sdk.src__widgets__basic;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const list_tile = flutter_sdk.src__material__list_tile;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const text_button = flutter_sdk.src__material__text_button;
  const card = flutter_sdk.src__material__card;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const spacer = flutter_sdk.src__widgets__spacer;
  const chip = flutter_sdk.src__material__chip;
  const theme = flutter_sdk.src__material__theme;
  const equality = flutter_sdk.src__equality;
  const platform = flutter_sdk.src__foundation__platform;
  const assertions = flutter_sdk.src__foundation__assertions;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const sliver = flutter_sdk.src__widgets__sliver;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const value_listenable_builder = flutter_sdk.src__widgets__value_listenable_builder;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const key = flutter_sdk.src__foundation__key;
  const container = flutter_sdk.src__widgets__container;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const alignment = flutter_sdk.src__painting__alignment;
  const circle_avatar = flutter_sdk.src__material__circle_avatar;
  const iterable_extensions = flutter_sdk.src__iterable_extensions;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const message_codec = flutter_sdk.src__services__message_codec;
  const binary_messenger = flutter_sdk.src__services__binary_messenger;
  const binding$ = flutter_sdk.src__binding;
  const serialization = flutter_sdk.src__foundation__serialization;
  const string_scanner = flutter_sdk.src__string_scanner;
  const canonicalized_map = flutter_sdk.src__canonicalized_map;
  const span_exception = flutter_sdk.src__span_exception;
  const queue_list = flutter_sdk.src__queue_list;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var firebase_core = Object.create(dart.library);
  var provider = Object.create(dart.library);
  var auth_provider = Object.create(dart.library);
  var product_provider = Object.create(dart.library);
  var home_screen = Object.create(dart.library);
  var login_screen = Object.create(dart.library);
  var signup_screen = Object.create(dart.library);
  var cart_screen = Object.create(dart.library);
  var cloud_firestore_web = Object.create(dart.library);
  var firebase_auth_web = Object.create(dart.library);
  var firebase_core_web = Object.create(dart.library);
  var firebase_core_platform_interface = Object.create(dart.library);
  var async_provider = Object.create(dart.library);
  var change_notifier_provider = Object.create(dart.library);
  var consumer = Object.create(dart.library);
  var listenable_provider = Object.create(dart.library);
  var provider$ = Object.create(dart.library);
  var proxy_provider = Object.create(dart.library);
  var reassemble_handler = Object.create(dart.library);
  var selector$ = Object.create(dart.library);
  var value_listenable_provider = Object.create(dart.library);
  var firebase_auth = Object.create(dart.library);
  var cloud_firestore = Object.create(dart.library);
  var product = Object.create(dart.library);
  var product_details_screen = Object.create(dart.library);
  var cart_provider = Object.create(dart.library);
  var cart_item_widget = Object.create(dart.library);
  var cloud_firestore_platform_interface = Object.create(dart.library);
  var internals = Object.create(dart.library);
  var load_bundle_task_web = Object.create(dart.library);
  var web_utils = Object.create(dart.library);
  var firebase_core_web_interop = Object.create(dart.library);
  var collection_reference_web = Object.create(dart.library);
  var document_reference_web = Object.create(dart.library);
  var field_value_factory_web = Object.create(dart.library);
  var firestore$ = Object.create(dart.library);
  var query_web = Object.create(dart.library);
  var transaction_web = Object.create(dart.library);
  var write_batch_web = Object.create(dart.library);
  var firebase_auth_platform_interface = Object.create(dart.library);
  var firebase_auth_web_multi_factor = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var web_utils$ = Object.create(dart.library);
  var firebase_auth_web_confirmation_result = Object.create(dart.library);
  var firebase_auth_web_recaptcha_verifier_factory = Object.create(dart.library);
  var firebase_auth_web_user = Object.create(dart.library);
  var firebase_auth_web_user_credential = Object.create(dart.library);
  var auth$ = Object.create(dart.library);
  var multi_factor = Object.create(dart.library);
  var js$ = Object.create(dart.library);
  var core$ = Object.create(dart.library);
  var messages$46pigeon = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var mocks = Object.create(dart.library);
  var test_api = Object.create(dart.library);
  var nested = Object.create(dart.library);
  var cart_item = Object.create(dart.library);
  var pointer = Object.create(dart.library);
  var messages$46pigeon$ = Object.create(dart.library);
  var blob = Object.create(dart.library);
  var field_path = Object.create(dart.library);
  var field_path_type = Object.create(dart.library);
  var filters = Object.create(dart.library);
  var geo_point = Object.create(dart.library);
  var get_options = Object.create(dart.library);
  var load_bundle_task_state = Object.create(dart.library);
  var persistence_settings = Object.create(dart.library);
  var platform_interface_aggregate_query = Object.create(dart.library);
  var platform_interface_aggregate_query_snapshot = Object.create(dart.library);
  var platform_interface_collection_reference = Object.create(dart.library);
  var platform_interface_document_change = Object.create(dart.library);
  var platform_interface_document_reference = Object.create(dart.library);
  var platform_interface_document_snapshot = Object.create(dart.library);
  var platform_interface_field_value = Object.create(dart.library);
  var platform_interface_field_value_factory = Object.create(dart.library);
  var platform_interface_firestore = Object.create(dart.library);
  var platform_interface_index_definitions = Object.create(dart.library);
  var platform_interface_load_bundle_task = Object.create(dart.library);
  var platform_interface_load_bundle_task_snapshot = Object.create(dart.library);
  var platform_interface_query = Object.create(dart.library);
  var platform_interface_query_snapshot = Object.create(dart.library);
  var platform_interface_transaction = Object.create(dart.library);
  var platform_interface_write_batch = Object.create(dart.library);
  var load_bundle_task_state$ = Object.create(dart.library);
  var set_options = Object.create(dart.library);
  var settings = Object.create(dart.library);
  var snapshot_metadata = Object.create(dart.library);
  var timestamp = Object.create(dart.library);
  var _flutterfire_internals = Object.create(dart.library);
  var firestore_interop = Object.create(dart.library);
  var decode_utility = Object.create(dart.library);
  var es6_interop = Object.create(dart.library);
  var func = Object.create(dart.library);
  var js$0 = Object.create(dart.library);
  var js_interop = Object.create(dart.library);
  var utils$ = Object.create(dart.library);
  var encode_utility = Object.create(dart.library);
  var field_value_web = Object.create(dart.library);
  var utils$0 = Object.create(dart.library);
  var aggregate_query_web = Object.create(dart.library);
  var action_code_info = Object.create(dart.library);
  var action_code_settings = Object.create(dart.library);
  var additional_user_info = Object.create(dart.library);
  var auth_credential = Object.create(dart.library);
  var auth_provider$ = Object.create(dart.library);
  var firebase_auth_exception = Object.create(dart.library);
  var firebase_auth_multi_factor_exception = Object.create(dart.library);
  var id_token_result = Object.create(dart.library);
  var messages$46pigeon$0 = Object.create(dart.library);
  var platform_interface_confirmation_result = Object.create(dart.library);
  var platform_interface_firebase_auth = Object.create(dart.library);
  var platform_interface_multi_factor = Object.create(dart.library);
  var platform_interface_recaptcha_verifier_factory = Object.create(dart.library);
  var platform_interface_user = Object.create(dart.library);
  var platform_interface_user_credential = Object.create(dart.library);
  var apple_auth = Object.create(dart.library);
  var email_auth = Object.create(dart.library);
  var facebook_auth = Object.create(dart.library);
  var github_auth = Object.create(dart.library);
  var google_auth = Object.create(dart.library);
  var microsoft_auth = Object.create(dart.library);
  var oauth = Object.create(dart.library);
  var phone_auth = Object.create(dart.library);
  var saml_auth = Object.create(dart.library);
  var twitter_auth = Object.create(dart.library);
  var yahoo_auth = Object.create(dart.library);
  var types = Object.create(dart.library);
  var user_info = Object.create(dart.library);
  var user_metadata = Object.create(dart.library);
  var window_interop = Object.create(dart.library);
  var http_parser = Object.create(dart.library);
  var auth_interop = Object.create(dart.library);
  var app$ = Object.create(dart.library);
  var core_interop = Object.create(dart.library);
  var app_interop = Object.create(dart.library);
  var firestore_message_codec = Object.create(dart.library);
  var method_channel_field_value_factory = Object.create(dart.library);
  var method_channel_firestore = Object.create(dart.library);
  var exception$ = Object.create(dart.library);
  var method_channel_firebase_auth = Object.create(dart.library);
  var method_channel_multi_factor = Object.create(dart.library);
  var authentication_challenge = Object.create(dart.library);
  var case_insensitive_map = Object.create(dart.library);
  var chunked_coding = Object.create(dart.library);
  var http_date = Object.create(dart.library);
  var media_type = Object.create(dart.library);
  var method_channel_field_value = Object.create(dart.library);
  var method_channel_query = Object.create(dart.library);
  var method_channel_load_bundle_task = Object.create(dart.library);
  var method_channel_query_snapshot = Object.create(dart.library);
  var method_channel_collection_reference = Object.create(dart.library);
  var method_channel_document_reference = Object.create(dart.library);
  var method_channel_transaction = Object.create(dart.library);
  var method_channel_write_batch = Object.create(dart.library);
  var exception = Object.create(dart.library);
  var convert_auth_provider = Object.create(dart.library);
  var method_channel_user = Object.create(dart.library);
  var method_channel_user_credential = Object.create(dart.library);
  var exception$0 = Object.create(dart.library);
  var pigeon_helper = Object.create(dart.library);
  var scan = Object.create(dart.library);
  var utils$1 = Object.create(dart.library);
  var decoder = Object.create(dart.library);
  var encoder = Object.create(dart.library);
  var method_channel_aggregate_query = Object.create(dart.library);
  var method_channel_document_change = Object.create(dart.library);
  var auto_id_generator = Object.create(dart.library);
  var typed_data$ = Object.create(dart.library);
  var charcodes = Object.create(dart.library);
  var typed_queue = Object.create(dart.library);
  var typed_buffers = Object.create(dart.library);
  var typed_buffer = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    ChangeNotifierProviderOfAuthProvider: () => (T$.ChangeNotifierProviderOfAuthProvider = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(auth_provider.AuthProvider)))(),
    BuildContextToAuthProvider: () => (T$.BuildContextToAuthProvider = dart.constFn(dart.fnType(auth_provider.AuthProvider, [framework.BuildContext])))(),
    ChangeNotifierProviderOfProductProvider: () => (T$.ChangeNotifierProviderOfProductProvider = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(product_provider.ProductProvider)))(),
    BuildContextToProductProvider: () => (T$.BuildContextToProductProvider = dart.constFn(dart.fnType(product_provider.ProductProvider, [framework.BuildContext])))(),
    JSArrayOfSingleChildWidget: () => (T$.JSArrayOfSingleChildWidget = dart.constFn(_interceptors.JSArray$(nested.SingleChildWidget)))(),
    ConsumerOfAuthProvider: () => (T$.ConsumerOfAuthProvider = dart.constFn(consumer.Consumer$(auth_provider.AuthProvider)))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndAuthProviderAndWidgetNToWidget: () => (T$.BuildContextAndAuthProviderAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, auth_provider.AuthProvider, T$.WidgetN()])))(),
    BuildContextToCartScreen: () => (T$.BuildContextToCartScreen = dart.constFn(dart.fnType(cart_screen.CartScreen, [framework.BuildContext])))(),
    BuildContextToLoginScreen: () => (T$.BuildContextToLoginScreen = dart.constFn(dart.fnType(login_screen.LoginScreen, [framework.BuildContext])))(),
    BuildContextToSignupScreen: () => (T$.BuildContextToSignupScreen = dart.constFn(dart.fnType(signup_screen.SignupScreen, [framework.BuildContext])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    IdentityMapOfString$BuildContextToWidget: () => (T$.IdentityMapOfString$BuildContextToWidget = dart.constFn(_js_helper.IdentityMap$(core.String, T$.BuildContextToWidget())))(),
    FirebaseAppPlatformToFirebaseApp: () => (T$.FirebaseAppPlatformToFirebaseApp = dart.constFn(dart.fnType(firebase_core.FirebaseApp, [firebase_core_platform_interface.FirebaseAppPlatform])))(),
    JSArrayOfProduct: () => (T$.JSArrayOfProduct = dart.constFn(_interceptors.JSArray$(product.Product)))(),
    ListOfProduct: () => (T$.ListOfProduct = dart.constFn(core.List$(product.Product)))(),
    MapOfString$dynamic: () => (T$.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    QueryDocumentSnapshotOfMapOfString$dynamic: () => (T$.QueryDocumentSnapshotOfMapOfString$dynamic = dart.constFn(cloud_firestore.QueryDocumentSnapshot$(T$.MapOfString$dynamic())))(),
    QueryDocumentSnapshotOfMapOfString$dynamicToProduct: () => (T$.QueryDocumentSnapshotOfMapOfString$dynamicToProduct = dart.constFn(dart.fnType(product.Product, [T$.QueryDocumentSnapshotOfMapOfString$dynamic()])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    QuerySnapshotOfObjectN: () => (T$.QuerySnapshotOfObjectN = dart.constFn(cloud_firestore.QuerySnapshot$(T$.ObjectN())))(),
    FutureBuilderOfQuerySnapshotOfObjectN: () => (T$.FutureBuilderOfQuerySnapshotOfObjectN = dart.constFn(async$.FutureBuilder$(T$.QuerySnapshotOfObjectN())))(),
    BuildContextToProductDetailsScreen: () => (T$.BuildContextToProductDetailsScreen = dart.constFn(dart.fnType(product_details_screen.ProductDetailsScreen, [framework.BuildContext])))(),
    BuildContextAndintToListTile: () => (T$.BuildContextAndintToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [framework.BuildContext, core.int])))(),
    AsyncSnapshotOfQuerySnapshotOfObjectN: () => (T$.AsyncSnapshotOfQuerySnapshotOfObjectN = dart.constFn(async$.AsyncSnapshot$(T$.QuerySnapshotOfObjectN())))(),
    BuildContextAndAsyncSnapshotOfQuerySnapshotOfObjectNToWidget: () => (T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfObjectNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AsyncSnapshotOfQuerySnapshotOfObjectN()])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    VoidToFutureOfvoid: () => (T$.VoidToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextAndintToCartItemWidget: () => (T$.BuildContextAndintToCartItemWidget = dart.constFn(dart.fnType(cart_item_widget.CartItemWidget, [framework.BuildContext, core.int])))(),
    TransactionN: () => (T$.TransactionN = dart.constFn(dart.nullable(firestore$.Transaction)))(),
    VoidToFuture: () => (T$.VoidToFuture = dart.constFn(dart.fnType(async.Future, [])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ExpandoOfObject: () => (T$.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    CompleterOfvoid: () => (T$.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    UserPlatformN: () => (T$.UserPlatformN = dart.constFn(dart.nullable(platform_interface_user.UserPlatform)))(),
    StreamControllerOfUserPlatformN: () => (T$.StreamControllerOfUserPlatformN = dart.constFn(async.StreamController$(T$.UserPlatformN())))(),
    UserWebN: () => (T$.UserWebN = dart.constFn(dart.nullable(firebase_auth_web_user.UserWeb)))(),
    UserN: () => (T$.UserN = dart.constFn(dart.nullable(auth$.User)))(),
    UserNToUserWebN: () => (T$.UserNToUserWebN = dart.constFn(dart.fnType(T$.UserWebN(), [T$.UserN()])))(),
    UserWebNTovoid: () => (T$.UserWebNTovoid = dart.constFn(dart.fnType(dart.void, [T$.UserWebN()])))(),
    AppToFutureOfvoid: () => (T$.AppToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [app$.App])))(),
    _AsyncStarImplOfUserPlatformN: () => (T$._AsyncStarImplOfUserPlatformN = dart.constFn(async._AsyncStarImpl$(T$.UserPlatformN())))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    ObjectNToObjectN: () => (T$.ObjectNToObjectN = dart.constFn(dart.fnType(T$.ObjectN(), [T$.ObjectN()])))(),
    ListOfObjectN: () => (T$.ListOfObjectN = dart.constFn(core.List$(T$.ObjectN())))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    PigeonUserDetailsN: () => (T$.PigeonUserDetailsN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonUserDetails)))(),
    IdentityMapOfString$StreamControllerOfUserPlatformN: () => (T$.IdentityMapOfString$StreamControllerOfUserPlatformN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOfUserPlatformN())))(),
    VoidToFirebaseWebService: () => (T$.VoidToFirebaseWebService = dart.constFn(dart.fnType(firebase_core_web.FirebaseWebService, [])))(),
    dynamicToString: () => (T$.dynamicToString = dart.constFn(dart.fnType(core.String, [dart.dynamic])))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    FirebaseWebServiceToFutureOfvoid: () => (T$.FirebaseWebServiceToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [firebase_core_web.FirebaseWebService])))(),
    ListOfFirebaseAppPlatform: () => (T$.ListOfFirebaseAppPlatform = dart.constFn(core.List$(firebase_core_platform_interface.FirebaseAppPlatform)))(),
    AppToFirebaseAppPlatform: () => (T$.AppToFirebaseAppPlatform = dart.constFn(dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [app$.App])))(),
    VoidToListOfFirebaseAppPlatform: () => (T$.VoidToListOfFirebaseAppPlatform = dart.constFn(dart.fnType(T$.ListOfFirebaseAppPlatform(), [])))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    VoidToApp: () => (T$.VoidToApp = dart.constFn(dart.fnType(app$.App, [])))(),
    IdentityMapOfString$FirebaseWebService: () => (T$.IdentityMapOfString$FirebaseWebService = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_web.FirebaseWebService)))(),
    ObjectAndStackTraceToNever: () => (T$.ObjectAndStackTraceToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace])))(),
    IdentityMapOfString$StringN: () => (T$.IdentityMapOfString$StringN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StringN())))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    PigeonInitializeResponseN: () => (T$.PigeonInitializeResponseN = dart.constFn(dart.nullable(messages$46pigeon.PigeonInitializeResponse)))(),
    PigeonInitializeResponseNTobool: () => (T$.PigeonInitializeResponseNTobool = dart.constFn(dart.fnType(core.bool, [T$.PigeonInitializeResponseN()])))(),
    IdentityMapOfString$MethodChannelFirebaseApp: () => (T$.IdentityMapOfString$MethodChannelFirebaseApp = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_platform_interface.MethodChannelFirebaseApp)))(),
    MapOfObjectN$ObjectN: () => (T$.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T$.ObjectN(), T$.ObjectN())))(),
    MapNOfObjectN$ObjectN: () => (T$.MapNOfObjectN$ObjectN = dart.constFn(dart.nullable(T$.MapOfObjectN$ObjectN())))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    BuildContextAndChangeNotifierNTovoid: () => (T$.BuildContextAndChangeNotifierNTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T$.ChangeNotifierN()])))(),
    ListenableN: () => (T$.ListenableN = dart.constFn(dart.nullable(change_notifier.Listenable)))(),
    InheritedContextOfListenableN: () => (T$.InheritedContextOfListenableN = dart.constFn(provider$.InheritedContext$(T$.ListenableN())))(),
    InheritedContextOfListenableNAndListenableNToFn: () => (T$.InheritedContextOfListenableNAndListenableNToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [T$.InheritedContextOfListenableN(), T$.ListenableN()])))(),
    TTovoid$1: () => (T$.TTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [T]], T => [T$.ObjectN()])))(),
    JSArrayOfPostEventCall: () => (T$.JSArrayOfPostEventCall = dart.constFn(_interceptors.JSArray$(provider$.PostEventCall)))(),
    IdentityMapOfString$ProviderNode: () => (T$.IdentityMapOfString$ProviderNode = dart.constFn(_js_helper.IdentityMap$(core.String, provider$.ProviderNode)))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    _NestedHookElementN: () => (T$._NestedHookElementN = dart.constFn(dart.nullable(nested._NestedHookElement)))(),
    ElementTobool: () => (T$.ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))(),
    LinkedHashMapOfString$ProviderNode: () => (T$.LinkedHashMapOfString$ProviderNode = dart.constFn(collection.LinkedHashMap$(core.String, provider$.ProviderNode)))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    FnToR: () => (T$.FnToR = dart.constFn(dart.gFnType((T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [R, [__t$TToR()]];
    }, (T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [T$.ObjectN(), T$.ObjectN()];
    })))(),
    VoidToT: () => (T$.VoidToT = dart.constFn(dart.gFnType(T => [T, []], T => [T$.ObjectN()])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    JSArrayOfintN: () => (T$.JSArrayOfintN = dart.constFn(_interceptors.JSArray$(T$.intN())))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    VoidToFirebaseAuth: () => (T$.VoidToFirebaseAuth = dart.constFn(dart.fnType(firebase_auth.FirebaseAuth, [])))(),
    UserN$1: () => (T$.UserN$1 = dart.constFn(dart.nullable(firebase_auth.User)))(),
    UserPlatformNToUserN: () => (T$.UserPlatformNToUserN = dart.constFn(dart.fnType(T$.UserN$1(), [T$.UserPlatformN()])))(),
    StreamSubscriptionOfUserN: () => (T$.StreamSubscriptionOfUserN = dart.constFn(async.StreamSubscription$(T$.UserN$1())))(),
    StreamSubscriptionOfUserNTovoid: () => (T$.StreamSubscriptionOfUserNTovoid = dart.constFn(dart.fnType(dart.void, [T$.StreamSubscriptionOfUserN()])))(),
    IdentityMapOfString$FirebaseAuth: () => (T$.IdentityMapOfString$FirebaseAuth = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_auth.FirebaseAuth)))(),
    DocumentReferenceOfMapOfString$dynamic: () => (T$.DocumentReferenceOfMapOfString$dynamic = dart.constFn(cloud_firestore.DocumentReference$(T$.MapOfString$dynamic())))(),
    ListOfList: () => (T$.ListOfList = dart.constFn(core.List$(core.List)))(),
    ListOfListOfObjectN: () => (T$.ListOfListOfObjectN = dart.constFn(core.List$(T$.ListOfObjectN())))(),
    QuerySnapshotOfMapOfString$dynamic: () => (T$.QuerySnapshotOfMapOfString$dynamic = dart.constFn(cloud_firestore.QuerySnapshot$(T$.MapOfString$dynamic())))(),
    QuerySnapshotPlatformTo_JsonQuerySnapshot: () => (T$.QuerySnapshotPlatformTo_JsonQuerySnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonQuerySnapshot, [platform_interface_query_snapshot.QuerySnapshotPlatform])))(),
    ListTobool: () => (T$.ListTobool = dart.constFn(dart.fnType(core.bool, [core.List])))(),
    dynamicAndStringAnddynamicTovoid: () => (T$.dynamicAndStringAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, core.String, dart.dynamic])))(),
    dynamicTobool: () => (T$.dynamicTobool = dart.constFn(dart.fnType(core.bool, [dart.dynamic])))(),
    CollectionReferenceOfMapOfString$dynamic: () => (T$.CollectionReferenceOfMapOfString$dynamic = dart.constFn(cloud_firestore.CollectionReference$(T$.MapOfString$dynamic())))(),
    MapOfString$ObjectN: () => (T$.MapOfString$ObjectN = dart.constFn(core.Map$(core.String, T$.ObjectN())))(),
    SetOptionsN: () => (T$.SetOptionsN = dart.constFn(dart.nullable(set_options.SetOptions)))(),
    DocumentSnapshotOfMapOfString$dynamic: () => (T$.DocumentSnapshotOfMapOfString$dynamic = dart.constFn(cloud_firestore.DocumentSnapshot$(T$.MapOfString$dynamic())))(),
    DocumentSnapshotPlatformTo_JsonDocumentSnapshot: () => (T$.DocumentSnapshotPlatformTo_JsonDocumentSnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonDocumentSnapshot, [platform_interface_document_snapshot.DocumentSnapshotPlatform])))(),
    DocumentReferenceOfObjectN: () => (T$.DocumentReferenceOfObjectN = dart.constFn(cloud_firestore.DocumentReference$(T$.ObjectN())))(),
    IdentityMapOfString$ObjectN: () => (T$.IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ObjectN())))(),
    _FilterObjectToMapOfString$ObjectN: () => (T$._FilterObjectToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [cloud_firestore._FilterObject])))(),
    IdentityMapOfString$Object: () => (T$.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    ObjectNTobool: () => (T$.ObjectNTobool = dart.constFn(dart.fnType(core.bool, [T$.ObjectN()])))(),
    FilterN: () => (T$.FilterN = dart.constFn(dart.nullable(cloud_firestore.Filter)))(),
    JSArrayOfFilterN: () => (T$.JSArrayOfFilterN = dart.constFn(_interceptors.JSArray$(T$.FilterN())))(),
    FilterNTobool: () => (T$.FilterNTobool = dart.constFn(dart.fnType(core.bool, [T$.FilterN()])))(),
    JSArrayOf_FilterObject: () => (T$.JSArrayOf_FilterObject = dart.constFn(_interceptors.JSArray$(cloud_firestore._FilterObject)))(),
    TransactionPlatformToFutureOfNull: () => (T$.TransactionPlatformToFutureOfNull = dart.constFn(dart.fnType(T$.FutureOfNull(), [platform_interface_transaction.TransactionPlatform])))(),
    IndexToMapOfString$dynamic: () => (T$.IndexToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.Index])))(),
    FieldOverridesToMapOfString$dynamic: () => (T$.FieldOverridesToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.FieldOverrides])))(),
    JSArrayOfMapOfString$dynamic: () => (T$.JSArrayOfMapOfString$dynamic = dart.constFn(_interceptors.JSArray$(T$.MapOfString$dynamic())))(),
    ListOfMapOfString$dynamic: () => (T$.ListOfMapOfString$dynamic = dart.constFn(core.List$(T$.MapOfString$dynamic())))(),
    IdentityMapOfString$ListOfMapOfString$dynamic: () => (T$.IdentityMapOfString$ListOfMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ListOfMapOfString$dynamic())))(),
    IdentityMapOfString$FirebaseFirestore: () => (T$.IdentityMapOfString$FirebaseFirestore = dart.constFn(_js_helper.IdentityMap$(core.String, cloud_firestore.FirebaseFirestore)))(),
    dynamicToLoadBundleTaskSnapshot: () => (T$.dynamicToLoadBundleTaskSnapshot = dart.constFn(dart.fnType(cloud_firestore.LoadBundleTaskSnapshot, [dart.dynamic])))(),
    DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot: () => (T$.DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonQueryDocumentSnapshot, [platform_interface_document_snapshot.DocumentSnapshotPlatform])))(),
    DocumentChangePlatformTo_JsonDocumentChange: () => (T$.DocumentChangePlatformTo_JsonDocumentChange = dart.constFn(dart.fnType(cloud_firestore._JsonDocumentChange, [platform_interface_document_change.DocumentChangePlatform])))(),
    LinkedHashMapOfString$dynamic: () => (T$.LinkedHashMapOfString$dynamic = dart.constFn(collection.LinkedHashMap$(core.String, dart.dynamic)))(),
    StringAnddynamicTodynamic: () => (T$.StringAnddynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String, dart.dynamic])))(),
    LinkedMapOfFieldPath$dynamic: () => (T$.LinkedMapOfFieldPath$dynamic = dart.constFn(_js_helper.LinkedMap$(field_path.FieldPath, dart.dynamic)))(),
    ObjectAnddynamicTovoid: () => (T$.ObjectAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, dart.dynamic])))(),
    dynamicTodynamic: () => (T$.dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))(),
    IdentityMapOfString$CartItem: () => (T$.IdentityMapOfString$CartItem = dart.constFn(_js_helper.IdentityMap$(core.String, cart_item.CartItem)))(),
    LinkedHashMapOfString$CartItem: () => (T$.LinkedHashMapOfString$CartItem = dart.constFn(collection.LinkedHashMap$(core.String, cart_item.CartItem)))(),
    StringAndCartItemTovoid: () => (T$.StringAndCartItemTovoid = dart.constFn(dart.fnType(dart.void, [core.String, cart_item.CartItem])))(),
    CartItemToCartItem: () => (T$.CartItemToCartItem = dart.constFn(dart.fnType(cart_item.CartItem, [cart_item.CartItem])))(),
    VoidToCartItem: () => (T$.VoidToCartItem = dart.constFn(dart.fnType(cart_item.CartItem, [])))(),
    ValueKeyOfString: () => (T$.ValueKeyOfString = dart.constFn(key.ValueKey$(core.String)))(),
    DismissDirectionTovoid: () => (T$.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    StreamSubscriptionOfLoadBundleTaskProgress: () => (T$.StreamSubscriptionOfLoadBundleTaskProgress = dart.constFn(async.StreamSubscription$(firestore$.LoadBundleTaskProgress)))(),
    StreamSubscriptionOfLoadBundleTaskProgressTovoid: () => (T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid = dart.constFn(dart.fnType(dart.void, [T$.StreamSubscriptionOfLoadBundleTaskProgress()])))(),
    LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform: () => (T$.LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, [firestore$.LoadBundleTaskProgress])))(),
    DocumentSnapshotN: () => (T$.DocumentSnapshotN = dart.constFn(dart.nullable(firestore$.DocumentSnapshot)))(),
    DocumentSnapshotNToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotNToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [T$.DocumentSnapshotN()])))(),
    DocumentChangeToDocumentChangePlatform: () => (T$.DocumentChangeToDocumentChangePlatform = dart.constFn(dart.fnType(platform_interface_document_change.DocumentChangePlatform, [firestore$.DocumentChange])))(),
    FieldPathToString: () => (T$.FieldPathToString = dart.constFn(dart.fnType(core.String, [field_path.FieldPath])))(),
    ListN: () => (T$.ListN = dart.constFn(dart.nullable(core.List)))(),
    FutureOfQuerySnapshotPlatform: () => (T$.FutureOfQuerySnapshotPlatform = dart.constFn(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    VoidToFutureOfQuerySnapshotPlatform: () => (T$.VoidToFutureOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfQuerySnapshotPlatform(), [])))(),
    StreamOfQuerySnapshotPlatform: () => (T$.StreamOfQuerySnapshotPlatform = dart.constFn(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    QuerySnapshotToQuerySnapshotPlatform: () => (T$.QuerySnapshotToQuerySnapshotPlatform = dart.constFn(dart.fnType(platform_interface_query_snapshot.QuerySnapshotPlatform, [firestore$.QuerySnapshot])))(),
    VoidToStreamOfQuerySnapshotPlatform: () => (T$.VoidToStreamOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfQuerySnapshotPlatform(), [])))(),
    JSArrayOfAggregateQuery: () => (T$.JSArrayOfAggregateQuery = dart.constFn(_interceptors.JSArray$(messages$46pigeon$.AggregateQuery)))(),
    AggregateFieldN: () => (T$.AggregateFieldN = dart.constFn(dart.nullable(platform_interface_query.AggregateField)))(),
    JSArrayOfAggregateFieldN: () => (T$.JSArrayOfAggregateFieldN = dart.constFn(_interceptors.JSArray$(T$.AggregateFieldN())))(),
    AggregateFieldToAggregateQuery: () => (T$.AggregateFieldToAggregateQuery = dart.constFn(dart.fnType(messages$46pigeon$.AggregateQuery, [platform_interface_query.AggregateField])))(),
    FutureOrOfDocumentSnapshot: () => (T$.FutureOrOfDocumentSnapshot = dart.constFn(async.FutureOr$(firestore$.DocumentSnapshot)))(),
    FutureOfDocumentSnapshot: () => (T$.FutureOfDocumentSnapshot = dart.constFn(async.Future$(firestore$.DocumentSnapshot)))(),
    VoidToFutureOfDocumentSnapshot: () => (T$.VoidToFutureOfDocumentSnapshot = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshot(), [])))(),
    StreamOfDocumentSnapshotPlatform: () => (T$.StreamOfDocumentSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    DocumentSnapshotToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [firestore$.DocumentSnapshot])))(),
    VoidToStreamOfDocumentSnapshotPlatform: () => (T$.VoidToStreamOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfDocumentSnapshotPlatform(), [])))(),
    QueryOfQueryJsImpl: () => (T$.QueryOfQueryJsImpl = dart.constFn(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false))))(),
    StreamControllerOfvoid: () => (T$.StreamControllerOfvoid = dart.constFn(async.StreamController$(dart.void)))(),
    dynamicToPromiseJsImpl: () => (T$.dynamicToPromiseJsImpl = dart.constFn(dart.fnType(dart.packageJSType("Promise", false), [dart.dynamic])))(),
    FutureOfObjectN: () => (T$.FutureOfObjectN = dart.constFn(async.Future$(T$.ObjectN())))(),
    ObjectNTodynamic: () => (T$.ObjectNTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ObjectN()])))(),
    voidTodynamic: () => (T$.voidTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.void])))(),
    ExpandoOfFirestore: () => (T$.ExpandoOfFirestore = dart.constFn(core.Expando$(firestore$.Firestore)))(),
    StreamControllerOfLoadBundleTaskProgress: () => (T$.StreamControllerOfLoadBundleTaskProgress = dart.constFn(async.StreamController$(firestore$.LoadBundleTaskProgress)))(),
    LoadBundleTaskProgressJsImplTovoid: () => (T$.LoadBundleTaskProgressJsImplTovoid = dart.constFn(dart.fnType(dart.void, [dart.packageJSType("LoadBundleTaskProgressJsImpl", false)])))(),
    FirestoreErrorTodynamic: () => (T$.FirestoreErrorTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.packageJSType("FirestoreError", false)])))(),
    FirestoreErrorToNull: () => (T$.FirestoreErrorToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("FirestoreError", false)])))(),
    ExpandoOfLoadBundleTask: () => (T$.ExpandoOfLoadBundleTask = dart.constFn(core.Expando$(firestore$.LoadBundleTask)))(),
    ExpandoOfLoadBundleTaskProgress: () => (T$.ExpandoOfLoadBundleTaskProgress = dart.constFn(core.Expando$(firestore$.LoadBundleTaskProgress)))(),
    ExpandoOfWriteBatch: () => (T$.ExpandoOfWriteBatch = dart.constFn(core.Expando$(firestore$.WriteBatch)))(),
    DocumentSnapshotJsImplToDocumentSnapshot: () => (T$.DocumentSnapshotJsImplToDocumentSnapshot = dart.constFn(dart.fnType(firestore$.DocumentSnapshot, [dart.packageJSType("firebase_firestore.DocumentSnapshot", false)])))(),
    DocumentSnapshotJsImplToNull: () => (T$.DocumentSnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("firebase_firestore.DocumentSnapshot", false)])))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    StreamControllerOfDocumentSnapshot: () => (T$.StreamControllerOfDocumentSnapshot = dart.constFn(async.StreamController$(firestore$.DocumentSnapshot)))(),
    FieldPathToList: () => (T$.FieldPathToList = dart.constFn(dart.fnType(core.List, [dart.packageJSType("firebase_firestore.FieldPath", false)])))(),
    ListToList: () => (T$.ListToList = dart.constFn(dart.fnType(core.List, [core.List])))(),
    ExpandoOfDocumentReference: () => (T$.ExpandoOfDocumentReference = dart.constFn(core.Expando$(firestore$.DocumentReference)))(),
    QuerySnapshotJsImplToQuerySnapshot: () => (T$.QuerySnapshotJsImplToQuerySnapshot = dart.constFn(dart.fnType(firestore$.QuerySnapshot, [dart.packageJSType("firebase_firestore.QuerySnapshot", false)])))(),
    QuerySnapshotJsImplToNull: () => (T$.QuerySnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("firebase_firestore.QuerySnapshot", false)])))(),
    StreamControllerOfQuerySnapshot: () => (T$.StreamControllerOfQuerySnapshot = dart.constFn(async.StreamController$(firestore$.QuerySnapshot)))(),
    JSArrayOfDocumentSnapshotJsImpl: () => (T$.JSArrayOfDocumentSnapshotJsImpl = dart.constFn(_interceptors.JSArray$(dart.packageJSType("firebase_firestore.DocumentSnapshot", false))))(),
    CollectionReferenceOfCollectionReferenceJsImpl: () => (T$.CollectionReferenceOfCollectionReferenceJsImpl = dart.constFn(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))))(),
    DocumentReferenceJsImplToDocumentReference: () => (T$.DocumentReferenceJsImplToDocumentReference = dart.constFn(dart.fnType(firestore$.DocumentReference, [dart.packageJSType("firebase_firestore.DocumentReference", false)])))(),
    ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl: () => (T$.ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl = dart.constFn(core.Expando$(T$.CollectionReferenceOfCollectionReferenceJsImpl())))(),
    ExpandoOfDocumentChange: () => (T$.ExpandoOfDocumentChange = dart.constFn(core.Expando$(firestore$.DocumentChange)))(),
    MapNOfString$dynamic: () => (T$.MapNOfString$dynamic = dart.constFn(dart.nullable(T$.MapOfString$dynamic())))(),
    ExpandoOfDocumentSnapshot: () => (T$.ExpandoOfDocumentSnapshot = dart.constFn(core.Expando$(firestore$.DocumentSnapshot)))(),
    dynamicToDocumentChange: () => (T$.dynamicToDocumentChange = dart.constFn(dart.fnType(firestore$.DocumentChange, [dart.dynamic])))(),
    dynamicToDocumentSnapshot: () => (T$.dynamicToDocumentSnapshot = dart.constFn(dart.fnType(firestore$.DocumentSnapshot, [dart.dynamic])))(),
    ExpandoOfQuerySnapshot: () => (T$.ExpandoOfQuerySnapshot = dart.constFn(core.Expando$(firestore$.QuerySnapshot)))(),
    ExpandoOfTransaction: () => (T$.ExpandoOfTransaction = dart.constFn(core.Expando$(firestore$.Transaction)))(),
    AggregateQuerySnapshotJsImplToAggregateQuerySnapshot: () => (T$.AggregateQuerySnapshotJsImplToAggregateQuerySnapshot = dart.constFn(dart.fnType(firestore$.AggregateQuerySnapshot, [dart.packageJSType("firebase_firestore.AggregateQuerySnapshot", false)])))(),
    LinkedHashMapOfString$Object: () => (T$.LinkedHashMapOfString$Object = dart.constFn(collection.LinkedHashMap$(core.String, core.Object)))(),
    ExpandoOfAggregateQuerySnapshot: () => (T$.ExpandoOfAggregateQuerySnapshot = dart.constFn(core.Expando$(firestore$.AggregateQuerySnapshot)))(),
    FutureOfDocumentSnapshotPlatform: () => (T$.FutureOfDocumentSnapshotPlatform = dart.constFn(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    VoidToFutureOfDocumentSnapshotPlatform: () => (T$.VoidToFutureOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshotPlatform(), [])))(),
    MultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))))(),
    MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [T$.MultiFactorInfoOfMultiFactorInfoJsImpl()])))(),
    ListOfMultiFactorInfo: () => (T$.ListOfMultiFactorInfo = dart.constFn(core.List$(platform_interface_multi_factor.MultiFactorInfo)))(),
    FutureOfString: () => (T$.FutureOfString = dart.constFn(async.Future$(core.String)))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    ObjectToNull: () => (T$.ObjectToNull = dart.constFn(dart.fnType(core.Null, [core.Object])))(),
    JSArrayOfStringN: () => (T$.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T$.StringN())))(),
    UserInfoOfUserInfoJsImpl: () => (T$.UserInfoOfUserInfoJsImpl = dart.constFn(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))))(),
    UserInfoOfUserInfoJsImplToMapOfString$dynamic: () => (T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [T$.UserInfoOfUserInfoJsImpl()])))(),
    JSArrayOfUserInfo: () => (T$.JSArrayOfUserInfo = dart.constFn(_interceptors.JSArray$(user_info.UserInfo)))(),
    dynamicToUserInfoOfUserInfoJsImpl: () => (T$.dynamicToUserInfoOfUserInfoJsImpl = dart.constFn(dart.fnType(T$.UserInfoOfUserInfoJsImpl(), [dart.dynamic])))(),
    UserCredentialJsImplToUserCredential: () => (T$.UserCredentialJsImplToUserCredential = dart.constFn(dart.fnType(auth$.UserCredential, [dart.packageJSType("UserCredentialJsImpl", false)])))(),
    ConfirmationResultJsImplToConfirmationResult: () => (T$.ConfirmationResultJsImplToConfirmationResult = dart.constFn(dart.fnType(auth$.ConfirmationResult, [dart.packageJSType("firebase_auth.ConfirmationResult", false)])))(),
    UserJsImplToUser: () => (T$.UserJsImplToUser = dart.constFn(dart.fnType(auth$.User, [dart.packageJSType("UserJsImpl", false)])))(),
    IdTokenResultImplToIdTokenResult: () => (T$.IdTokenResultImplToIdTokenResult = dart.constFn(dart.fnType(auth$.IdTokenResult, [dart.packageJSType("IdTokenResultImpl", false)])))(),
    ExpandoOfUser: () => (T$.ExpandoOfUser = dart.constFn(core.Expando$(auth$.User)))(),
    UserJsImplNToNull: () => (T$.UserJsImplNToNull = dart.constFn(dart.fnType(core.Null, [dart.nullable(dart.packageJSType("UserJsImpl", false))])))(),
    StreamControllerOfUserN: () => (T$.StreamControllerOfUserN = dart.constFn(async.StreamController$(T$.UserN())))(),
    Iterable__ToListOfE: () => (T$.Iterable__ToListOfE = dart.constFn(dart.gFnType(E => [core.List$(E), [core.Iterable], {growable: core.bool}, {}], E => [T$.ObjectN()])))(),
    UserCredentialN: () => (T$.UserCredentialN = dart.constFn(dart.nullable(auth$.UserCredential)))(),
    UserCredentialJsImplNToUserCredentialN: () => (T$.UserCredentialJsImplNToUserCredentialN = dart.constFn(dart.fnType(T$.UserCredentialN(), [dart.nullable(dart.packageJSType("UserCredentialJsImpl", false))])))(),
    ExpandoOfAuth: () => (T$.ExpandoOfAuth = dart.constFn(core.Expando$(auth$.Auth)))(),
    JSArrayOfPersistence: () => (T$.JSArrayOfPersistence = dart.constFn(_interceptors.JSArray$(dart.packageJSType("firebase_auth.Persistence", false))))(),
    MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(dart.fnType(T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), [dart.packageJSType("MultiFactorInfoJsImpl", false)])))(),
    MultiFactorSessionJsImplToMultiFactorSession: () => (T$.MultiFactorSessionJsImplToMultiFactorSession = dart.constFn(dart.fnType(multi_factor.MultiFactorSession, [dart.packageJSType("MultiFactorSessionJsImpl", false)])))(),
    ExpandoOfMultiFactorUser: () => (T$.ExpandoOfMultiFactorUser = dart.constFn(core.Expando$(multi_factor.MultiFactorUser)))(),
    TotpSecretJsImplToTotpSecret: () => (T$.TotpSecretJsImplToTotpSecret = dart.constFn(dart.fnType(multi_factor.TotpSecret, [dart.packageJSType("firebase_auth.TotpSecret", false)])))(),
    ObjectNAndObjectNAndObjectN__Tovoid: () => (T$.ObjectNAndObjectNAndObjectN__Tovoid = dart.constFn(dart.fnType(dart.void, [T$.ObjectN()], [T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN()])))(),
    StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy: () => (T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedTypePolicy", true), [core.String, dart.nullable(dart.packageJSType("DomTrustedTypePolicyOptions", true))])))(),
    StringToDomTrustedScriptUrl: () => (T$.StringToDomTrustedScriptUrl = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedScriptUrl", true), [core.String])))(),
    dynamicToApp: () => (T$.dynamicToApp = dart.constFn(dart.fnType(app$.App, [dart.dynamic])))(),
    BasicMessageChannelOfObjectN: () => (T$.BasicMessageChannelOfObjectN = dart.constFn(platform_channel.BasicMessageChannel$(T$.ObjectN())))(),
    ListNOfObjectN: () => (T$.ListNOfObjectN = dart.constFn(dart.nullable(T$.ListOfObjectN())))(),
    ListOfPigeonInitializeResponseN: () => (T$.ListOfPigeonInitializeResponseN = dart.constFn(core.List$(T$.PigeonInitializeResponseN())))(),
    PigeonFirebaseOptionsN: () => (T$.PigeonFirebaseOptionsN = dart.constFn(dart.nullable(messages$46pigeon.PigeonFirebaseOptions)))(),
    IdentityMapOfStringN$ObjectN: () => (T$.IdentityMapOfStringN$ObjectN = dart.constFn(_js_helper.IdentityMap$(T$.StringN(), T$.ObjectN())))(),
    JSArrayOfPigeonInitializeResponseN: () => (T$.JSArrayOfPigeonInitializeResponseN = dart.constFn(_interceptors.JSArray$(T$.PigeonInitializeResponseN())))(),
    FutureOfListOfObjectN: () => (T$.FutureOfListOfObjectN = dart.constFn(async.Future$(T$.ListOfObjectN())))(),
    ObjectNToFutureOfListOfObjectN: () => (T$.ObjectNToFutureOfListOfObjectN = dart.constFn(dart.fnType(T$.FutureOfListOfObjectN(), [T$.ObjectN()])))(),
    LinkedHashSetOf_NestedHookElement: () => (T$.LinkedHashSetOf_NestedHookElement = dart.constFn(collection.LinkedHashSet$(nested._NestedHookElement)))(),
    SingleChildStateOfSingleChildStatefulWidget: () => (T$.SingleChildStateOfSingleChildStatefulWidget = dart.constFn(nested.SingleChildState$(nested.SingleChildStatefulWidget)))(),
    SingleChildStateMixinOfStatefulWidget: () => (T$.SingleChildStateMixinOfStatefulWidget = dart.constFn(nested.SingleChildStateMixin$(framework.StatefulWidget)))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    PigeonDocumentSnapshotN: () => (T$.PigeonDocumentSnapshotN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonDocumentSnapshot)))(),
    PigeonDocumentChangeN: () => (T$.PigeonDocumentChangeN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonDocumentChange)))(),
    ListOfStringN: () => (T$.ListOfStringN = dart.constFn(core.List$(T$.StringN())))(),
    ListNOfStringN: () => (T$.ListNOfStringN = dart.constFn(dart.nullable(T$.ListOfStringN())))(),
    PigeonQuerySnapshotN: () => (T$.PigeonQuerySnapshotN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonQuerySnapshot)))(),
    AggregateQueryResponseN: () => (T$.AggregateQueryResponseN = dart.constFn(dart.nullable(messages$46pigeon$.AggregateQueryResponse)))(),
    ListOfAggregateQueryResponseN: () => (T$.ListOfAggregateQueryResponseN = dart.constFn(core.List$(T$.AggregateQueryResponseN())))(),
    AggregateQueryResponseTobool: () => (T$.AggregateQueryResponseTobool = dart.constFn(dart.fnType(core.bool, [messages$46pigeon$.AggregateQueryResponse])))(),
    StringAndMapOfString$dynamicTodynamic: () => (T$.StringAndMapOfString$dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String, T$.MapOfString$dynamic()])))(),
    intAndMapNOfString$dynamicTodynamic: () => (T$.intAndMapNOfString$dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.int, T$.MapNOfString$dynamic()])))(),
    IndexFieldToMapOfString$dynamic: () => (T$.IndexFieldToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.IndexField])))(),
    FieldOverrideIndexToMapOfString$dynamic: () => (T$.FieldOverrideIndexToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.FieldOverrideIndex])))(),
    ObjectToFieldPath: () => (T$.ObjectToFieldPath = dart.constFn(dart.fnType(field_path.FieldPath, [core.Object])))(),
    VoidToRN: () => (T$.VoidToRN = dart.constFn(dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), []];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    })))(),
    dynamicAnddynamicToNever: () => (T$.dynamicAnddynamicToNever = dart.constFn(dart.fnType(dart.Never, [dart.dynamic, dart.dynamic])))(),
    dynamicAnddynamicTovoid: () => (T$.dynamicAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, dart.dynamic])))(),
    ObjectTodynamic: () => (T$.ObjectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object])))(),
    LinkedMapOfFieldPath$dynamic$1: () => (T$.LinkedMapOfFieldPath$dynamic$1 = dart.constFn(_js_helper.LinkedMap$(dart.packageJSType("firebase_firestore.FieldPath", false), dart.dynamic)))(),
    JSArrayOfAggregateQueryResponse: () => (T$.JSArrayOfAggregateQueryResponse = dart.constFn(_interceptors.JSArray$(messages$46pigeon$.AggregateQueryResponse)))(),
    ListOfAggregateQuery: () => (T$.ListOfAggregateQuery = dart.constFn(core.List$(messages$46pigeon$.AggregateQuery)))(),
    PigeonActionCodeInfoN: () => (T$.PigeonActionCodeInfoN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonActionCodeInfo)))(),
    PigeonUserCredentialN: () => (T$.PigeonUserCredentialN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonUserCredential)))(),
    PigeonIdTokenResultN: () => (T$.PigeonIdTokenResultN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonIdTokenResult)))(),
    PigeonMultiFactorSessionN: () => (T$.PigeonMultiFactorSessionN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonMultiFactorSession)))(),
    PigeonMultiFactorInfoN: () => (T$.PigeonMultiFactorInfoN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonMultiFactorInfo)))(),
    ListOfPigeonMultiFactorInfoN: () => (T$.ListOfPigeonMultiFactorInfoN = dart.constFn(core.List$(T$.PigeonMultiFactorInfoN())))(),
    PigeonTotpSecretN: () => (T$.PigeonTotpSecretN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonTotpSecret)))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    ExpandoOfApp: () => (T$.ExpandoOfApp = dart.constFn(core.Expando$(app$.App)))(),
    dynamicToFutureOfvoid: () => (T$.dynamicToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [dart.dynamic])))(),
    ObjectAndStackTraceTodynamic: () => (T$.ObjectAndStackTraceTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object, core.StackTrace])))(),
    __ToStream: () => (T$.__ToStream = dart.constFn(dart.fnType(async.Stream, [], {arguments: dart.dynamic, onError: T$.ObjectAndStackTraceTodynamic()}, {})))(),
    ObjectAndStackTrace__ToNever: () => (T$.ObjectAndStackTrace__ToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace], {fromPigeon: core.bool}, {})))(),
    StringToNull: () => (T$.StringToNull = dart.constFn(dart.fnType(core.Null, [core.String])))(),
    _ValueWrapperOfUserPlatform: () => (T$._ValueWrapperOfUserPlatform = dart.constFn(method_channel_firebase_auth._ValueWrapper$(platform_interface_user.UserPlatform)))(),
    VoidToMethodChannelFirebaseAuth: () => (T$.VoidToMethodChannelFirebaseAuth = dart.constFn(dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [])))(),
    _ValueWrapperOfUserPlatformToUserPlatformN: () => (T$._ValueWrapperOfUserPlatformToUserPlatformN = dart.constFn(dart.fnType(T$.UserPlatformN(), [T$._ValueWrapperOfUserPlatform()])))(),
    MapN: () => (T$.MapN = dart.constFn(dart.nullable(core.Map)))(),
    IdentityMapOfString$MethodChannelFirebaseAuth: () => (T$.IdentityMapOfString$MethodChannelFirebaseAuth = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_firebase_auth.MethodChannelFirebaseAuth)))(),
    IdentityMapOfString$MethodChannelMultiFactor: () => (T$.IdentityMapOfString$MethodChannelMultiFactor = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_multi_factor.MethodChannelMultiFactor)))(),
    StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(async.StreamController$(T$._ValueWrapperOfUserPlatform())))(),
    IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOf_ValueWrapperOfUserPlatform())))(),
    UnmodifiableMapViewOfString$String: () => (T$.UnmodifiableMapViewOfString$String = dart.constFn(collection.UnmodifiableMapView$(core.String, core.String)))(),
    CaseInsensitiveMapOfString: () => (T$.CaseInsensitiveMapOfString = dart.constFn(case_insensitive_map.CaseInsensitiveMap$(core.String)))(),
    ListOfAuthenticationChallenge: () => (T$.ListOfAuthenticationChallenge = dart.constFn(core.List$(authentication_challenge.AuthenticationChallenge)))(),
    VoidToAuthenticationChallenge: () => (T$.VoidToAuthenticationChallenge = dart.constFn(dart.fnType(authentication_challenge.AuthenticationChallenge, [])))(),
    VoidToListOfAuthenticationChallenge: () => (T$.VoidToListOfAuthenticationChallenge = dart.constFn(dart.fnType(T$.ListOfAuthenticationChallenge(), [])))(),
    VoidToDateTime: () => (T$.VoidToDateTime = dart.constFn(dart.fnType(core.DateTime, [])))(),
    VoidToMediaType: () => (T$.VoidToMediaType = dart.constFn(dart.fnType(media_type.MediaType, [])))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    StringAndStringTovoid: () => (T$.StringAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.String])))(),
    ListOfListNOfObjectN: () => (T$.ListOfListNOfObjectN = dart.constFn(core.List$(T$.ListNOfObjectN())))(),
    ListNOfListNOfObjectN: () => (T$.ListNOfListNOfObjectN = dart.constFn(dart.nullable(T$.ListOfListNOfObjectN())))(),
    MapOfStringN$ObjectN: () => (T$.MapOfStringN$ObjectN = dart.constFn(core.Map$(T$.StringN(), T$.ObjectN())))(),
    MapNOfStringN$ObjectN: () => (T$.MapNOfStringN$ObjectN = dart.constFn(dart.nullable(T$.MapOfStringN$ObjectN())))(),
    StreamControllerOfQuerySnapshotPlatform: () => (T$.StreamControllerOfQuerySnapshotPlatform = dart.constFn(async.StreamController$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    dynamicToPigeonDocumentSnapshot: () => (T$.dynamicToPigeonDocumentSnapshot = dart.constFn(dart.fnType(messages$46pigeon$.PigeonDocumentSnapshot, [dart.dynamic])))(),
    dynamicToPigeonDocumentChange: () => (T$.dynamicToPigeonDocumentChange = dart.constFn(dart.fnType(messages$46pigeon$.PigeonDocumentChange, [dart.dynamic])))(),
    _AsyncStarImplOfLoadBundleTaskSnapshotPlatform: () => (T$._AsyncStarImplOfLoadBundleTaskSnapshotPlatform = dart.constFn(async._AsyncStarImpl$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    StreamOfLoadBundleTaskSnapshotPlatform: () => (T$.StreamOfLoadBundleTaskSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    VoidToStreamOfLoadBundleTaskSnapshotPlatform: () => (T$.VoidToStreamOfLoadBundleTaskSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfLoadBundleTaskSnapshotPlatform(), [])))(),
    StreamSubscriptionOfLoadBundleTaskSnapshotPlatform: () => (T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatform = dart.constFn(async.StreamSubscription$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid: () => (T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid = dart.constFn(dart.fnType(dart.void, [T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatform()])))(),
    DocumentSnapshotPlatformN: () => (T$.DocumentSnapshotPlatformN = dart.constFn(dart.nullable(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    PigeonDocumentSnapshotNToDocumentSnapshotPlatformN: () => (T$.PigeonDocumentSnapshotNToDocumentSnapshotPlatformN = dart.constFn(dart.fnType(T$.DocumentSnapshotPlatformN(), [T$.PigeonDocumentSnapshotN()])))(),
    MethodChannelDocumentChangeN: () => (T$.MethodChannelDocumentChangeN = dart.constFn(dart.nullable(method_channel_document_change.MethodChannelDocumentChange)))(),
    PigeonDocumentChangeNToMethodChannelDocumentChangeN: () => (T$.PigeonDocumentChangeNToMethodChannelDocumentChangeN = dart.constFn(dart.fnType(T$.MethodChannelDocumentChangeN(), [T$.PigeonDocumentChangeN()])))(),
    FieldPathToListOfString: () => (T$.FieldPathToListOfString = dart.constFn(dart.fnType(T$.ListOfString(), [field_path.FieldPath])))(),
    StreamControllerOfDocumentSnapshotPlatform: () => (T$.StreamControllerOfDocumentSnapshotPlatform = dart.constFn(async.StreamController$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    JSArrayOfPigeonTransactionCommand: () => (T$.JSArrayOfPigeonTransactionCommand = dart.constFn(_interceptors.JSArray$(messages$46pigeon$.PigeonTransactionCommand)))(),
    MethodChannelUserN: () => (T$.MethodChannelUserN = dart.constFn(dart.nullable(method_channel_user.MethodChannelUser)))(),
    ObjectToPigeonMultiFactorInfo: () => (T$.ObjectToPigeonMultiFactorInfo = dart.constFn(dart.fnType(messages$46pigeon$0.PigeonMultiFactorInfo, [core.Object])))(),
    PigeonMultiFactorInfoToMultiFactorInfo: () => (T$.PigeonMultiFactorInfoToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [messages$46pigeon$0.PigeonMultiFactorInfo])))(),
    StreamControllerOfListOfint: () => (T$.StreamControllerOfListOfint = dart.constFn(async.StreamController$(T$.ListOfint())))(),
    SinkOfListOfint: () => (T$.SinkOfListOfint = dart.constFn(core.Sink$(T$.ListOfint())))(),
    intAndStringTovoid: () => (T$.intAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.int, core.String])))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))()
  };
  var S$ = {
    $toString: dartx.toString,
    _delegate: dart.privateName(firebase_core, "_delegate"),
    $map: dartx.map,
    $toList: dartx.toList,
    $hashCode: dartx.hashCode,
    _auth: dart.privateName(auth_provider, "_auth"),
    _user: dart.privateName(auth_provider, "_user"),
    _items: dart.privateName(product_provider, "_items"),
    products: dart.privateName(home_screen, "HomeScreen.products"),
    $isEmpty: dartx.isEmpty,
    $length: dartx.length,
    $_get: dartx._get,
    _emailController: dart.privateName(login_screen, "_emailController"),
    _passwordController: dart.privateName(login_screen, "_passwordController"),
    EdgeInsets_bottom: dart.privateName(edge_insets, "EdgeInsets.bottom"),
    EdgeInsets_right: dart.privateName(edge_insets, "EdgeInsets.right"),
    EdgeInsets_top: dart.privateName(edge_insets, "EdgeInsets.top"),
    EdgeInsets_left: dart.privateName(edge_insets, "EdgeInsets.left"),
    _emailController$1: dart.privateName(signup_screen, "_emailController"),
    _passwordController$1: dart.privateName(signup_screen, "_passwordController"),
    $toStringAsFixed: dartx.toStringAsFixed,
    $values: dartx.values,
    $keys: dartx.keys,
    _webFirestore: dart.privateName(cloud_firestore_web, "_webFirestore"),
    _settings: dart.privateName(cloud_firestore_web, "_settings"),
    _delegate$1: dart.privateName(cloud_firestore_web, "_delegate"),
    Duration__duration: dart.privateName(core, "Duration._duration"),
    Settings_ignoreUndefinedProperties: dart.privateName(settings, "Settings.ignoreUndefinedProperties"),
    Settings_cacheSizeBytes: dart.privateName(settings, "Settings.cacheSizeBytes"),
    Settings_sslEnabled: dart.privateName(settings, "Settings.sslEnabled"),
    Settings_host: dart.privateName(settings, "Settings.host"),
    Settings_persistenceEnabled: dart.privateName(settings, "Settings.persistenceEnabled"),
    _Enum__name: dart.privateName(core, "_Enum._name"),
    _Enum_index: dart.privateName(core, "_Enum.index"),
    GetOptions_serverTimestampBehavior: dart.privateName(get_options, "GetOptions.serverTimestampBehavior"),
    GetOptions_source: dart.privateName(get_options, "GetOptions.source"),
    appInstance: dart.privateName(platform_interface_firestore, "FirebaseFirestorePlatform.appInstance"),
    databaseChoice: dart.privateName(platform_interface_firestore, "FirebaseFirestorePlatform.databaseChoice"),
    _initialized: dart.privateName(firebase_auth_web, "_initialized"),
    _webAuth: dart.privateName(firebase_auth_web, "_webAuth"),
    $_set: dartx._set,
    $location: dartx.location,
    $sessionStorage: dartx.sessionStorage,
    $contains: dartx.contains,
    appInstance$1: dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.appInstance"),
    tenantId: dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.tenantId"),
    _isAutomaticDataCollectionEnabled: dart.privateName(firebase_core_web, "_isAutomaticDataCollectionEnabled"),
    name: dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.name"),
    options: dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.options"),
    _isDefault: dart.privateName(firebase_core_platform_interface, "_isDefault"),
    name$1: dart.privateName(firebase_core_web, "FirebaseWebService.name"),
    override: dart.privateName(firebase_core_web, "FirebaseWebService.override"),
    ensurePluginInitialized: dart.privateName(firebase_core_web, "FirebaseWebService.ensurePluginInitialized"),
    _defaultTrustedPolicyName: dart.privateName(firebase_core_web, "_defaultTrustedPolicyName"),
    $putIfAbsent: dartx.putIfAbsent,
    _ignoredServiceScripts: dart.privateName(firebase_core_web, "_ignoredServiceScripts"),
    $type: dartx.type,
    $text: dartx.text,
    $head: dartx.head,
    $append: dartx.append,
    _initializeCore: dart.privateName(firebase_core_web, "_initializeCore"),
    $remove: dartx.remove,
    $split: dartx.split,
    $replaceAll: dartx.replaceAll,
    plugin: dart.privateName(firebase_core_platform_interface, "FirebaseException.plugin"),
    message: dart.privateName(firebase_core_platform_interface, "FirebaseException.message"),
    code: dart.privateName(firebase_core_platform_interface, "FirebaseException.code"),
    stackTrace: dart.privateName(firebase_core_platform_interface, "FirebaseException.stackTrace"),
    apiKey: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.apiKey"),
    appId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appId"),
    messagingSenderId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.messagingSenderId"),
    projectId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.projectId"),
    authDomain: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.authDomain"),
    databaseURL: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.databaseURL"),
    storageBucket: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.storageBucket"),
    measurementId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.measurementId"),
    trackingId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.trackingId"),
    deepLinkURLScheme: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.deepLinkURLScheme"),
    androidClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.androidClientId"),
    iosClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosClientId"),
    iosBundleId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosBundleId"),
    appGroupId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appGroupId"),
    MapEquality__valueEquality: dart.privateName(equality, "MapEquality._valueEquality"),
    MapEquality__keyEquality: dart.privateName(equality, "MapEquality._keyEquality"),
    $where: dartx.where,
    $cast: dartx.cast,
    _initializeFirebaseAppFromMap: dart.privateName(firebase_core_platform_interface, "_initializeFirebaseAppFromMap"),
    $forEach: dartx.forEach,
    _initializeCore$1: dart.privateName(firebase_core_platform_interface, "_initializeCore"),
    $startsWith: dartx.startsWith,
    $containsKey: dartx.containsKey,
    _isDeleted: dart.privateName(firebase_core_platform_interface, "_isDeleted"),
    _api: dart.privateName(firebase_core_platform_interface, "_api"),
    _isAutomaticDataCollectionEnabled$1: dart.privateName(firebase_core_platform_interface, "_isAutomaticDataCollectionEnabled"),
    _appName: dart.privateName(firebase_core_platform_interface, "_appName"),
    _methodChannelName: dart.privateName(firebase_core_platform_interface, "_methodChannelName"),
    builder: dart.privateName(provider$, "InheritedProvider.builder"),
    _lazy: dart.privateName(provider$, "_lazy"),
    _delegate$2: dart.privateName(provider$, "_delegate"),
    $runtimeType: dartx.runtimeType,
    _child: dart.privateName(nested, "SingleChildStatelessWidget._child"),
    _child$1: dart.privateName(nested, "_child"),
    builder$1: dart.privateName(consumer, "Consumer.builder"),
    builder$2: dart.privateName(consumer, "Consumer2.builder"),
    builder$3: dart.privateName(consumer, "Consumer3.builder"),
    builder$4: dart.privateName(consumer, "Consumer4.builder"),
    builder$5: dart.privateName(consumer, "Consumer5.builder"),
    builder$6: dart.privateName(consumer, "Consumer6.builder"),
    $isNotEmpty: dartx.isNotEmpty,
    _children: dart.privateName(nested, "_children"),
    valueType: dart.privateName(provider$, "ProviderNullException.valueType"),
    widgetType: dart.privateName(provider$, "ProviderNullException.widgetType"),
    valueType$1: dart.privateName(provider$, "ProviderNotFoundException.valueType"),
    widgetType$1: dart.privateName(provider$, "ProviderNotFoundException.widgetType"),
    _removeListener: dart.privateName(provider$, "_removeListener"),
    _value: dart.privateName(provider$, "_value"),
    _hasValue: dart.privateName(provider$, "_hasValue"),
    _isNotifyDependentsEnabled: dart.privateName(provider$, "_isNotifyDependentsEnabled"),
    element: dart.privateName(provider$, "_DelegateState.element"),
    _debugSetInheritedLock: dart.privateName(provider$, "_debugSetInheritedLock"),
    _didBuild: dart.privateName(provider$, "_didBuild"),
    _controller: dart.privateName(provider$, "_controller"),
    eventKind: dart.privateName(provider$, "PostEventCall.eventKind"),
    event: dart.privateName(provider$, "PostEventCall.event"),
    logs: dart.privateName(provider$, "PostEventSpy.logs"),
    _postEvent: dart.privateName(provider$, "_postEvent"),
    $add: dartx.add,
    id: dart.privateName(provider$, "ProviderNode.id"),
    type: dart.privateName(provider$, "ProviderNode.type"),
    childrenNodeIds: dart.privateName(provider$, "ProviderNode.childrenNodeIds"),
    _element: dart.privateName(provider$, "ProviderNode._element"),
    _element$1: dart.privateName(provider$, "_element"),
    _delegateState: dart.privateName(provider$, "_delegateState"),
    _providerDetails: dart.privateName(provider$, "_providerDetails"),
    _parent: dart.privateName(nested, "_parent"),
    _parent$1: dart.privateName(nested, "SingleChildWidgetElementMixin._parent"),
    owner: dart.privateName(provider$, "_InheritedProviderScope.owner"),
    debugType: dart.privateName(provider$, "_InheritedProviderScope.debugType"),
    _shouldNotifyDependents: dart.privateName(provider$, "_shouldNotifyDependents"),
    _debugInheritLocked: dart.privateName(provider$, "_debugInheritLocked"),
    _updatedShouldNotify: dart.privateName(provider$, "_updatedShouldNotify"),
    _isBuildFromExternalSources: dart.privateName(provider$, "_isBuildFromExternalSources"),
    ___InheritedProviderScopeElement__delegateState: dart.privateName(provider$, "_#_InheritedProviderScopeElement#_delegateState"),
    ___InheritedProviderScopeElement__debugId: dart.privateName(provider$, "_#_InheritedProviderScopeElement#_debugId"),
    _debugId: dart.privateName(provider$, "_debugId"),
    $clear: dartx.clear,
    _updateShouldNotify: dart.privateName(provider$, "_updateShouldNotify"),
    _didInitValue: dart.privateName(provider$, "_didInitValue"),
    _previousWidget: dart.privateName(provider$, "_previousWidget"),
    _initError: dart.privateName(provider$, "_initError"),
    DeepCollectionEquality__unordered: dart.privateName(equality, "DeepCollectionEquality._unordered"),
    DeepCollectionEquality__base: dart.privateName(equality, "DeepCollectionEquality._base"),
    builder$7: dart.privateName(selector$, "Selector0.builder"),
    selector: dart.privateName(selector$, "Selector0.selector"),
    _shouldRebuild: dart.privateName(selector$, "_shouldRebuild"),
    _child$2: dart.privateName(nested, "SingleChildStatefulWidget._child"),
    value: dart.privateName(selector$, "_Selector0State.value"),
    _valueListenable: dart.privateName(value_listenable_provider, "_valueListenable"),
    _updateShouldNotify$1: dart.privateName(value_listenable_provider, "_updateShouldNotify"),
    _auth$1: dart.privateName(firebase_auth, "_auth"),
    _delegate$3: dart.privateName(firebase_auth, "_delegate"),
    app: dart.privateName(firebase_auth, "FirebaseAuth.app"),
    _delegatePackingProperty: dart.privateName(firebase_auth, "_delegatePackingProperty"),
    $replaceFirst: dartx.replaceFirst,
    _pipeStreamChanges: dart.privateName(firebase_auth, "_pipeStreamChanges"),
    _instance: dart.privateName(firebase_auth, "_instance"),
    codeIntervalSeconds: dart.privateName(firebase_auth, "TotpSecret.codeIntervalSeconds"),
    codeLength: dart.privateName(firebase_auth, "TotpSecret.codeLength"),
    enrollmentCompletionDeadline: dart.privateName(firebase_auth, "TotpSecret.enrollmentCompletionDeadline"),
    hashingAlgorithm: dart.privateName(firebase_auth, "TotpSecret.hashingAlgorithm"),
    secretKey: dart.privateName(firebase_auth, "TotpSecret.secretKey"),
    email: dart.privateName(firebase_auth_exception, "FirebaseAuthException.email"),
    credential: dart.privateName(firebase_auth_exception, "FirebaseAuthException.credential"),
    phoneNumber: dart.privateName(firebase_auth_exception, "FirebaseAuthException.phoneNumber"),
    tenantId$1: dart.privateName(firebase_auth_exception, "FirebaseAuthException.tenantId"),
    _multiFactor: dart.privateName(firebase_auth, "_multiFactor"),
    query: dart.privateName(cloud_firestore, "AggregateQuery.query"),
    _delegate$4: dart.privateName(cloud_firestore, "_delegate"),
    query$1: dart.privateName(cloud_firestore, "AggregateQuerySnapshot.query"),
    _delegate$5: dart.privateName(cloud_firestore, "_JsonQuery._delegate"),
    _hasStartCursor: dart.privateName(cloud_firestore, "_hasStartCursor"),
    _hasEndCursor: dart.privateName(cloud_firestore, "_hasEndCursor"),
    _isInequality: dart.privateName(cloud_firestore, "_isInequality"),
    $last: dartx.last,
    _assertQueryCursorSnapshot: dart.privateName(cloud_firestore, "_assertQueryCursorSnapshot"),
    _assertQueryCursorValues: dart.privateName(cloud_firestore, "_assertQueryCursorValues"),
    $_equals: dartx._equals,
    _assertValidFieldType: dart.privateName(cloud_firestore, "_assertValidFieldType"),
    ListEquality__elementEquality: dart.privateName(equality, "ListEquality._elementEquality"),
    _originalQuery: dart.privateName(cloud_firestore, "_originalQuery"),
    _originalCollectionReferenceQuery: dart.privateName(cloud_firestore, "_originalCollectionReferenceQuery"),
    _toFirestore: dart.privateName(cloud_firestore, "_toFirestore"),
    _fromFirestore: dart.privateName(cloud_firestore, "_fromFirestore"),
    _mapQuery: dart.privateName(cloud_firestore, "_mapQuery"),
    _firestore: dart.privateName(cloud_firestore, "_firestore"),
    _originalDocumentChange: dart.privateName(cloud_firestore, "_originalDocumentChange"),
    _originalDocumentReference: dart.privateName(cloud_firestore, "_originalDocumentReference"),
    ___JsonDocumentSnapshot_reference: dart.privateName(cloud_firestore, "_#_JsonDocumentSnapshot#reference"),
    ___JsonDocumentSnapshot_metadata: dart.privateName(cloud_firestore, "_#_JsonDocumentSnapshot#metadata"),
    _originalDocumentSnapshot: dart.privateName(cloud_firestore, "_originalDocumentSnapshot"),
    _delegate$6: dart.privateName(platform_interface_field_value, "_delegate"),
    _field: dart.privateName(cloud_firestore, "_field"),
    _operator: dart.privateName(cloud_firestore, "_operator"),
    _value$1: dart.privateName(cloud_firestore, "_value"),
    _queries: dart.privateName(cloud_firestore, "_queries"),
    __Filter__filterQuery: dart.privateName(cloud_firestore, "_#Filter#_filterQuery"),
    __Filter__filterQuery_isSet: dart.privateName(cloud_firestore, "_#Filter#_filterQuery#isSet"),
    __Filter__filterOperator: dart.privateName(cloud_firestore, "_#Filter#_filterOperator"),
    __Filter__filterOperator_isSet: dart.privateName(cloud_firestore, "_#Filter#_filterOperator#isSet"),
    _filterQuery: dart.privateName(cloud_firestore, "_filterQuery"),
    _getOperator: dart.privateName(cloud_firestore, "_getOperator"),
    _getValue: dart.privateName(cloud_firestore, "_getValue"),
    _filterOperator: dart.privateName(cloud_firestore, "_filterOperator"),
    app$1: dart.privateName(cloud_firestore, "FirebaseFirestore.app"),
    databaseURL$1: dart.privateName(cloud_firestore, "FirebaseFirestore.databaseURL"),
    _delegatePackingProperty$1: dart.privateName(cloud_firestore, "_delegatePackingProperty"),
    $endsWith: dartx.endsWith,
    $substring: dartx.substring,
    __LoadBundleTask_stream: dart.privateName(cloud_firestore, "_#LoadBundleTask#stream"),
    _originalQuerySnapshot: dart.privateName(cloud_firestore, "_originalQuerySnapshot"),
    $updateAll: dartx.updateAll,
    id$1: dart.privateName(product, "Product.id"),
    title: dart.privateName(product, "Product.title"),
    description: dart.privateName(product, "Product.description"),
    price: dart.privateName(product, "Product.price"),
    imageUrl: dart.privateName(product, "Product.imageUrl"),
    product: dart.privateName(product_details_screen, "ProductDetailsScreen.product"),
    _items$1: dart.privateName(cart_provider, "_items"),
    $update: dartx.update,
    cartItem: dart.privateName(cart_item_widget, "CartItemWidget.cartItem"),
    productId: dart.privateName(cart_item_widget, "CartItemWidget.productId"),
    __LoadBundleTaskWeb_stream: dart.privateName(load_bundle_task_web, "_#LoadBundleTaskWeb#stream"),
    $toLowerCase: dartx.toLowerCase,
    $join: dartx.join,
    _firestorePlatform: dart.privateName(collection_reference_web, "_firestorePlatform"),
    _webFirestore$1: dart.privateName(collection_reference_web, "_webFirestore"),
    _delegate$7: dart.privateName(collection_reference_web, "_delegate"),
    _pointer: dart.privateName(collection_reference_web, "_pointer"),
    _pointer$1: dart.privateName(platform_interface_collection_reference, "_pointer"),
    isCollectionGroupQuery: dart.privateName(query_web, "QueryWeb.isCollectionGroupQuery"),
    _path: dart.privateName(query_web, "_path"),
    _webQuery: dart.privateName(query_web, "_webQuery"),
    $addAll: dartx.addAll,
    _copyWithParameters: dart.privateName(query_web, "_copyWithParameters"),
    _buildWebQueryWithParameters: dart.privateName(query_web, "_buildWebQueryWithParameters"),
    $whereType: dartx.whereType,
    firestore: dart.privateName(platform_interface_query, "QueryPlatform.firestore"),
    parameters: dart.privateName(platform_interface_query, "QueryPlatform.parameters"),
    firestoreWeb: dart.privateName(document_reference_web, "DocumentReferenceWeb.firestoreWeb"),
    _delegate$8: dart.privateName(document_reference_web, "_delegate"),
    firestore$1: dart.privateName(platform_interface_document_reference, "DocumentReferencePlatform.firestore"),
    _pointer$2: dart.privateName(platform_interface_document_reference, "_pointer"),
    jsObject: dart.privateName(js$0, "JsObjectWrapper.jsObject"),
    taskState: dart.privateName(firestore$, "LoadBundleTaskProgress.taskState"),
    bytesLoaded: dart.privateName(firestore$, "LoadBundleTaskProgress.bytesLoaded"),
    documentsLoaded: dart.privateName(firestore$, "LoadBundleTaskProgress.documentsLoaded"),
    totalBytes: dart.privateName(firestore$, "LoadBundleTaskProgress.totalBytes"),
    totalDocuments: dart.privateName(firestore$, "LoadBundleTaskProgress.totalDocuments"),
    _wrapUpdateFunctionCall: dart.privateName(firestore$, "_wrapUpdateFunctionCall"),
    $insert: dartx.insert,
    _createSnapshotStream: dart.privateName(firestore$, "_createSnapshotStream"),
    $expand: dartx.expand,
    __Query_onSnapshot: dart.privateName(firestore$, "_#Query#onSnapshot"),
    __Query_onSnapshotMetadata: dart.privateName(firestore$, "_#Query#onSnapshotMetadata"),
    _createQueryConstraint: dart.privateName(firestore$, "_createQueryConstraint"),
    _parseFilterWith: dart.privateName(firestore$, "_parseFilterWith"),
    _jsify: dart.privateName(firestore$, "_jsify"),
    _jsQuery: dart.privateName(firestore$, "_jsQuery"),
    __AggregateQuerySnapshot__data: dart.privateName(firestore$, "_#AggregateQuerySnapshot#_data"),
    _data: dart.privateName(firestore$, "_data"),
    _firestore$1: dart.privateName(transaction_web, "_firestore"),
    _webFirestoreDelegate: dart.privateName(transaction_web, "_webFirestoreDelegate"),
    _webTransactionDelegate: dart.privateName(transaction_web, "_webTransactionDelegate"),
    _webFirestoreDelegate$1: dart.privateName(write_batch_web, "_webFirestoreDelegate"),
    _webWriteBatchDelegate: dart.privateName(write_batch_web, "_webWriteBatchDelegate"),
    _webMultiFactorUser: dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorUser"),
    auth: dart.privateName(platform_interface_multi_factor, "MultiFactorPlatform.auth"),
    assertion: dart.privateName(firebase_auth_web_multi_factor, "MultiFactorAssertionWeb.assertion"),
    _auth$2: dart.privateName(firebase_auth_web_multi_factor, "_auth"),
    _webMultiFactorResolver: dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorResolver"),
    _webAuth$1: dart.privateName(firebase_auth_web_multi_factor, "_webAuth"),
    hints: dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.hints"),
    session: dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.session"),
    webSession: dart.privateName(firebase_auth_web_multi_factor, "MultiFactorSessionWeb.webSession"),
    id$2: dart.privateName(platform_interface_multi_factor, "MultiFactorSession.id"),
    webSecret: dart.privateName(firebase_auth_web_multi_factor, "TotpSecretWeb.webSecret"),
    codeIntervalSeconds$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.codeIntervalSeconds"),
    codeLength$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.codeLength"),
    enrollmentCompletionDeadline$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.enrollmentCompletionDeadline"),
    hashingAlgorithm$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.hashingAlgorithm"),
    secretKey$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.secretKey"),
    _auth$3: dart.privateName(firebase_auth_web_confirmation_result, "_auth"),
    _webConfirmationResult: dart.privateName(firebase_auth_web_confirmation_result, "_webConfirmationResult"),
    _webAuth$2: dart.privateName(firebase_auth_web_confirmation_result, "_webAuth"),
    verificationId: dart.privateName(platform_interface_confirmation_result, "ConfirmationResultPlatform.verificationId"),
    __RecaptchaVerifierFactoryWeb__delegate: dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_#RecaptchaVerifierFactoryWeb#_delegate"),
    $document: dartx.document,
    $children: dartx.children,
    $id: dartx.id,
    _delegate$9: dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_delegate"),
    _webUser: dart.privateName(firebase_auth_web_user, "_webUser"),
    _webAuth$3: dart.privateName(firebase_auth_web_user, "_webAuth"),
    auth$1: dart.privateName(platform_interface_user, "UserPlatform.auth"),
    multiFactor: dart.privateName(platform_interface_user, "UserPlatform.multiFactor"),
    _user$1: dart.privateName(platform_interface_user, "_user"),
    auth$2: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.auth"),
    additionalUserInfo: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.additionalUserInfo"),
    credential$1: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.credential"),
    user: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.user"),
    _initUser: dart.privateName(auth$, "_initUser"),
    _onAuthUnsubscribe: dart.privateName(auth$, "_onAuthUnsubscribe"),
    _changeController: dart.privateName(auth$, "_changeController"),
    _onIdTokenChangedUnsubscribe: dart.privateName(auth$, "_onIdTokenChangedUnsubscribe"),
    _idTokenChangedController: dart.privateName(auth$, "_idTokenChangedController"),
    $toInt: dartx.toInt,
    apiKey$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.apiKey"),
    appId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.appId"),
    messagingSenderId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.messagingSenderId"),
    projectId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.projectId"),
    authDomain$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.authDomain"),
    databaseURL$2: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.databaseURL"),
    storageBucket$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.storageBucket"),
    measurementId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.measurementId"),
    trackingId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.trackingId"),
    deepLinkURLScheme$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.deepLinkURLScheme"),
    androidClientId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.androidClientId"),
    iosClientId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.iosClientId"),
    iosBundleId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.iosBundleId"),
    appGroupId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.appGroupId"),
    name$2: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.name"),
    options$1: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.options"),
    isAutomaticDataCollectionEnabled: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.isAutomaticDataCollectionEnabled"),
    pluginConstants: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.pluginConstants"),
    _binaryMessenger: dart.privateName(messages$46pigeon, "_binaryMessenger"),
    $reversed: dartx.reversed,
    _injectedChild: dart.privateName(nested, "_injectedChild"),
    _wrappedChild: dart.privateName(nested, "_wrappedChild"),
    builder$8: dart.privateName(nested, "SingleChildBuilder.builder"),
    id$3: dart.privateName(cart_item, "CartItem.id"),
    title$1: dart.privateName(cart_item, "CartItem.title"),
    quantity: dart.privateName(cart_item, "CartItem.quantity"),
    price$1: dart.privateName(cart_item, "CartItem.price"),
    components: dart.privateName(pointer, "Pointer.components"),
    $isOdd: dartx.isOdd,
    $isEven: dartx.isEven,
    $removeLast: dartx.removeLast,
    _name: dart.privateName(core, "_name"),
    _enumToString: dart.privateName(core, "_enumToString"),
    persistenceEnabled: dart.privateName(messages$46pigeon$, "PigeonFirebaseSettings.persistenceEnabled"),
    host: dart.privateName(messages$46pigeon$, "PigeonFirebaseSettings.host"),
    sslEnabled: dart.privateName(messages$46pigeon$, "PigeonFirebaseSettings.sslEnabled"),
    cacheSizeBytes: dart.privateName(messages$46pigeon$, "PigeonFirebaseSettings.cacheSizeBytes"),
    ignoreUndefinedProperties: dart.privateName(messages$46pigeon$, "PigeonFirebaseSettings.ignoreUndefinedProperties"),
    appName: dart.privateName(messages$46pigeon$, "FirestorePigeonFirebaseApp.appName"),
    settings: dart.privateName(messages$46pigeon$, "FirestorePigeonFirebaseApp.settings"),
    databaseURL$3: dart.privateName(messages$46pigeon$, "FirestorePigeonFirebaseApp.databaseURL"),
    hasPendingWrites: dart.privateName(messages$46pigeon$, "PigeonSnapshotMetadata.hasPendingWrites"),
    isFromCache: dart.privateName(messages$46pigeon$, "PigeonSnapshotMetadata.isFromCache"),
    path: dart.privateName(messages$46pigeon$, "PigeonDocumentSnapshot.path"),
    data: dart.privateName(messages$46pigeon$, "PigeonDocumentSnapshot.data"),
    metadata: dart.privateName(messages$46pigeon$, "PigeonDocumentSnapshot.metadata"),
    type$1: dart.privateName(messages$46pigeon$, "PigeonDocumentChange.type"),
    document: dart.privateName(messages$46pigeon$, "PigeonDocumentChange.document"),
    oldIndex: dart.privateName(messages$46pigeon$, "PigeonDocumentChange.oldIndex"),
    newIndex: dart.privateName(messages$46pigeon$, "PigeonDocumentChange.newIndex"),
    documents: dart.privateName(messages$46pigeon$, "PigeonQuerySnapshot.documents"),
    documentChanges: dart.privateName(messages$46pigeon$, "PigeonQuerySnapshot.documentChanges"),
    metadata$1: dart.privateName(messages$46pigeon$, "PigeonQuerySnapshot.metadata"),
    source: dart.privateName(messages$46pigeon$, "PigeonGetOptions.source"),
    serverTimestampBehavior: dart.privateName(messages$46pigeon$, "PigeonGetOptions.serverTimestampBehavior"),
    merge: dart.privateName(messages$46pigeon$, "PigeonDocumentOption.merge"),
    mergeFields: dart.privateName(messages$46pigeon$, "PigeonDocumentOption.mergeFields"),
    type$2: dart.privateName(messages$46pigeon$, "PigeonTransactionCommand.type"),
    path$1: dart.privateName(messages$46pigeon$, "PigeonTransactionCommand.path"),
    data$1: dart.privateName(messages$46pigeon$, "PigeonTransactionCommand.data"),
    option: dart.privateName(messages$46pigeon$, "PigeonTransactionCommand.option"),
    path$2: dart.privateName(messages$46pigeon$, "DocumentReferenceRequest.path"),
    data$2: dart.privateName(messages$46pigeon$, "DocumentReferenceRequest.data"),
    option$1: dart.privateName(messages$46pigeon$, "DocumentReferenceRequest.option"),
    source$1: dart.privateName(messages$46pigeon$, "DocumentReferenceRequest.source"),
    serverTimestampBehavior$1: dart.privateName(messages$46pigeon$, "DocumentReferenceRequest.serverTimestampBehavior"),
    where: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.where"),
    orderBy: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.orderBy"),
    limit: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.limit"),
    limitToLast: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.limitToLast"),
    startAt: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.startAt"),
    startAfter: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.startAfter"),
    endAt: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.endAt"),
    endBefore: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.endBefore"),
    filters: dart.privateName(messages$46pigeon$, "PigeonQueryParameters.filters"),
    type$3: dart.privateName(messages$46pigeon$, "AggregateQuery.type"),
    field: dart.privateName(messages$46pigeon$, "AggregateQuery.field"),
    type$4: dart.privateName(messages$46pigeon$, "AggregateQueryResponse.type"),
    field$1: dart.privateName(messages$46pigeon$, "AggregateQueryResponse.field"),
    value$1: dart.privateName(messages$46pigeon$, "AggregateQueryResponse.value"),
    $isNaN: dartx.isNaN,
    _binaryMessenger$1: dart.privateName(messages$46pigeon$, "_binaryMessenger"),
    bytes: dart.privateName(blob, "Blob.bytes"),
    components$1: dart.privateName(field_path, "FieldPath.components"),
    latitude: dart.privateName(geo_point, "GeoPoint.latitude"),
    longitude: dart.privateName(geo_point, "GeoPoint.longitude"),
    source$2: dart.privateName(get_options, "GetOptions.source"),
    serverTimestampBehavior$2: dart.privateName(get_options, "GetOptions.serverTimestampBehavior"),
    synchronizeTabs: dart.privateName(persistence_settings, "PersistenceSettings.synchronizeTabs"),
    query$2: dart.privateName(platform_interface_aggregate_query, "AggregateQueryPlatform.query"),
    _count: dart.privateName(platform_interface_aggregate_query_snapshot, "_count"),
    _sum: dart.privateName(platform_interface_aggregate_query_snapshot, "_sum"),
    _average: dart.privateName(platform_interface_aggregate_query_snapshot, "_average"),
    type$5: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.type"),
    oldIndex$1: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.oldIndex"),
    newIndex$1: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.newIndex"),
    document$1: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.document"),
    _firestore$2: dart.privateName(platform_interface_document_snapshot, "_firestore"),
    _data$1: dart.privateName(platform_interface_document_snapshot, "_data"),
    _metadata: dart.privateName(platform_interface_document_snapshot, "_metadata"),
    _pointer$3: dart.privateName(platform_interface_document_snapshot, "_pointer"),
    collectionGroup: dart.privateName(platform_interface_index_definitions, "Index.collectionGroup"),
    queryScope: dart.privateName(platform_interface_index_definitions, "Index.queryScope"),
    fields: dart.privateName(platform_interface_index_definitions, "Index.fields"),
    fieldPath: dart.privateName(platform_interface_index_definitions, "IndexField.fieldPath"),
    order: dart.privateName(platform_interface_index_definitions, "IndexField.order"),
    arrayConfig: dart.privateName(platform_interface_index_definitions, "IndexField.arrayConfig"),
    collectionGroup$1: dart.privateName(platform_interface_index_definitions, "FieldOverrides.collectionGroup"),
    fieldPath$1: dart.privateName(platform_interface_index_definitions, "FieldOverrides.fieldPath"),
    indexes: dart.privateName(platform_interface_index_definitions, "FieldOverrides.indexes"),
    queryScope$1: dart.privateName(platform_interface_index_definitions, "FieldOverrideIndex.queryScope"),
    order$1: dart.privateName(platform_interface_index_definitions, "FieldOverrideIndex.order"),
    arrayConfig$1: dart.privateName(platform_interface_index_definitions, "FieldOverrideIndex.arrayConfig"),
    taskState$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.taskState"),
    bytesLoaded$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.bytesLoaded"),
    documentsLoaded$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.documentsLoaded"),
    totalBytes$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.totalBytes"),
    totalDocuments$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.totalDocuments"),
    field$2: dart.privateName(platform_interface_query, "sum.field"),
    field$3: dart.privateName(platform_interface_query, "average.field"),
    docs: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.docs"),
    docChanges: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.docChanges"),
    metadata$2: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.metadata"),
    merge$1: dart.privateName(set_options, "SetOptions.merge"),
    mergeFields$1: dart.privateName(set_options, "SetOptions.mergeFields"),
    persistenceEnabled$1: dart.privateName(settings, "Settings.persistenceEnabled"),
    host$1: dart.privateName(settings, "Settings.host"),
    sslEnabled$1: dart.privateName(settings, "Settings.sslEnabled"),
    cacheSizeBytes$1: dart.privateName(settings, "Settings.cacheSizeBytes"),
    ignoreUndefinedProperties$1: dart.privateName(settings, "Settings.ignoreUndefinedProperties"),
    hasPendingWrites$1: dart.privateName(snapshot_metadata, "SnapshotMetadataPlatform.hasPendingWrites"),
    isFromCache$1: dart.privateName(snapshot_metadata, "SnapshotMetadataPlatform.isFromCache"),
    _seconds: dart.privateName(timestamp, "_seconds"),
    _nanoseconds: dart.privateName(timestamp, "_nanoseconds"),
    $floor: dartx.floor,
    $truncate: dartx.truncate,
    $compareTo: dartx.compareTo,
    data$3: dart.privateName(field_value_web, "FieldValueWeb.data"),
    _aggregateQueries: dart.privateName(aggregate_query_web, "_aggregateQueries"),
    _delegate$10: dart.privateName(aggregate_query_web, "_delegate"),
    _webQuery$1: dart.privateName(aggregate_query_web, "_webQuery"),
    operation: dart.privateName(action_code_info, "ActionCodeInfo.operation"),
    _data$2: dart.privateName(action_code_info, "_data"),
    email$1: dart.privateName(action_code_info, "ActionCodeInfoData.email"),
    previousEmail: dart.privateName(action_code_info, "ActionCodeInfoData.previousEmail"),
    androidPackageName: dart.privateName(action_code_settings, "ActionCodeSettings.androidPackageName"),
    androidMinimumVersion: dart.privateName(action_code_settings, "ActionCodeSettings.androidMinimumVersion"),
    androidInstallApp: dart.privateName(action_code_settings, "ActionCodeSettings.androidInstallApp"),
    iOSBundleId: dart.privateName(action_code_settings, "ActionCodeSettings.iOSBundleId"),
    dynamicLinkDomain: dart.privateName(action_code_settings, "ActionCodeSettings.dynamicLinkDomain"),
    handleCodeInApp: dart.privateName(action_code_settings, "ActionCodeSettings.handleCodeInApp"),
    url: dart.privateName(action_code_settings, "ActionCodeSettings.url"),
    isNewUser: dart.privateName(additional_user_info, "AdditionalUserInfo.isNewUser"),
    profile: dart.privateName(additional_user_info, "AdditionalUserInfo.profile"),
    providerId: dart.privateName(additional_user_info, "AdditionalUserInfo.providerId"),
    username: dart.privateName(additional_user_info, "AdditionalUserInfo.username"),
    authorizationCode: dart.privateName(additional_user_info, "AdditionalUserInfo.authorizationCode"),
    providerId$1: dart.privateName(auth_credential, "AuthCredential.providerId"),
    signInMethod: dart.privateName(auth_credential, "AuthCredential.signInMethod"),
    token: dart.privateName(auth_credential, "AuthCredential.token"),
    accessToken: dart.privateName(auth_credential, "AuthCredential.accessToken"),
    providerId$2: dart.privateName(auth_provider$, "AuthProvider.providerId"),
    resolver: dart.privateName(firebase_auth_multi_factor_exception, "FirebaseAuthMultiFactorExceptionPlatform.resolver"),
    _data$3: dart.privateName(id_token_result, "_data"),
    id$4: dart.privateName(messages$46pigeon$0, "PigeonMultiFactorSession.id"),
    verificationId$1: dart.privateName(messages$46pigeon$0, "PigeonPhoneMultiFactorAssertion.verificationId"),
    verificationCode: dart.privateName(messages$46pigeon$0, "PigeonPhoneMultiFactorAssertion.verificationCode"),
    displayName: dart.privateName(messages$46pigeon$0, "PigeonMultiFactorInfo.displayName"),
    enrollmentTimestamp: dart.privateName(messages$46pigeon$0, "PigeonMultiFactorInfo.enrollmentTimestamp"),
    factorId: dart.privateName(messages$46pigeon$0, "PigeonMultiFactorInfo.factorId"),
    uid: dart.privateName(messages$46pigeon$0, "PigeonMultiFactorInfo.uid"),
    phoneNumber$1: dart.privateName(messages$46pigeon$0, "PigeonMultiFactorInfo.phoneNumber"),
    appName$1: dart.privateName(messages$46pigeon$0, "AuthPigeonFirebaseApp.appName"),
    tenantId$2: dart.privateName(messages$46pigeon$0, "AuthPigeonFirebaseApp.tenantId"),
    email$2: dart.privateName(messages$46pigeon$0, "PigeonActionCodeInfoData.email"),
    previousEmail$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeInfoData.previousEmail"),
    operation$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeInfo.operation"),
    data$4: dart.privateName(messages$46pigeon$0, "PigeonActionCodeInfo.data"),
    isNewUser$1: dart.privateName(messages$46pigeon$0, "PigeonAdditionalUserInfo.isNewUser"),
    providerId$3: dart.privateName(messages$46pigeon$0, "PigeonAdditionalUserInfo.providerId"),
    username$1: dart.privateName(messages$46pigeon$0, "PigeonAdditionalUserInfo.username"),
    authorizationCode$1: dart.privateName(messages$46pigeon$0, "PigeonAdditionalUserInfo.authorizationCode"),
    profile$1: dart.privateName(messages$46pigeon$0, "PigeonAdditionalUserInfo.profile"),
    providerId$4: dart.privateName(messages$46pigeon$0, "PigeonAuthCredential.providerId"),
    signInMethod$1: dart.privateName(messages$46pigeon$0, "PigeonAuthCredential.signInMethod")
  };
  var S = {
    nativeId: dart.privateName(messages$46pigeon$0, "PigeonAuthCredential.nativeId"),
    accessToken$1: dart.privateName(messages$46pigeon$0, "PigeonAuthCredential.accessToken"),
    uid$1: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.uid"),
    email$3: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.email"),
    displayName$1: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.displayName"),
    photoUrl: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.photoUrl"),
    phoneNumber$2: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.phoneNumber"),
    isAnonymous: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.isAnonymous"),
    isEmailVerified: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.isEmailVerified"),
    providerId$5: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.providerId"),
    tenantId$3: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.tenantId"),
    refreshToken: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.refreshToken"),
    creationTimestamp: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.creationTimestamp"),
    lastSignInTimestamp: dart.privateName(messages$46pigeon$0, "PigeonUserInfo.lastSignInTimestamp"),
    userInfo: dart.privateName(messages$46pigeon$0, "PigeonUserDetails.userInfo"),
    providerData: dart.privateName(messages$46pigeon$0, "PigeonUserDetails.providerData"),
    user$1: dart.privateName(messages$46pigeon$0, "PigeonUserCredential.user"),
    additionalUserInfo$1: dart.privateName(messages$46pigeon$0, "PigeonUserCredential.additionalUserInfo"),
    credential$2: dart.privateName(messages$46pigeon$0, "PigeonUserCredential.credential"),
    url$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeSettings.url"),
    dynamicLinkDomain$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeSettings.dynamicLinkDomain"),
    handleCodeInApp$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeSettings.handleCodeInApp"),
    iOSBundleId$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeSettings.iOSBundleId"),
    androidPackageName$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeSettings.androidPackageName"),
    androidInstallApp$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeSettings.androidInstallApp"),
    androidMinimumVersion$1: dart.privateName(messages$46pigeon$0, "PigeonActionCodeSettings.androidMinimumVersion"),
    appVerificationDisabledForTesting: dart.privateName(messages$46pigeon$0, "PigeonFirebaseAuthSettings.appVerificationDisabledForTesting"),
    userAccessGroup: dart.privateName(messages$46pigeon$0, "PigeonFirebaseAuthSettings.userAccessGroup"),
    phoneNumber$3: dart.privateName(messages$46pigeon$0, "PigeonFirebaseAuthSettings.phoneNumber"),
    smsCode: dart.privateName(messages$46pigeon$0, "PigeonFirebaseAuthSettings.smsCode"),
    forceRecaptchaFlow: dart.privateName(messages$46pigeon$0, "PigeonFirebaseAuthSettings.forceRecaptchaFlow"),
    providerId$6: dart.privateName(messages$46pigeon$0, "PigeonSignInProvider.providerId"),
    scopes: dart.privateName(messages$46pigeon$0, "PigeonSignInProvider.scopes"),
    customParameters: dart.privateName(messages$46pigeon$0, "PigeonSignInProvider.customParameters"),
    phoneNumber$4: dart.privateName(messages$46pigeon$0, "PigeonVerifyPhoneNumberRequest.phoneNumber"),
    timeout: dart.privateName(messages$46pigeon$0, "PigeonVerifyPhoneNumberRequest.timeout"),
    forceResendingToken: dart.privateName(messages$46pigeon$0, "PigeonVerifyPhoneNumberRequest.forceResendingToken"),
    autoRetrievedSmsCodeForTesting: dart.privateName(messages$46pigeon$0, "PigeonVerifyPhoneNumberRequest.autoRetrievedSmsCodeForTesting"),
    multiFactorInfoId: dart.privateName(messages$46pigeon$0, "PigeonVerifyPhoneNumberRequest.multiFactorInfoId"),
    multiFactorSessionId: dart.privateName(messages$46pigeon$0, "PigeonVerifyPhoneNumberRequest.multiFactorSessionId"),
    token$1: dart.privateName(messages$46pigeon$0, "PigeonIdTokenResult.token"),
    expirationTimestamp: dart.privateName(messages$46pigeon$0, "PigeonIdTokenResult.expirationTimestamp"),
    authTimestamp: dart.privateName(messages$46pigeon$0, "PigeonIdTokenResult.authTimestamp"),
    issuedAtTimestamp: dart.privateName(messages$46pigeon$0, "PigeonIdTokenResult.issuedAtTimestamp"),
    signInProvider: dart.privateName(messages$46pigeon$0, "PigeonIdTokenResult.signInProvider"),
    claims: dart.privateName(messages$46pigeon$0, "PigeonIdTokenResult.claims"),
    signInSecondFactor: dart.privateName(messages$46pigeon$0, "PigeonIdTokenResult.signInSecondFactor"),
    displayName$2: dart.privateName(messages$46pigeon$0, "PigeonUserProfile.displayName"),
    photoUrl$1: dart.privateName(messages$46pigeon$0, "PigeonUserProfile.photoUrl"),
    displayNameChanged: dart.privateName(messages$46pigeon$0, "PigeonUserProfile.displayNameChanged"),
    photoUrlChanged: dart.privateName(messages$46pigeon$0, "PigeonUserProfile.photoUrlChanged"),
    codeIntervalSeconds$2: dart.privateName(messages$46pigeon$0, "PigeonTotpSecret.codeIntervalSeconds"),
    codeLength$2: dart.privateName(messages$46pigeon$0, "PigeonTotpSecret.codeLength"),
    enrollmentCompletionDeadline$2: dart.privateName(messages$46pigeon$0, "PigeonTotpSecret.enrollmentCompletionDeadline"),
    hashingAlgorithm$2: dart.privateName(messages$46pigeon$0, "PigeonTotpSecret.hashingAlgorithm"),
    secretKey$2: dart.privateName(messages$46pigeon$0, "PigeonTotpSecret.secretKey"),
    _binaryMessenger$2: dart.privateName(messages$46pigeon$0, "_binaryMessenger"),
    displayName$3: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.displayName"),
    enrollmentTimestamp$1: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.enrollmentTimestamp"),
    factorId$1: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.factorId"),
    uid$2: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.uid"),
    phoneNumber$5: dart.privateName(platform_interface_multi_factor, "PhoneMultiFactorInfo.phoneNumber"),
    _scopes: dart.privateName(apple_auth, "_scopes"),
    _parameters: dart.privateName(apple_auth, "_parameters"),
    idToken: dart.privateName(oauth, "OAuthCredential.idToken"),
    secret: dart.privateName(oauth, "OAuthCredential.secret"),
    rawNonce: dart.privateName(oauth, "OAuthCredential.rawNonce"),
    email$4: dart.privateName(email_auth, "EmailAuthCredential.email"),
    password: dart.privateName(email_auth, "EmailAuthCredential.password"),
    emailLink: dart.privateName(email_auth, "EmailAuthCredential.emailLink"),
    _scopes$1: dart.privateName(facebook_auth, "_scopes"),
    _parameters$1: dart.privateName(facebook_auth, "_parameters"),
    _scopes$2: dart.privateName(github_auth, "_scopes"),
    _parameters$2: dart.privateName(github_auth, "_parameters"),
    _scopes$3: dart.privateName(google_auth, "_scopes"),
    _parameters$3: dart.privateName(google_auth, "_parameters"),
    _scopes$4: dart.privateName(microsoft_auth, "_scopes"),
    _parameters$4: dart.privateName(microsoft_auth, "_parameters"),
    _scopes$5: dart.privateName(oauth, "_scopes"),
    _parameters$5: dart.privateName(oauth, "_parameters"),
    verificationId$2: dart.privateName(phone_auth, "PhoneAuthCredential.verificationId"),
    smsCode$1: dart.privateName(phone_auth, "PhoneAuthCredential.smsCode"),
    _parameters$6: dart.privateName(twitter_auth, "_parameters"),
    _scopes$6: dart.privateName(yahoo_auth, "_scopes"),
    _parameters$7: dart.privateName(yahoo_auth, "_parameters"),
    _data$4: dart.privateName(user_info, "_data"),
    _creationTimestamp: dart.privateName(user_metadata, "_creationTimestamp"),
    _lastSignInTime: dart.privateName(user_metadata, "_lastSignInTime"),
    settings$1: dart.privateName(method_channel_firestore, "MethodChannelFirebaseFirestore.settings"),
    __MethodChannelFirebaseFirestore_pigeonApp: dart.privateName(method_channel_firestore, "_#MethodChannelFirebaseFirestore#pigeonApp"),
    StandardMethodCodec_messageCodec: dart.privateName(message_codecs, "StandardMethodCodec.messageCodec"),
    currentUser: dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.currentUser"),
    languageCode: dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.languageCode"),
    _api$1: dart.privateName(method_channel_firebase_auth, "_api"),
    _handleIdTokenChangesListener: dart.privateName(method_channel_firebase_auth, "_handleIdTokenChangesListener"),
    _handleAuthStateChangesListener: dart.privateName(method_channel_firebase_auth, "_handleAuthStateChangesListener"),
    _createBroadcastStream: dart.privateName(method_channel_firebase_auth, "_createBroadcastStream"),
    _ValueWrapper_value: dart.privateName(method_channel_firebase_auth, "_ValueWrapper.value"),
    MethodChannel__binaryMessenger: dart.privateName(platform_channel, "MethodChannel._binaryMessenger"),
    MethodChannel_codec: dart.privateName(platform_channel, "MethodChannel.codec"),
    MethodChannel_name: dart.privateName(platform_channel, "MethodChannel.name"),
    value$2: dart.privateName(method_channel_firebase_auth, "_ValueWrapper.value"),
    _api$2: dart.privateName(method_channel_multi_factor, "_api"),
    _resolverId: dart.privateName(method_channel_multi_factor, "_resolverId"),
    _auth$4: dart.privateName(method_channel_multi_factor, "_auth"),
    credential$3: dart.privateName(method_channel_multi_factor, "MultiFactorAssertion.credential"),
    assertionId: dart.privateName(method_channel_multi_factor, "TotpMultiFactorAssertion.assertionId"),
    scheme: dart.privateName(authentication_challenge, "AuthenticationChallenge.scheme"),
    parameters$1: dart.privateName(authentication_challenge, "AuthenticationChallenge.parameters"),
    $indexOf: dartx.indexOf,
    type$6: dart.privateName(media_type, "MediaType.type"),
    subtype: dart.privateName(media_type, "MediaType.subtype"),
    parameters$2: dart.privateName(media_type, "MediaType.parameters"),
    $replaceAllMapped: dartx.replaceAllMapped,
    type$7: dart.privateName(method_channel_field_value, "MethodChannelFieldValue.type"),
    value$3: dart.privateName(method_channel_field_value, "MethodChannelFieldValue.value"),
    isCollectionGroupQuery$1: dart.privateName(method_channel_query, "MethodChannelQuery.isCollectionGroupQuery"),
    pigeonApp: dart.privateName(method_channel_query, "MethodChannelQuery.pigeonApp"),
    _pointer$4: dart.privateName(method_channel_query, "_pointer"),
    _pigeonParameters: dart.privateName(method_channel_query, "_pigeonParameters"),
    _copyWithParameters$1: dart.privateName(method_channel_query, "_copyWithParameters"),
    __MethodChannelLoadBundleTask_stream: dart.privateName(method_channel_load_bundle_task, "_#MethodChannelLoadBundleTask#stream"),
    _pointer$5: dart.privateName(method_channel_collection_reference, "MethodChannelCollectionReference._pointer"),
    _pointer$6: dart.privateName(method_channel_collection_reference, "_pointer"),
    pigeonApp$1: dart.privateName(method_channel_document_reference, "MethodChannelDocumentReference.pigeonApp"),
    __MethodChannelDocumentReference__pointer: dart.privateName(method_channel_document_reference, "_#MethodChannelDocumentReference#_pointer"),
    _pointer$7: dart.privateName(method_channel_document_reference, "_pointer"),
    appName$2: dart.privateName(method_channel_transaction, "MethodChannelTransaction.appName"),
    databaseURL$4: dart.privateName(method_channel_transaction, "MethodChannelTransaction.databaseURL"),
    pigeonApp$2: dart.privateName(method_channel_transaction, "MethodChannelTransaction.pigeonApp"),
    __MethodChannelTransaction__transactionId: dart.privateName(method_channel_transaction, "_#MethodChannelTransaction#_transactionId"),
    __MethodChannelTransaction__firestore: dart.privateName(method_channel_transaction, "_#MethodChannelTransaction#_firestore"),
    _commands: dart.privateName(method_channel_transaction, "_commands"),
    _firestore$3: dart.privateName(method_channel_transaction, "_firestore"),
    _transactionId: dart.privateName(method_channel_transaction, "_transactionId"),
    pigeonApp$3: dart.privateName(method_channel_write_batch, "MethodChannelWriteBatch.pigeonApp"),
    _writes: dart.privateName(method_channel_write_batch, "_writes"),
    _committed: dart.privateName(method_channel_write_batch, "_committed"),
    _assertNotCommitted: dart.privateName(method_channel_write_batch, "_assertNotCommitted"),
    _api$3: dart.privateName(method_channel_user, "_api"),
    _decode: dart.privateName(decoder, "_decode"),
    _state: dart.privateName(decoder, "_state"),
    ___Sink__size: dart.privateName(decoder, "_#_Sink#_size"),
    _sink: dart.privateName(decoder, "_sink"),
    _size: dart.privateName(decoder, "_size"),
    _close: dart.privateName(decoder, "_close"),
    _digitForByte: dart.privateName(decoder, "_digitForByte"),
    _State__name: dart.privateName(decoder, "_State._name"),
    $asUint8List: dartx.asUint8List,
    $toRadixString: dartx.toRadixString,
    $toUpperCase: dartx.toUpperCase,
    _name$1: dart.privateName(decoder, "_State._name"),
    _name$2: dart.privateName(decoder, "_name"),
    _sink$1: dart.privateName(encoder, "_sink"),
    $codeUnits: dartx.codeUnits,
    $setRange: dartx.setRange,
    _pigeonParameters$1: dart.privateName(method_channel_aggregate_query, "_pigeonParameters"),
    _path$1: dart.privateName(method_channel_aggregate_query, "_path"),
    _pigeonApp: dart.privateName(method_channel_aggregate_query, "_pigeonApp"),
    _aggregateQueries$1: dart.privateName(method_channel_aggregate_query, "_aggregateQueries"),
    _isCollectionGroupQuery: dart.privateName(method_channel_aggregate_query, "_isCollectionGroupQuery"),
    _table: dart.privateName(typed_queue, "_TypedQueue._table"),
    _head: dart.privateName(typed_queue, "_TypedQueue._head"),
    _tail: dart.privateName(typed_queue, "_TypedQueue._tail"),
    _table$1: dart.privateName(typed_queue, "_table"),
    _head$1: dart.privateName(typed_queue, "_head"),
    _tail$1: dart.privateName(typed_queue, "_tail"),
    _createBuffer: dart.privateName(typed_queue, "_createBuffer"),
    _createList: dart.privateName(typed_queue, "_createList"),
    _writeToList: dart.privateName(typed_queue, "_writeToList"),
    _growAtCapacity: dart.privateName(typed_queue, "_growAtCapacity"),
    _growTo: dart.privateName(typed_queue, "_growTo"),
    _defaultValue: dart.privateName(typed_queue, "_defaultValue"),
    $fillRange: dartx.fillRange,
    $rightShift: dartx['>>'],
    $sublist: dartx.sublist,
    _add: dart.privateName(typed_queue, "_add"),
    _add$1: dart.privateName(queue_list, "_add"),
    _head$2: dart.privateName(queue_list, "_head"),
    _writeToList$1: dart.privateName(queue_list, "_writeToList"),
    _grow: dart.privateName(typed_queue, "_grow"),
    _grow$1: dart.privateName(queue_list, "_grow"),
    _preGrow: dart.privateName(typed_queue, "_preGrow"),
    _preGrow$1: dart.privateName(queue_list, "_preGrow"),
    _table$2: dart.privateName(queue_list, "_table"),
    _tail$2: dart.privateName(queue_list, "_tail"),
    _head_: dart.privateName(typed_queue, "_head="),
    _table_: dart.privateName(typed_queue, "_table="),
    _tail_: dart.privateName(typed_queue, "_tail="),
    _buffer: dart.privateName(typed_buffer, "_buffer"),
    _length: dart.privateName(typed_buffer, "_length"),
    _typedBuffer: dart.privateName(typed_buffer, "_typedBuffer"),
    _defaultValue$1: dart.privateName(typed_buffer, "_defaultValue"),
    _createBuffer$1: dart.privateName(typed_buffer, "_createBuffer"),
    _createBiggerBuffer: dart.privateName(typed_buffer, "_createBiggerBuffer"),
    _grow$2: dart.privateName(typed_buffer, "_grow"),
    _add$2: dart.privateName(typed_buffer, "_add"),
    _addAll: dart.privateName(typed_buffer, "_addAll"),
    _insertKnownLength: dart.privateName(typed_buffer, "_insertKnownLength"),
    _ensureCapacity: dart.privateName(typed_buffer, "_ensureCapacity"),
    _setRange: dart.privateName(typed_buffer, "_setRange"),
    $elementSizeInBytes: dartx.elementSizeInBytes,
    $offsetInBytes: dartx.offsetInBytes,
    $buffer: dartx.buffer,
    $insertAll: dartx.insertAll
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.fn(firebase_core.FirebaseApp['_#_#tearOff'], T$.FirebaseAppPlatformToFirebaseApp());
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 16,
        [S$.EdgeInsets_right]: 16,
        [S$.EdgeInsets_top]: 16,
        [S$.EdgeInsets_left]: 16
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 30000000
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: settings.Settings.prototype,
        [S$.Settings_ignoreUndefinedProperties]: false,
        [S$.Settings_cacheSizeBytes]: null,
        [S$.Settings_sslEnabled]: null,
        [S$.Settings_host]: null,
        [S$.Settings_persistenceEnabled]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: messages$46pigeon$.ServerTimestampBehavior.prototype,
        [S$._Enum__name]: "none",
        [S$._Enum_index]: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: messages$46pigeon$.Source.prototype,
        [S$._Enum__name]: "serverAndCache",
        [S$._Enum_index]: 0
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: get_options.GetOptions.prototype,
        [S$.GetOptions_serverTimestampBehavior]: C[6] || CT.C6,
        [S$.GetOptions_source]: C[7] || CT.C7
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C9() {
      return C[9] = dart.fn(firebase_core_web._createFromJsApp, T$.AppToFirebaseAppPlatform());
    },
    get C10() {
      return C[10] = dart.fn(firebase_core_web._handleException, T$.ObjectAndStackTraceToNever());
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: equality.MapEquality.prototype,
        [S$.MapEquality__valueEquality]: C[12] || CT.C12,
        [S$.MapEquality__keyEquality]: C[12] || CT.C12
      });
    },
    get C13() {
      return C[13] = dart.fn(change_notifier_provider.ChangeNotifierProvider._dispose, T$.BuildContextAndChangeNotifierNTovoid());
    },
    get C14() {
      return C[14] = dart.fn(listenable_provider.ListenableProvider._startListening, T$.InheritedContextOfListenableNAndListenableNToFn());
    },
    get C15() {
      return C[15] = dart.constList([], core.String);
    },
    get C16() {
      return C[16] = dart.constMap(T$.ObjectN(), T$.ObjectN(), []);
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [S$.DeepCollectionEquality__unordered]: false,
        [S$.DeepCollectionEquality__base]: C[12] || CT.C12
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [S$._Enum__name]: "normal",
        [S$._Enum_index]: 0
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [S$._Enum__name]: "light",
        [S$._Enum_index]: 0
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: messages$46pigeon$.AggregateSource.prototype,
        [S$._Enum__name]: "server",
        [S$._Enum_index]: 0
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: equality.ListEquality.prototype,
        [S$.ListEquality__elementEquality]: C[12] || CT.C12
      });
    },
    get C22() {
      return C[22] = dart.fn(cloud_firestore._CodecUtility.valueEncode, T$.dynamicTodynamic());
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: messages$46pigeon$.ServerTimestampBehavior.prototype,
        [S$._Enum__name]: "estimate",
        [S$._Enum_index]: 1
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: messages$46pigeon$.ServerTimestampBehavior.prototype,
        [S$._Enum__name]: "previous",
        [S$._Enum_index]: 2
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: messages$46pigeon$.Source.prototype,
        [S$._Enum__name]: "cache",
        [S$._Enum_index]: 2
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: messages$46pigeon$.Source.prototype,
        [S$._Enum__name]: "server",
        [S$._Enum_index]: 1
      });
    },
    get C27() {
      return C[27] = dart.const(new _js_helper.PrivateSymbol.new('_pointer', S$._pointer));
    },
    get C28() {
      return C[28] = dart.fn(utils$0.jsify, T$.ObjectNTodynamic());
    },
    get C29() {
      return C[29] = dart.fn(firestore$.DocumentSnapshot.getInstance, T$.DocumentSnapshotJsImplToDocumentSnapshot());
    },
    get C30() {
      return C[30] = dart.fn(firestore$.QuerySnapshot.getInstance, T$.QuerySnapshotJsImplToQuerySnapshot());
    },
    get C31() {
      return C[31] = dart.fn(firestore$.DocumentReference.getInstance, T$.DocumentReferenceJsImplToDocumentReference());
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: messages$46pigeon$.AggregateType.prototype,
        [S$._Enum__name]: "count",
        [S$._Enum_index]: 0
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: messages$46pigeon$.AggregateType.prototype,
        [S$._Enum__name]: "sum",
        [S$._Enum_index]: 1
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: messages$46pigeon$.AggregateType.prototype,
        [S$._Enum__name]: "average",
        [S$._Enum_index]: 2
      });
    },
    get C35() {
      return C[35] = dart.fn(firestore$.AggregateQuerySnapshot.getInstance, T$.AggregateQuerySnapshotJsImplToAggregateQuerySnapshot());
    },
    get C36() {
      return C[36] = dart.fn(web_utils$.fromInteropMultiFactorInfo, T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo());
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [S$._Enum__name]: "compact",
        [S$._Enum_index]: 1
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [S$._Enum__name]: "dark",
        [S$._Enum_index]: 1
      });
    },
    get C39() {
      return C[39] = dart.fn(auth$.UserCredential['_#fromJsObject#tearOff'], T$.UserCredentialJsImplToUserCredential());
    },
    get C40() {
      return C[40] = dart.fn(auth$.ConfirmationResult['_#fromJsObject#tearOff'], T$.ConfirmationResultJsImplToConfirmationResult());
    },
    get C41() {
      return C[41] = dart.fn(auth$.IdTokenResult['_#_fromJsObject#tearOff'], T$.IdTokenResultImplToIdTokenResult());
    },
    get C43() {
      return C[43] = dart.fn(core.List['_#from#tearOff'], T$.Iterable__ToListOfE());
    },
    get C42() {
      return C[42] = dart.const(dart.gbind(C[43] || CT.C43, core.String));
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "LOCAL",
        [S$._Enum_index]: 0
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "INDEXED_DB",
        [S$._Enum_index]: 1
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "SESSION",
        [S$._Enum_index]: 3
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "NONE",
        [S$._Enum_index]: 2
      });
    },
    get C48() {
      return C[48] = dart.fn(multi_factor.fromJsMultiFactorInfo, T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl());
    },
    get C49() {
      return C[49] = dart.fn(multi_factor.MultiFactorSession['_#fromJsObject#tearOff'], T$.MultiFactorSessionJsImplToMultiFactorSession());
    },
    get C50() {
      return C[50] = dart.fn(multi_factor.TotpSecret['_#fromJsObject#tearOff'], T$.TotpSecretJsImplToTotpSecret());
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: messages$46pigeon._FirebaseCoreHostApiCodec.prototype
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: test_api._TestFirebaseCoreHostApiCodec.prototype
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: messages$46pigeon$.DocumentChangeType.prototype,
        [S$._Enum__name]: "added",
        [S$._Enum_index]: 0
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: messages$46pigeon$.DocumentChangeType.prototype,
        [S$._Enum__name]: "modified",
        [S$._Enum_index]: 1
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: messages$46pigeon$.DocumentChangeType.prototype,
        [S$._Enum__name]: "removed",
        [S$._Enum_index]: 2
      });
    },
    get C54() {
      return C[54] = dart.constList([C[55] || CT.C55, C[56] || CT.C56, C[57] || CT.C57], messages$46pigeon$.DocumentChangeType);
    },
    get C58() {
      return C[58] = dart.constList([C[7] || CT.C7, C[26] || CT.C26, C[25] || CT.C25], messages$46pigeon$.Source);
    },
    get C59() {
      return C[59] = dart.constList([C[6] || CT.C6, C[23] || CT.C23, C[24] || CT.C24], messages$46pigeon$.ServerTimestampBehavior);
    },
    get C60() {
      return C[60] = dart.constList([C[20] || CT.C20], messages$46pigeon$.AggregateSource);
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: messages$46pigeon$.PigeonTransactionResult.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 0
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: messages$46pigeon$.PigeonTransactionResult.prototype,
        [S$._Enum__name]: "failure",
        [S$._Enum_index]: 1
      });
    },
    get C61() {
      return C[61] = dart.constList([C[62] || CT.C62, C[63] || CT.C63], messages$46pigeon$.PigeonTransactionResult);
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: messages$46pigeon$.PigeonTransactionType.prototype,
        [S$._Enum__name]: "get",
        [S$._Enum_index]: 0
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: messages$46pigeon$.PigeonTransactionType.prototype,
        [S$._Enum__name]: "update",
        [S$._Enum_index]: 1
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: messages$46pigeon$.PigeonTransactionType.prototype,
        [S$._Enum__name]: "set",
        [S$._Enum_index]: 2
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: messages$46pigeon$.PigeonTransactionType.prototype,
        [S$._Enum__name]: "deleteType",
        [S$._Enum_index]: 3
      });
    },
    get C64() {
      return C[64] = dart.constList([C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67, C[68] || CT.C68], messages$46pigeon$.PigeonTransactionType);
    },
    get C69() {
      return C[69] = dart.constList([C[32] || CT.C32, C[33] || CT.C33, C[34] || CT.C34], messages$46pigeon$.AggregateType);
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "arrayUnion",
        [S$._Enum_index]: 0
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "arrayRemove",
        [S$._Enum_index]: 1
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "delete",
        [S$._Enum_index]: 2
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "serverTimestamp",
        [S$._Enum_index]: 3
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "incrementDouble",
        [S$._Enum_index]: 4
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "incrementInteger",
        [S$._Enum_index]: 5
      });
    },
    get C70() {
      return C[70] = dart.constMap(method_channel_field_value.FieldValueType, core.int, [C[71] || CT.C71, 184, C[72] || CT.C72, 185, C[73] || CT.C73, 186, C[74] || CT.C74, 187, C[75] || CT.C75, 189, C[76] || CT.C76, 190]);
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: field_path_type.FieldPathType.prototype,
        [S$._Enum__name]: "documentId",
        [S$._Enum_index]: 0
      });
    },
    get C77() {
      return C[77] = dart.constMap(field_path_type.FieldPathType, core.int, [C[78] || CT.C78, 191]);
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: messages$46pigeon$._FirebaseFirestoreHostApiCodec.prototype
      });
    },
    get C80() {
      return C[80] = dart.constList([C[78] || CT.C78], field_path_type.FieldPathType);
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "running",
        [S$._Enum_index]: 0
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 1
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "error",
        [S$._Enum_index]: 2
      });
    },
    get C81() {
      return C[81] = dart.constList([C[82] || CT.C82, C[83] || CT.C83, C[84] || CT.C84], load_bundle_task_state.LoadBundleTaskState);
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: platform_interface_index_definitions.Order.prototype,
        [S$._Enum__name]: "ascending",
        [S$._Enum_index]: 0
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: platform_interface_index_definitions.Order.prototype,
        [S$._Enum__name]: "descending",
        [S$._Enum_index]: 1
      });
    },
    get C85() {
      return C[85] = dart.constList([C[86] || CT.C86, C[87] || CT.C87], platform_interface_index_definitions.Order);
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: platform_interface_index_definitions.ArrayConfig.prototype,
        [S$._Enum__name]: "contains",
        [S$._Enum_index]: 0
      });
    },
    get C88() {
      return C[88] = dart.constList([C[89] || CT.C89], platform_interface_index_definitions.ArrayConfig);
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: platform_interface_index_definitions.QueryScope.prototype,
        [S$._Enum__name]: "collection",
        [S$._Enum_index]: 0
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: platform_interface_index_definitions.QueryScope.prototype,
        [S$._Enum__name]: "collectionGroup",
        [S$._Enum_index]: 1
      });
    },
    get C90() {
      return C[90] = dart.constList([C[91] || CT.C91, C[92] || CT.C92], platform_interface_index_definitions.QueryScope);
    },
    get C93() {
      return C[93] = dart.fn(_flutterfire_internals._testException, T$.ObjectNTobool());
    },
    get C94() {
      return C[94] = dart.fn(encode_utility.EncodeUtility.valueEncode, T$.dynamicTodynamic());
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: messages$46pigeon$0.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "unknown",
        [S$._Enum_index]: 0
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: messages$46pigeon$0.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "passwordReset",
        [S$._Enum_index]: 1
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: messages$46pigeon$0.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "verifyEmail",
        [S$._Enum_index]: 2
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: messages$46pigeon$0.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "recoverEmail",
        [S$._Enum_index]: 3
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: messages$46pigeon$0.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "emailSignIn",
        [S$._Enum_index]: 4
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: messages$46pigeon$0.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "verifyAndChangeEmail",
        [S$._Enum_index]: 5
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: messages$46pigeon$0.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "revertSecondFactorAddition",
        [S$._Enum_index]: 6
      });
    },
    get C95() {
      return C[95] = dart.constList([C[96] || CT.C96, C[97] || CT.C97, C[98] || CT.C98, C[99] || CT.C99, C[100] || CT.C100, C[101] || CT.C101, C[102] || CT.C102], messages$46pigeon$0.ActionCodeInfoOperation);
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: messages$46pigeon$0._FirebaseAuthHostApiCodec.prototype
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: messages$46pigeon$0._FirebaseAuthUserHostApiCodec.prototype
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: messages$46pigeon$0._MultiFactorUserHostApiCodec.prototype
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: messages$46pigeon$0._MultiFactoResolverHostApiCodec.prototype
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: messages$46pigeon$0._MultiFactorTotpHostApiCodec.prototype
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: messages$46pigeon$0._GenerateInterfacesCodec.prototype
      });
    },
    get C109() {
      return C[109] = dart.constList([C[18] || CT.C18, C[37] || CT.C37], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
    },
    get C110() {
      return C[110] = dart.constList([C[19] || CT.C19, C[38] || CT.C38], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
    },
    get C111() {
      return C[111] = dart.constList([C[44] || CT.C44, C[45] || CT.C45, C[47] || CT.C47, C[46] || CT.C46], types.Persistence);
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: firestore_message_codec.FirestoreMessageCodec.prototype
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [S.StandardMethodCodec_messageCodec]: C[113] || CT.C113
      });
    },
    get C114() {
      return C[114] = dart.fn(exception.convertPlatformException, T$.ObjectAndStackTraceToNever());
    },
    get C115() {
      return C[115] = dart.fn(exception$0.convertPlatformException, T$.ObjectAndStackTrace__ToNever());
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: T$._ValueWrapperOfUserPlatform().prototype,
        [S._ValueWrapper_value]: null
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [S.StandardMethodCodec_messageCodec]: C[52] || CT.C52
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [S.MethodChannel__binaryMessenger]: null,
        [S.MethodChannel_codec]: C[118] || CT.C118,
        [S.MethodChannel_name]: "plugins.flutter.io/firebase_auth"
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: chunked_coding.ChunkedCodingCodec.prototype
      });
    },
    get C120() {
      return C[120] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C121() {
      return C[121] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C122() {
      return C[122] = dart.constList([C[71] || CT.C71, C[72] || CT.C72, C[73] || CT.C73, C[74] || CT.C74, C[75] || CT.C75, C[76] || CT.C76], method_channel_field_value.FieldValueType);
    },
    get C123() {
      return C[123] = dart.const(new _js_helper.PrivateSymbol.new('_pointer', S._pointer$6));
    },
    get C124() {
      return C[124] = dart.fn(messages$46pigeon$0.PigeonMultiFactorInfo.decode, T$.ObjectToPigeonMultiFactorInfo());
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "boundary"
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "size"
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "size before LF"
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body"
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body before CR"
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body before LF"
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end before CR"
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end before LF"
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end"
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: decoder.ChunkedCodingDecoder.prototype
      });
    },
    get C135() {
      return C[135] = dart.constList([], core.int);
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: encoder.ChunkedCodingEncoder.prototype
      });
    },
    get C137() {
      return C[137] = dart.const(new _js_helper.PrivateSymbol.new('_add', S._add));
    },
    get C138() {
      return C[138] = dart.const(new _js_helper.PrivateSymbol.new('_head', S._head$1));
    },
    get C139() {
      return C[139] = dart.const(new _js_helper.PrivateSymbol.new('_writeToList', S._writeToList));
    },
    get C140() {
      return C[140] = dart.const(new _js_helper.PrivateSymbol.new('_grow', S._grow));
    },
    get C141() {
      return C[141] = dart.const(new _js_helper.PrivateSymbol.new('_preGrow', S._preGrow));
    },
    get C142() {
      return C[142] = dart.const(new _js_helper.PrivateSymbol.new('_table', S._table$1));
    },
    get C143() {
      return C[143] = dart.const(new _js_helper.PrivateSymbol.new('_tail', S._tail$1));
    },
    get C144() {
      return C[144] = dart.const(new _js_helper.PrivateSymbol.new('_head=', S._head_));
    },
    get C145() {
      return C[145] = dart.const(new _js_helper.PrivateSymbol.new('_table=', S._table_));
    },
    get C146() {
      return C[146] = dart.const(new _js_helper.PrivateSymbol.new('_tail=', S._tail_));
    }
  }, false);
  var C = Array(147).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:firebase_core/firebase_core.dart",
    "file:///zapp/project/lib/providers/auth_provider.dart",
    "file:///zapp/project/lib/providers/product_provider.dart",
    "file:///zapp/project/lib/screens/home_screen.dart",
    "file:///zapp/project/lib/screens/login_screen.dart",
    "file:///zapp/project/lib/screens/signup_screen.dart",
    "file:///zapp/project/lib/screens/cart_screen.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_firestore.dart",
    "package:cloud_firestore_web/cloud_firestore_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/firebase_auth_web.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart",
    "package:firebase_auth_web/firebase_auth_web.dart",
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart",
    "package:firebase_core_web/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/method_channel/method_channel_firebase.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart",
    "package:nested/nested.dart",
    "package:provider/src/provider.dart",
    "package:provider/src/async_provider.dart",
    "package:provider/src/listenable_provider.dart",
    "package:provider/src/change_notifier_provider.dart",
    "package:provider/src/consumer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart",
    "package:provider/src/proxy_provider.dart",
    "package:provider/src/reassemble_handler.dart",
    "package:provider/src/selector.dart",
    "package:provider/src/value_listenable_provider.dart",
    "package:firebase_auth/firebase_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/firebase_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/multi_factor.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/user.dart",
    "package:cloud_firestore/cloud_firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/collection_reference.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_reference.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/filters.dart",
    "package:cloud_firestore_platform_interface/src/filters.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/transaction.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/write_batch.dart",
    "file:///zapp/project/lib/models/product.dart",
    "file:///zapp/project/lib/screens/product_details_screen.dart",
    "file:///zapp/project/lib/providers/cart_provider.dart",
    "file:///zapp/project/lib/widgets/cart_item_widget.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task.dart",
    "package:cloud_firestore_web/src/load_bundle_task_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query.dart",
    "package:cloud_firestore_web/src/query_web.dart",
    "package:cloud_firestore_web/src/collection_reference_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_reference.dart",
    "package:cloud_firestore_web/src/document_reference_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value_factory.dart",
    "package:cloud_firestore_web/src/field_value_factory_web.dart",
    "package:firebase_core_web/src/interop/utils/js.dart",
    "package:cloud_firestore_web/src/interop/firestore.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_transaction.dart",
    "package:cloud_firestore_web/src/transaction_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_write_batch.dart",
    "package:cloud_firestore_web/src/write_batch_web.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart",
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart",
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart",
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart",
    "package:firebase_auth_web/src/interop/auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/auth.dart",
    "package:firebase_auth_web/src/interop/multi_factor.dart",
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart",
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/pigeon/test_api.dart",
    "file:///zapp/project/lib/models/cart_item.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/internal/pointer.dart",
    "package:cloud_firestore_platform_interface/src/internal/pointer.dart",
    "package:cloud_firestore_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/utils/firestore_message_codec.dart",
    "package:cloud_firestore_platform_interface/src/blob.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/field_path.dart",
    "package:cloud_firestore_platform_interface/src/field_path.dart",
    "package:cloud_firestore_platform_interface/src/field_path_type.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/geo_point.dart",
    "package:cloud_firestore_platform_interface/src/geo_point.dart",
    "package:cloud_firestore_platform_interface/src/get_options.dart",
    "package:cloud_firestore_platform_interface/src/load_bundle_task_state.dart",
    "package:cloud_firestore_platform_interface/src/persistence_settings.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_collection_reference.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_change.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_index_definitions.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query_snapshot.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/set_options.dart",
    "package:cloud_firestore_platform_interface/src/set_options.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/settings.dart",
    "package:cloud_firestore_platform_interface/src/settings.dart",
    "package:cloud_firestore_platform_interface/src/snapshot_metadata.dart",
    "package:cloud_firestore_platform_interface/src/timestamp.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/_flutterfire_internals.dart",
    "package:cloud_firestore_web/src/utils/decode_utility.dart",
    "package:cloud_firestore_web/src/utils/encode_utility.dart",
    "package:cloud_firestore_web/src/field_value_web.dart",
    "package:cloud_firestore_web/src/aggregate_query_web.dart",
    "package:firebase_auth_platform_interface/src/action_code_info.dart",
    "package:firebase_auth_platform_interface/src/action_code_settings.dart",
    "package:firebase_auth_platform_interface/src/additional_user_info.dart",
    "package:firebase_auth_platform_interface/src/auth_credential.dart",
    "package:firebase_auth_platform_interface/src/auth_provider.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart",
    "package:firebase_auth_platform_interface/src/id_token_result.dart",
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/oauth.dart",
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart",
    "package:firebase_auth_platform_interface/src/types.dart",
    "package:firebase_auth_platform_interface/src/user_info.dart",
    "package:firebase_auth_platform_interface/src/user_metadata.dart",
    "package:firebase_core_web/src/interop/app.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_field_value_factory.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value_factory.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_firestore.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart",
    "package:http_parser/src/authentication_challenge.dart",
    "package:http_parser/src/case_insensitive_map.dart",
    "package:http_parser/src/chunked_coding.dart",
    "package:http_parser/src/media_type.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_load_bundle_task.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_collection_reference.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_reference.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_transaction.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_transaction.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_write_batch.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart",
    "package:http_parser/src/chunked_coding/decoder.dart",
    "package:http_parser/src/chunked_coding/encoder.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_aggregate_query.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_change.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/utils/auto_id_generator.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart",
    "package:typed_data/src/typed_queue.dart",
    "package:typed_data/src/typed_buffer.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[S$.$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new provider$.MultiProvider.new({providers: T$.JSArrayOfSingleChildWidget().of([new (T$.ChangeNotifierProviderOfAuthProvider()).new({create: dart.fn(ctx => new auth_provider.AuthProvider.new(), T$.BuildContextToAuthProvider())}), new (T$.ChangeNotifierProviderOfProductProvider()).new({create: dart.fn(ctx => new product_provider.ProductProvider.new(), T$.BuildContextToProductProvider())})]), child: new app.MaterialApp.new({title: "E-Commerce App", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.blue}), home: new (T$.ConsumerOfAuthProvider()).new({builder: dart.fn((ctx, auth, _) => auth.isAuth ? new home_screen.HomeScreen.new() : new login_screen.LoginScreen.new(), T$.BuildContextAndAuthProviderAndWidgetNToWidget())}), routes: new (T$.IdentityMapOfString$BuildContextToWidget()).from(["/cart", dart.fn(ctx => new cart_screen.CartScreen.new(), T$.BuildContextToCartScreen()), "/login", dart.fn(ctx => new login_screen.LoginScreen.new(), T$.BuildContextToLoginScreen()), "/signup", dart.fn(ctx => new signup_screen.SignupScreen.new(), T$.BuildContextToSignupScreen())])})});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    return async.async(dart.void, function* main$() {
      binding.WidgetsFlutterBinding.ensureInitialized();
      yield firebase_core.Firebase.initializeApp({options: new firebase_core_platform_interface.FirebaseOptions.new({apiKey: "AIzaSyDGEmiAamRphZxO5wI_4zaEVReq0tiGoSU", authDomain: "newsample-5c41c.firebaseapp.com", projectId: "newsample-5c41c", storageBucket: "newsample-5c41c.appspot.com", messagingSenderId: "217938412238", appId: "1:217938412238:web:389ea1a3fa5ecdc312c69f", measurementId: "G-7YB5YDQVD1"})});
      binding.runApp(new main.MyApp.new());
    });
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    cloud_firestore_web.FirebaseFirestoreWeb.registerWith(registrar);
    firebase_auth_web.FirebaseAuthWeb.registerWith(registrar);
    firebase_core_web.FirebaseCoreWeb.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  firebase_core.FirebaseApp = class FirebaseApp extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_core.FirebaseApp.__(_delegate);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield this[S$._delegate].delete();
      }).bind(this));
    }
    get name() {
      return this[S$._delegate].name;
    }
    get options() {
      return this[S$._delegate].options;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._delegate].isAutomaticDataCollectionEnabled;
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return this[S$._delegate].setAutomaticDataCollectionEnabled(enabled);
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return this[S$._delegate].setAutomaticResourceManagementEnabled(enabled);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.FirebaseApp.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.FirebaseApp)) + "(" + this.name + ")";
    }
  };
  (firebase_core.FirebaseApp.__ = function(_delegate) {
    this[S$._delegate] = _delegate;
    firebase_core_platform_interface.FirebaseAppPlatform.verify(this[S$._delegate]);
  }).prototype = firebase_core.FirebaseApp.prototype;
  dart.addTypeTests(firebase_core.FirebaseApp);
  dart.addTypeCaches(firebase_core.FirebaseApp);
  dart.setMethodSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getMethods(firebase_core.FirebaseApp.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setGetterSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getGetters(firebase_core.FirebaseApp.__proto__),
    name: core.String,
    options: firebase_core_platform_interface.FirebaseOptions,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core.FirebaseApp, I[1]);
  dart.setFieldSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core.FirebaseApp.__proto__),
    [S$._delegate]: dart.finalFieldType(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.defineExtensionMethods(firebase_core.FirebaseApp, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.FirebaseApp, ['hashCode']);
  firebase_core.Firebase = class Firebase extends core.Object {
    static ['_#_#tearOff']() {
      return new firebase_core.Firebase.__();
    }
    static get _delegate() {
      let t0;
      t0 = firebase_core.Firebase.delegatePackingProperty;
      return t0 == null ? firebase_core.Firebase.delegatePackingProperty = firebase_core_platform_interface.FirebasePlatform.instance : t0;
    }
    static get apps() {
      return firebase_core.Firebase._delegate.apps[S$.$map](firebase_core.FirebaseApp, C[1] || CT.C1)[S$.$toList]({growable: false});
    }
    static initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core.FirebaseApp, function* initializeApp() {
        let app = (yield firebase_core.Firebase._delegate.initializeApp({name: name, options: options}));
        return new firebase_core.FirebaseApp.__(app);
      });
    }
    static app(name = "[DEFAULT]") {
      let app = firebase_core.Firebase._delegate.app(name);
      return new firebase_core.FirebaseApp.__(app);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.Firebase.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return this.toString()[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.Firebase));
    }
  };
  (firebase_core.Firebase.__ = function() {
    ;
  }).prototype = firebase_core.Firebase.prototype;
  dart.addTypeTests(firebase_core.Firebase);
  dart.addTypeCaches(firebase_core.Firebase);
  dart.setStaticMethodSignature(firebase_core.Firebase, () => ['initializeApp', 'app']);
  dart.setStaticGetterSignature(firebase_core.Firebase, () => ['_delegate', 'apps']);
  dart.setLibraryUri(firebase_core.Firebase, I[1]);
  dart.setStaticFieldSignature(firebase_core.Firebase, () => ['delegatePackingProperty']);
  dart.defineExtensionMethods(firebase_core.Firebase, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.Firebase, ['hashCode']);
  dart.defineLazy(firebase_core.Firebase, {
    /*firebase_core.Firebase.delegatePackingProperty*/get delegatePackingProperty() {
      return null;
    },
    set delegatePackingProperty(value) {}
  }, false);
  const Object_ChangeNotifier$36 = class Object_ChangeNotifier extends core.Object {};
  (Object_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36.prototype;
  dart.applyMixin(Object_ChangeNotifier$36, change_notifier.ChangeNotifier);
  auth_provider.AuthProvider = class AuthProvider extends Object_ChangeNotifier$36 {
    get isAuth() {
      return this[S$._user] != null;
    }
    get user() {
      return this[S$._user];
    }
    signup(email, password) {
      return async.async(dart.void, (function* signup() {
        try {
          let userCredential = (yield this[S$._auth].createUserWithEmailAndPassword({email: email, password: password}));
          this[S$._user] = userCredential.user;
          this.notifyListeners();
        } catch (e) {
          let error = dart.getThrown(e);
          if (core.Object.is(error)) {
            dart.throw(error);
          } else
            throw e;
        }
      }).bind(this));
    }
    login(email, password) {
      return async.async(dart.void, (function* login() {
        try {
          let userCredential = (yield this[S$._auth].signInWithEmailAndPassword({email: email, password: password}));
          this[S$._user] = userCredential.user;
          this.notifyListeners();
        } catch (e) {
          let error = dart.getThrown(e);
          if (core.Object.is(error)) {
            dart.throw(error);
          } else
            throw e;
        }
      }).bind(this));
    }
    logout() {
      return async.async(dart.void, (function* logout() {
        yield this[S$._auth].signOut();
        this[S$._user] = null;
        this.notifyListeners();
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new auth_provider.AuthProvider.new();
    }
  };
  (auth_provider.AuthProvider.new = function() {
    this[S$._auth] = firebase_auth.FirebaseAuth.instance;
    this[S$._user] = null;
    auth_provider.AuthProvider.__proto__.new.call(this);
    ;
  }).prototype = auth_provider.AuthProvider.prototype;
  dart.addTypeTests(auth_provider.AuthProvider);
  dart.addTypeCaches(auth_provider.AuthProvider);
  dart.setMethodSignature(auth_provider.AuthProvider, () => ({
    __proto__: dart.getMethods(auth_provider.AuthProvider.__proto__),
    signup: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    login: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    logout: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(auth_provider.AuthProvider, () => ({
    __proto__: dart.getGetters(auth_provider.AuthProvider.__proto__),
    isAuth: core.bool,
    user: dart.nullable(firebase_auth.User)
  }));
  dart.setLibraryUri(auth_provider.AuthProvider, I[2]);
  dart.setFieldSignature(auth_provider.AuthProvider, () => ({
    __proto__: dart.getFields(auth_provider.AuthProvider.__proto__),
    [S$._auth]: dart.fieldType(firebase_auth.FirebaseAuth),
    [S$._user]: dart.fieldType(dart.nullable(firebase_auth.User))
  }));
  const Object_ChangeNotifier$36$ = class Object_ChangeNotifier extends core.Object {};
  (Object_ChangeNotifier$36$.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36$.prototype;
  dart.applyMixin(Object_ChangeNotifier$36$, change_notifier.ChangeNotifier);
  product_provider.ProductProvider = class ProductProvider extends Object_ChangeNotifier$36$ {
    get items() {
      return (() => {
        let t2 = T$.ListOfProduct().of(this[S$._items]);
        return t2;
      })();
    }
    fetchProducts() {
      return async.async(dart.void, (function* fetchProducts() {
        let snapshot = (yield cloud_firestore.FirebaseFirestore.instance.collection("products").get());
        let products = snapshot.docs[S$.$map](product.Product, dart.fn(doc => new product.Product.new({id: doc.id, title: core.String.as(doc._get("title")), description: core.String.as(doc._get("description")), price: core.double.as(doc._get("price")), imageUrl: core.String.as(doc._get("imageUrl"))}), T$.QueryDocumentSnapshotOfMapOfString$dynamicToProduct()))[S$.$toList]();
        this[S$._items] = products;
        this.notifyListeners();
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new product_provider.ProductProvider.new();
    }
  };
  (product_provider.ProductProvider.new = function() {
    this[S$._items] = T$.JSArrayOfProduct().of([]);
    product_provider.ProductProvider.__proto__.new.call(this);
    ;
  }).prototype = product_provider.ProductProvider.prototype;
  dart.addTypeTests(product_provider.ProductProvider);
  dart.addTypeCaches(product_provider.ProductProvider);
  dart.setMethodSignature(product_provider.ProductProvider, () => ({
    __proto__: dart.getMethods(product_provider.ProductProvider.__proto__),
    fetchProducts: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(product_provider.ProductProvider, () => ({
    __proto__: dart.getGetters(product_provider.ProductProvider.__proto__),
    items: core.List$(product.Product)
  }));
  dart.setLibraryUri(product_provider.ProductProvider, I[3]);
  dart.setFieldSignature(product_provider.ProductProvider, () => ({
    __proto__: dart.getFields(product_provider.ProductProvider.__proto__),
    [S$._items]: dart.fieldType(core.List$(product.Product))
  }));
  home_screen.HomeScreen = class HomeScreen extends framework.StatelessWidget {
    get products() {
      return this[S$.products];
    }
    set products(value) {
      super.products = value;
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Product List")}), body: new (T$.FutureBuilderOfQuerySnapshotOfObjectN()).new({future: this.products.get(), builder: dart.fn((context, snapshot) => {
            if (snapshot.connectionState === async$.ConnectionState.waiting) {
              return new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()});
            } else if (snapshot.hasError) {
              return new basic.Center.new({child: new text.Text.new("Error: " + dart.str(snapshot.error))});
            } else if (!snapshot.hasData || dart.nullCheck(snapshot.data).docs[S$.$isEmpty]) {
              return new basic.Center.new({child: new text.Text.new("No products found")});
            }
            let productList = dart.nullCheck(snapshot.data).docs;
            return new scroll_view.ListView.builder({itemCount: productList[S$.$length], itemBuilder: dart.fn((context, index) => {
                let product = productList[S$.$_get](index);
                return new list_tile.ListTile.new({title: new text.Text.new(core.String.as(product._get("name"))), subtitle: new text.Text.new("$" + dart.str(product._get("price"))), onTap: dart.fn(() => {
                    navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new product_details_screen.ProductDetailsScreen.new({product: product}), T$.BuildContextToProductDetailsScreen())}));
                  }, T$.VoidTovoid())});
              }, T$.BuildContextAndintToListTile())});
          }, T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfObjectNToWidget())})});
    }
    static ['_#new#tearOff']() {
      return new home_screen.HomeScreen.new();
    }
  };
  (home_screen.HomeScreen.new = function() {
    this[S$.products] = cloud_firestore.FirebaseFirestore.instance.collection("products");
    home_screen.HomeScreen.__proto__.new.call(this);
    ;
  }).prototype = home_screen.HomeScreen.prototype;
  dart.addTypeTests(home_screen.HomeScreen);
  dart.addTypeCaches(home_screen.HomeScreen);
  dart.setMethodSignature(home_screen.HomeScreen, () => ({
    __proto__: dart.getMethods(home_screen.HomeScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(home_screen.HomeScreen, I[4]);
  dart.setFieldSignature(home_screen.HomeScreen, () => ({
    __proto__: dart.getFields(home_screen.HomeScreen.__proto__),
    products: dart.finalFieldType(cloud_firestore.CollectionReference$(dart.nullable(core.Object)))
  }));
  login_screen.LoginScreen = class LoginScreen extends framework.StatefulWidget {
    createState() {
      return new login_screen._LoginScreenState.new();
    }
    static ['_#new#tearOff']() {
      return new login_screen.LoginScreen.new();
    }
  };
  (login_screen.LoginScreen.new = function() {
    login_screen.LoginScreen.__proto__.new.call(this);
    ;
  }).prototype = login_screen.LoginScreen.prototype;
  dart.addTypeTests(login_screen.LoginScreen);
  dart.addTypeCaches(login_screen.LoginScreen);
  dart.setMethodSignature(login_screen.LoginScreen, () => ({
    __proto__: dart.getMethods(login_screen.LoginScreen.__proto__),
    createState: dart.fnType(login_screen._LoginScreenState, [])
  }));
  dart.setLibraryUri(login_screen.LoginScreen, I[5]);
  dart.setStaticFieldSignature(login_screen.LoginScreen, () => ['routeName']);
  dart.defineLazy(login_screen.LoginScreen, {
    /*login_screen.LoginScreen.routeName*/get routeName() {
      return "/login";
    }
  }, false);
  login_screen._LoginScreenState = class _LoginScreenState extends framework.State$(login_screen.LoginScreen) {
    build(context) {
      let authProvider = provider$.Provider.of(auth_provider.AuthProvider, context, {listen: false});
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Login")}), body: new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new text_field.TextField.new({controller: this[S$._emailController], decoration: new input_decorator.InputDecoration.new({labelText: "Email"})}), new text_field.TextField.new({controller: this[S$._passwordController], decoration: new input_decorator.InputDecoration.new({labelText: "Password"}), obscureText: true}), new basic.SizedBox.new({height: 20}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => async.async(dart.void, (function*() {
                  yield authProvider.login(this[S$._emailController].text, this[S$._passwordController].text);
                  navigator.Navigator.of(context).pushReplacementNamed(T$.ObjectN(), T$.ObjectN(), "/");
                }).bind(this)), T$.VoidToFutureOfvoid()), child: new text.Text.new("Login")}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                  navigator.Navigator.of(context).pushNamed(T$.ObjectN(), "/signup");
                }, T$.VoidTovoid()), child: new text.Text.new("Create Account")})])})})});
    }
    static ['_#new#tearOff']() {
      return new login_screen._LoginScreenState.new();
    }
  };
  (login_screen._LoginScreenState.new = function() {
    this[S$._emailController] = new editable_text.TextEditingController.new();
    this[S$._passwordController] = new editable_text.TextEditingController.new();
    login_screen._LoginScreenState.__proto__.new.call(this);
    ;
  }).prototype = login_screen._LoginScreenState.prototype;
  dart.addTypeTests(login_screen._LoginScreenState);
  dart.addTypeCaches(login_screen._LoginScreenState);
  dart.setMethodSignature(login_screen._LoginScreenState, () => ({
    __proto__: dart.getMethods(login_screen._LoginScreenState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login_screen._LoginScreenState, I[5]);
  dart.setFieldSignature(login_screen._LoginScreenState, () => ({
    __proto__: dart.getFields(login_screen._LoginScreenState.__proto__),
    [S$._emailController]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._passwordController]: dart.finalFieldType(editable_text.TextEditingController)
  }));
  signup_screen.SignupScreen = class SignupScreen extends framework.StatefulWidget {
    createState() {
      return new signup_screen._SignupScreenState.new();
    }
    static ['_#new#tearOff']() {
      return new signup_screen.SignupScreen.new();
    }
  };
  (signup_screen.SignupScreen.new = function() {
    signup_screen.SignupScreen.__proto__.new.call(this);
    ;
  }).prototype = signup_screen.SignupScreen.prototype;
  dart.addTypeTests(signup_screen.SignupScreen);
  dart.addTypeCaches(signup_screen.SignupScreen);
  dart.setMethodSignature(signup_screen.SignupScreen, () => ({
    __proto__: dart.getMethods(signup_screen.SignupScreen.__proto__),
    createState: dart.fnType(signup_screen._SignupScreenState, [])
  }));
  dart.setLibraryUri(signup_screen.SignupScreen, I[6]);
  dart.setStaticFieldSignature(signup_screen.SignupScreen, () => ['routeName']);
  dart.defineLazy(signup_screen.SignupScreen, {
    /*signup_screen.SignupScreen.routeName*/get routeName() {
      return "/signup";
    }
  }, false);
  signup_screen._SignupScreenState = class _SignupScreenState extends framework.State$(signup_screen.SignupScreen) {
    build(context) {
      let authProvider = provider$.Provider.of(auth_provider.AuthProvider, context, {listen: false});
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Sign Up")}), body: new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new text_field.TextField.new({controller: this[S$._emailController$1], decoration: new input_decorator.InputDecoration.new({labelText: "Email"})}), new text_field.TextField.new({controller: this[S$._passwordController$1], decoration: new input_decorator.InputDecoration.new({labelText: "Password"}), obscureText: true}), new basic.SizedBox.new({height: 20}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => async.async(dart.void, (function*() {
                  yield authProvider.signup(this[S$._emailController$1].text, this[S$._passwordController$1].text);
                  navigator.Navigator.of(context).pushReplacementNamed(T$.ObjectN(), T$.ObjectN(), "/");
                }).bind(this)), T$.VoidToFutureOfvoid()), child: new text.Text.new("Sign Up")})])})})});
    }
    static ['_#new#tearOff']() {
      return new signup_screen._SignupScreenState.new();
    }
  };
  (signup_screen._SignupScreenState.new = function() {
    this[S$._emailController$1] = new editable_text.TextEditingController.new();
    this[S$._passwordController$1] = new editable_text.TextEditingController.new();
    signup_screen._SignupScreenState.__proto__.new.call(this);
    ;
  }).prototype = signup_screen._SignupScreenState.prototype;
  dart.addTypeTests(signup_screen._SignupScreenState);
  dart.addTypeCaches(signup_screen._SignupScreenState);
  dart.setMethodSignature(signup_screen._SignupScreenState, () => ({
    __proto__: dart.getMethods(signup_screen._SignupScreenState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(signup_screen._SignupScreenState, I[6]);
  dart.setFieldSignature(signup_screen._SignupScreenState, () => ({
    __proto__: dart.getFields(signup_screen._SignupScreenState.__proto__),
    [S$._emailController$1]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._passwordController$1]: dart.finalFieldType(editable_text.TextEditingController)
  }));
  cart_screen.CartScreen = class CartScreen extends framework.StatelessWidget {
    build(context) {
      let cart = provider$.Provider.of(cart_provider.CartProvider, context);
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Your Cart")}), body: new basic.Column.new({children: T$.JSArrayOfWidget().of([new card.Card.new({margin: new edge_insets.EdgeInsets.all(15), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(8), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T$.JSArrayOfWidget().of([new text.Text.new("Total", {style: new text_style.TextStyle.new({fontSize: 20})}), new spacer.Spacer.new(), new chip.Chip.new({label: new text.Text.new("$" + cart.totalAmount[S$.$toStringAsFixed](2), {style: new text_style.TextStyle.new({color: dart.nullCheck(theme.Theme.of(context).primaryTextTheme.titleLarge).color})}), backgroundColor: theme.Theme.of(context).primaryColor}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                      }, T$.VoidTovoid()), child: new text.Text.new("Order Now")})])})})}), new basic.SizedBox.new({height: 10}), new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: cart.items[S$.$length], itemBuilder: dart.fn((ctx, i) => new cart_item_widget.CartItemWidget.new(cart.items[S$.$values][S$.$toList]()[S$.$_get](i), cart.items[S$.$keys][S$.$toList]()[S$.$_get](i)), T$.BuildContextAndintToCartItemWidget())})})])})});
    }
    static ['_#new#tearOff']() {
      return new cart_screen.CartScreen.new();
    }
  };
  (cart_screen.CartScreen.new = function() {
    cart_screen.CartScreen.__proto__.new.call(this);
    ;
  }).prototype = cart_screen.CartScreen.prototype;
  dart.addTypeTests(cart_screen.CartScreen);
  dart.addTypeCaches(cart_screen.CartScreen);
  dart.setMethodSignature(cart_screen.CartScreen, () => ({
    __proto__: dart.getMethods(cart_screen.CartScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(cart_screen.CartScreen, I[7]);
  dart.setStaticFieldSignature(cart_screen.CartScreen, () => ['routeName']);
  dart.defineLazy(cart_screen.CartScreen, {
    /*cart_screen.CartScreen.routeName*/get routeName() {
      return "/cart";
    }
  }, false);
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[8], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[8] || CT.C8)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[9]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T$.ExpandoOfObject()).new();
    }
  }, false);
  platform_interface_firestore.FirebaseFirestorePlatform = class FirebaseFirestorePlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get databaseChoice() {
      return this[S$.databaseChoice];
    }
    set databaseChoice(value) {
      super.databaseChoice = value;
    }
    get app() {
      let t6;
      t6 = this.appInstance;
      return t6 == null ? firebase_core.Firebase.app() : t6;
    }
    get databaseURL() {
      let t6;
      t6 = this.databaseChoice;
      return t6 == null ? "(default)" : t6;
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return platform_interface_firestore.FirebaseFirestorePlatform.instance.delegateFor({app: app, databaseURL: databaseURL});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: app, databaseURL: databaseURL});
    }
    static get instance() {
      let t6;
      t6 = platform_interface_firestore.FirebaseFirestorePlatform._instance;
      return t6 == null ? platform_interface_firestore.FirebaseFirestorePlatform._instance = new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: firebase_core.Firebase.app(), databaseURL: "(default)"}) : t6;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_firestore.FirebaseFirestorePlatform._token);
      platform_interface_firestore.FirebaseFirestorePlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    useEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useEmulator() is not implemented"));
    }
    batch() {
      dart.throw(new core.UnimplementedError.new("batch() is not implemented"));
    }
    clearPersistence() {
      dart.throw(new core.UnimplementedError.new("clearPersistence() is not implemented"));
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, function* enablePersistence() {
        dart.throw(new core.UnimplementedError.new("enablePersistence() is not implemented"));
      });
    }
    collection(collectionPath) {
      dart.throw(new core.UnimplementedError.new("collection() is not implemented"));
    }
    collectionGroup(collectionPath) {
      dart.throw(new core.UnimplementedError.new("collectionGroup() is not implemented"));
    }
    disableNetwork() {
      dart.throw(new core.UnimplementedError.new("disableNetwork() is not implemented"));
    }
    doc(documentPath) {
      dart.throw(new core.UnimplementedError.new("doc() is not implemented"));
    }
    enableNetwork() {
      dart.throw(new core.UnimplementedError.new("enableNetwork() is not implemented"));
    }
    snapshotsInSync() {
      dart.throw(new core.UnimplementedError.new("snapshotsInSync() is not implemented"));
    }
    loadBundle(bundle) {
      dart.throw(new core.UnimplementedError.new("loadBundle() is not implemented"));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[5] || CT.C5;
      dart.throw(new core.UnimplementedError.new("namedQueryGet() is not implemented"));
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      dart.throw(new core.UnimplementedError.new("runTransaction() is not implemented"));
    }
    get settings() {
      dart.throw(new core.UnimplementedError.new("settings getter is not implemented"));
    }
    set settings(settings) {
      dart.throw(new core.UnimplementedError.new("settings setter is not implemented"));
    }
    terminate() {
      dart.throw(new core.UnimplementedError.new("terminate() is not implemented"));
    }
    waitForPendingWrites() {
      dart.throw(new core.UnimplementedError.new("waitForPendingWrites() is not implemented"));
    }
    setIndexConfiguration(indexConfiguration) {
      dart.throw(new core.UnimplementedError.new("setIndexConfiguration() is not implemented"));
    }
    setLoggingEnabled(enabled) {
      dart.throw(new core.UnimplementedError.new("setLoggingEnabled() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_firestore.FirebaseFirestorePlatform.is(other) && other.app.name === this.app.name;
    }
    get hashCode() {
      return this.toString()[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_firestore.FirebaseFirestorePlatform)) + "(app: " + this.app.name + ")";
    }
  };
  (platform_interface_firestore.FirebaseFirestorePlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    let databaseChoice = opts && 'databaseChoice' in opts ? opts.databaseChoice : null;
    this[S$.appInstance] = appInstance;
    this[S$.databaseChoice] = databaseChoice;
    platform_interface_firestore.FirebaseFirestorePlatform.__proto__.new.call(this, {token: platform_interface_firestore.FirebaseFirestorePlatform._token});
    ;
  }).prototype = platform_interface_firestore.FirebaseFirestorePlatform.prototype;
  dart.addTypeTests(platform_interface_firestore.FirebaseFirestorePlatform);
  dart.addTypeCaches(platform_interface_firestore.FirebaseFirestorePlatform);
  dart.setMethodSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firestore.FirebaseFirestorePlatform, [], {}, {app: firebase_core.FirebaseApp, databaseURL: core.String}),
    useEmulator: dart.fnType(dart.void, [core.String, core.int]),
    batch: dart.fnType(platform_interface_write_batch.WriteBatchPlatform, []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(persistence_settings.PersistenceSettings)]),
    collection: dart.fnType(platform_interface_collection_reference.CollectionReferencePlatform, [core.String]),
    collectionGroup: dart.fnType(platform_interface_query.QueryPlatform, [core.String]),
    disableNetwork: dart.fnType(async.Future$(dart.void), []),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [core.String]),
    enableNetwork: dart.fnType(async.Future$(dart.void), []),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    loadBundle: dart.fnType(platform_interface_load_bundle_task.LoadBundleTaskPlatform, [typed_data.Uint8List]),
    namedQueryGet: dart.fnType(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform), [core.String], {options: get_options.GetOptions}, {}),
    runTransaction: dart.gFnType(T => [async.Future$(dart.nullable(T)), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)]),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), []),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [core.String]),
    setLoggingEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setStaticMethodSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    app: firebase_core.FirebaseApp,
    databaseURL: core.String,
    settings: settings.Settings
  }));
  dart.setSetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getSetters(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    settings: settings.Settings
  }));
  dart.setStaticGetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firestore.FirebaseFirestorePlatform, I[10]);
  dart.setFieldSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getFields(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    databaseChoice: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['_token', '_instance']);
  dart.defineExtensionMethods(platform_interface_firestore.FirebaseFirestorePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_firestore.FirebaseFirestorePlatform, ['hashCode']);
  dart.defineLazy(platform_interface_firestore.FirebaseFirestorePlatform, {
    /*platform_interface_firestore.FirebaseFirestorePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firestore.FirebaseFirestorePlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  cloud_firestore_web.FirebaseFirestoreWeb = class FirebaseFirestoreWeb extends platform_interface_firestore.FirebaseFirestorePlatform {
    get [S$._delegate$1]() {
      let t3;
      t3 = this[S$._webFirestore];
      return t3 == null ? this[S$._webFirestore] = firestore$.getFirestoreInstance(core$.app(this.app.name), this[S$._settings], this.databaseURL) : t3;
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("firestore");
      platform_interface_firestore.FirebaseFirestorePlatform.instance = new cloud_firestore_web.FirebaseFirestoreWeb.new();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new cloud_firestore_web.FirebaseFirestoreWeb.new({app: app, databaseURL: databaseURL});
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new cloud_firestore_web.FirebaseFirestoreWeb.new({app: app, databaseURL: databaseURL});
    }
    collection(collectionPath) {
      return new collection_reference_web.CollectionReferenceWeb.new(this, this[S$._delegate$1], collectionPath);
    }
    batch() {
      return new write_batch_web.WriteBatchWeb.new(this[S$._delegate$1]);
    }
    clearPersistence() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$1], 'clearPersistence'));
    }
    useEmulator(host, port) {
      return this[S$._delegate$1].useEmulator(host, port);
    }
    collectionGroup(collectionPath) {
      return new query_web.QueryWeb.new(this, collectionPath, this[S$._delegate$1].collectionGroup(collectionPath), {isCollectionGroupQuery: true});
    }
    disableNetwork() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$1], 'disableNetwork'));
    }
    doc(documentPath) {
      return new document_reference_web.DocumentReferenceWeb.new(this, this[S$._delegate$1], documentPath);
    }
    enableNetwork() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$1], 'enableNetwork'));
    }
    snapshotsInSync() {
      return this[S$._delegate$1].snapshotsInSync();
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(dart.nullable(T), (function* runTransaction() {
        yield internals.convertWebExceptions(async.Future, dart.fn(() => this[S$._delegate$1].runTransaction(dart.fn(transaction => async.async(dart.nullable(T), (function*() {
          return transactionHandler(new transaction_web.TransactionWeb.new(this, this[S$._delegate$1], dart.nullCheck(transaction)));
        }).bind(this)), dart.fnType(async.Future$(dart.nullable(T)), [T$.TransactionN()])), maxAttempts).timeout(timeout), T$.VoidToFuture()));
        return null;
      }).bind(this));
    }
    get settings() {
      return C[4] || CT.C4;
    }
    set settings(settings) {
      let cacheSizeBytes = null;
      if (settings.cacheSizeBytes == null) {
        cacheSizeBytes = 40000000;
      } else if (settings.cacheSizeBytes === -1) {
        cacheSizeBytes = -1;
      } else {
        cacheSizeBytes = settings.cacheSizeBytes;
      }
      if (settings.host != null && settings.sslEnabled != null) {
        this[S$._settings] = {cacheSizeBytes: cacheSizeBytes, host: settings.host, ssl: settings.sslEnabled, ignoreUndefinedProperties: settings.ignoreUndefinedProperties};
      } else {
        this[S$._settings] = {cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: settings.ignoreUndefinedProperties};
      }
    }
    enablePersistence(settings = null) {
      if (settings != null) {
        let interopSettings = {synchronizeTabs: settings.synchronizeTabs};
        return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$1].enablePersistence(interopSettings), T$.VoidToFutureOfvoid()));
      }
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$1], 'enablePersistence'));
    }
    terminate() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$1], 'terminate'));
    }
    waitForPendingWrites() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$1], 'waitForPendingWrites'));
    }
    loadBundle(bundle) {
      return new load_bundle_task_web.LoadBundleTaskWeb.new(this[S$._delegate$1].loadBundle(bundle));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[5] || CT.C5;
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* namedQueryGet() {
        let query = (yield this[S$._delegate$1].namedQuery(name));
        let snapshot = (yield query.get(web_utils.convertGetOptions(options)));
        return web_utils.convertWebQuerySnapshot(this, snapshot, options.serverTimestampBehavior);
      }).bind(this));
    }
    setIndexConfiguration(indexConfiguration) {
      return async.async(dart.void, (function* setIndexConfiguration() {
        return this[S$._delegate$1].setIndexConfiguration(indexConfiguration);
      }).bind(this));
    }
    setLoggingEnabled(enabled) {
      return async.async(dart.void, (function* setLoggingEnabled() {
        let value = null;
        function value$35get() {
          let t4;
          t4 = value;
          return t4 == null ? dart.throw(new _internal.LateError.localNI("value")) : t4;
        }
        function value$35set(value$35param) {
          if (value == null)
            return value = value$35param;
          else
            dart.throw(new _internal.LateError.localAI("value"));
        }
        if (enabled) {
          value$35set("debug");
        } else {
          value$35set("silent");
        }
        this[S$._delegate$1].setLoggingEnabled(value$35get());
      }).bind(this));
    }
  };
  (cloud_firestore_web.FirebaseFirestoreWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S$._webFirestore] = null;
    this[S$._settings] = null;
    cloud_firestore_web.FirebaseFirestoreWeb.__proto__.new.call(this, {appInstance: app, databaseChoice: databaseURL});
    platform_interface_field_value_factory.FieldValueFactoryPlatform.instance = new field_value_factory_web.FieldValueFactoryWeb.new();
  }).prototype = cloud_firestore_web.FirebaseFirestoreWeb.prototype;
  dart.addTypeTests(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.addTypeCaches(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.setMethodSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getMethods(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    runTransaction: dart.gFnType(T => [async.Future$(dart.nullable(T)), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ['registerWith']);
  dart.setGetterSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getGetters(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    [S$._delegate$1]: firestore$.Firestore
  }));
  dart.setLibraryUri(cloud_firestore_web.FirebaseFirestoreWeb, I[11]);
  dart.setFieldSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getFields(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    [S$._webFirestore]: dart.fieldType(dart.nullable(firestore$.Firestore)),
    [S$._settings]: dart.fieldType(dart.nullable(dart.packageJSType("Settings", false)))
  }));
  platform_interface_firebase_auth.FirebaseAuthPlatform = class FirebaseAuthPlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance$1];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get tenantId() {
      return this[S$.tenantId];
    }
    set tenantId(value) {
      this[S$.tenantId] = value;
    }
    get app() {
      if (this.appInstance == null) {
        return firebase_core.Firebase.app();
      }
      return dart.nullCheck(this.appInstance);
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instanceFor({app: app, pluginConstants: pluginConstants});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      let currentUser = pluginConstants[S$.$_get]("APP_CURRENT_USER");
      if (currentUser != null) {
        T$.ListOfObjectN().as(currentUser);
        currentUser = messages$46pigeon$0.PigeonUserDetails.decode(currentUser);
      }
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instance.delegateFor({app: app}).setInitialValues({languageCode: T$.StringN().as(pluginConstants[S$.$_get]("APP_LANGUAGE_CODE")), currentUser: T$.PigeonUserDetailsN().as(currentUser)});
    }
    static get instance() {
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance == null ? platform_interface_firebase_auth.FirebaseAuthPlatform._instance = method_channel_firebase_auth.MethodChannelFirebaseAuth.instance : null;
      return dart.nullCheck(platform_interface_firebase_auth.FirebaseAuthPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_firebase_auth.FirebaseAuthPlatform._token);
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      dart.throw(new core.UnimplementedError.new("setInitialValues() is not implemented"));
    }
    get currentUser() {
      dart.throw(new core.UnimplementedError.new("get.currentUser is not implemented"));
    }
    set currentUser(userPlatform) {
      dart.throw(new core.UnimplementedError.new("set.currentUser is not implemented"));
    }
    get languageCode() {
      dart.throw(new core.UnimplementedError.new("languageCode is not implemented"));
    }
    sendAuthChangesEvent(appName, userPlatform) {
      dart.throw(new core.UnimplementedError.new("sendAuthChangesEvent() is not implemented"));
    }
    useAuthEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useAuthEmulator() is not implemented"));
    }
    applyActionCode(code) {
      dart.throw(new core.UnimplementedError.new("applyActionCode() is not implemented"));
    }
    checkActionCode(code) {
      dart.throw(new core.UnimplementedError.new("checkActionCode() is not implemented"));
    }
    confirmPasswordReset(code, newPassword) {
      dart.throw(new core.UnimplementedError.new("confirmPasswordReset() is not implemented"));
    }
    createUserWithEmailAndPassword(email, password) {
      dart.throw(new core.UnimplementedError.new("createUserWithEmailAndPassword() is not implemented"));
    }
    fetchSignInMethodsForEmail(email) {
      dart.throw(new core.UnimplementedError.new("fetchSignInMethodsForEmail() is not implemented"));
    }
    getRedirectResult() {
      dart.throw(new core.UnimplementedError.new("getRedirectResult() is not implemented"));
    }
    isSignInWithEmailLink(emailLink) {
      return (emailLink[S$.$contains]("mode=signIn") || emailLink[S$.$contains]("mode%3DsignIn")) && (emailLink[S$.$contains]("oobCode=") || emailLink[S$.$contains]("oobCode%3D"));
    }
    authStateChanges() {
      dart.throw(new core.UnimplementedError.new("authStateChanges() is not implemented"));
    }
    idTokenChanges() {
      dart.throw(new core.UnimplementedError.new("idTokenChanges() is not implemented"));
    }
    userChanges() {
      dart.throw(new core.UnimplementedError.new("userChanges() is not implemented"));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      dart.throw(new core.UnimplementedError.new("sendPasswordResetEmail() is not implemented"));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      dart.throw(new core.UnimplementedError.new("sendSignInLinkToEmail() is not implemented"));
    }
    setLanguageCode(languageCode) {
      dart.throw(new core.UnimplementedError.new("setLanguageCode() is not implemented"));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      dart.throw(new core.UnimplementedError.new("setSettings() is not implemented"));
    }
    setPersistence(persistence) {
      return async.async(dart.void, function* setPersistence() {
        dart.throw(new core.UnimplementedError.new("setPersistence() is not implemented"));
      });
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInAnonymously() {
        dart.throw(new core.UnimplementedError.new("signInAnonymously() is not implemented"));
      });
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCredential() {
        dart.throw(new core.UnimplementedError.new("signInWithCredential() is not implemented"));
      });
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCustomToken() {
        dart.throw(new core.UnimplementedError.new("signInWithCustomToken() is not implemented"));
      });
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailAndPassword() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailAndPassword() is not implemented"));
      });
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailLink() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailLink() is not implemented"));
      });
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithProvider() {
        dart.throw(new core.UnimplementedError.new("signInWithProvider() is not implemented"));
      });
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, function* signInWithPhoneNumber() {
        dart.throw(new core.UnimplementedError.new("signInWithPhoneNumber() is not implemented"));
      });
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is not implemented"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is not implemented"));
    }
    signOut() {
      return async.async(dart.void, function* signOut() {
        dart.throw(new core.UnimplementedError.new("signOut() is not implemented"));
      });
    }
    verifyPasswordResetCode(code) {
      dart.throw(new core.UnimplementedError.new("verifyPasswordResetCode() is not implemented"));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not implemented"));
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      dart.throw(new core.UnimplementedError.new("revokeTokenWithAuthorizationCode() is not implemented"));
    }
  };
  (platform_interface_firebase_auth.FirebaseAuthPlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    this[S$.tenantId] = null;
    this[S$.appInstance$1] = appInstance;
    platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__.new.call(this, {token: platform_interface_firebase_auth.FirebaseAuthPlatform._token});
    ;
  }).prototype = platform_interface_firebase_auth.FirebaseAuthPlatform.prototype;
  dart.addTypeTests(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.addTypeCaches(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.setMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {}, {app: firebase_core.FirebaseApp}),
    setInitialValues: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {currentUser: dart.nullable(messages$46pigeon$0.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    sendAuthChangesEvent: dart.fnType(dart.void, [core.String, dart.nullable(platform_interface_user.UserPlatform)]),
    useAuthEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int]),
    applyActionCode: dart.fnType(async.Future$(dart.void), [core.String]),
    checkActionCode: dart.fnType(async.Future$(action_code_info.ActionCodeInfo), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    getRedirectResult: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    authStateChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    idTokenChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    userChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String, action_code_settings.ActionCodeSettings]),
    setLanguageCode: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: core.bool, forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {}),
    setPersistence: dart.fnType(async.Future$(dart.void), [types.Persistence]),
    signInAnonymously: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    signInWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    signInWithCustomToken: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider$.AuthProvider]),
    signInWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    signInWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider$.AuthProvider]),
    signInWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider$.AuthProvider]),
    signOut: dart.fnType(async.Future$(dart.void), []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.PhoneMultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])}),
    revokeTokenWithAuthorizationCode: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    app: firebase_core.FirebaseApp,
    currentUser: dart.nullable(platform_interface_user.UserPlatform),
    languageCode: dart.nullable(core.String)
  }));
  dart.setSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getSetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    currentUser: dart.nullable(platform_interface_user.UserPlatform)
  }));
  dart.setStaticGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firebase_auth.FirebaseAuthPlatform, I[13]);
  dart.setFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getFields(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    tenantId: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['_token', '_instance']);
  dart.defineLazy(platform_interface_firebase_auth.FirebaseAuthPlatform, {
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  firebase_auth_web.FirebaseAuthWeb = class FirebaseAuthWeb extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    static ['_#_#tearOff']() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app});
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("auth", {ensurePluginInitialized: dart.fn(firebaseApp => async.async(dart.void, function*() {
          let authDelegate = auth$.getAuthInstance(firebaseApp);
          if (html.window[S$.$location].hostname === "localhost" && true) {
            let emulatorOrigin = html.window[S$.$sessionStorage][S$.$_get](firebase_auth_web.getOriginName(firebaseApp.name));
            if (emulatorOrigin != null) {
              try {
                authDelegate.useAuthEmulator(emulatorOrigin);
                core.print("Using previously configured Auth emulator at " + dart.str(emulatorOrigin) + " for " + firebaseApp.name + " \nTo switch back to production, restart your app with the emulator turned off.");
              } catch (e$) {
                let e = dart.getThrown(e$);
                if (core.Object.is(e)) {
                  if (e[S$.$toString]()[S$.$contains]("sooner")) {
                    core.print("Auth emulator is already configured at " + dart.str(emulatorOrigin) + " for " + firebaseApp.name + " and kept across hot reload.\nTo switch back to production, restart your app with the emulator turned off.");
                  } else {
                    dart.rethrow(e$);
                  }
                } else
                  throw e$;
              }
            }
          }
          yield authDelegate.onWaitInitState();
        }), T$.AppToFutureOfvoid())});
      platform_interface_firebase_auth.FirebaseAuthPlatform.instance = firebase_auth_web.FirebaseAuthWeb.instance;
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.instance = new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
      platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance = new firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.new();
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.instance = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.instance;
    }
    static get instance() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    get delegate() {
      this[S$._webAuth] == null ? this[S$._webAuth] = auth$.getAuthInstance(core$.app(this.app.name)) : null;
      return dart.nullCheck(this[S$._webAuth]);
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app});
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      return this;
    }
    get currentUser() {
      let webCurrentUser = this.delegate.currentUser;
      if (webCurrentUser == null) {
        return null;
      }
      return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(dart.nullCheck(this.delegate.currentUser))), dart.nullCheck(this.delegate.currentUser), this[S$._webAuth]);
    }
    set currentUser(value) {
      super.currentUser = value;
    }
    get tenantId() {
      return this.delegate.tenantId;
    }
    set tenantId(tenantId) {
      this.delegate.tenantId = tenantId;
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](appName) != null)) dart.assertFailed(null, I[12], 192, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](appName)).add(userPlatform);
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this.delegate.applyActionCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          return dart.nullCheck(web_utils$.convertWebActionCodeInfo(yield this.delegate.checkActionCode(code)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this.delegate.confirmPasswordReset(code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.createUserWithEmailAndPassword(email, password), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          return yield this.delegate.fetchSignInMethodsForEmail(email);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getRedirectResult() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* getRedirectResult() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.getRedirectResult(), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this.delegate.sendPasswordResetEmail(email, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this.delegate.sendSignInLinkToEmail(email, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    get languageCode() {
      return this.delegate.languageCode;
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        if (languageCode == null) {
          this.delegate.useDeviceLanguage();
        } else {
          this.delegate.languageCode = languageCode;
        }
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        this.delegate.settings.appVerificationDisabledForTesting = appVerificationDisabledForTesting;
      }).bind(this));
    }
    setPersistence(persistence) {
      return async.async(dart.void, (function* setPersistence() {
        try {
          return this.delegate.setPersistence(persistence);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInAnonymously(), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCredential(dart.nullCheck(web_utils$.convertPlatformCredential(credential))), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCustomToken(token), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailAndPassword(email, password), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailLink(email, emailLink), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* signInWithPhoneNumber() {
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this, yield this.delegate.signInWithPhoneNumber(phoneNumber, verifier), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithPopup() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithPopup(web_utils$.convertPlatformAuthProvider(provider)), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithRedirect(provider) {
      return async.async(dart.void, (function* signInWithRedirect() {
        try {
          return this.delegate.signInWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this.delegate.signOut();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          let emulatorOrigin = html.window[S$.$sessionStorage][S$.$_get](firebase_auth_web.getOriginName(this.delegate.app.name));
          let origin = "http://" + host + ":" + dart.str(port);
          if (origin === emulatorOrigin) {
            return;
          }
          this.delegate.useAuthEmulator(origin);
          {
            html.window[S$.$sessionStorage][S$.$_set](firebase_auth_web.getOriginName(this.delegate.app.name), origin);
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (dart.packageJSType("firebase_auth.AuthError", true).is(e)) {
              let code = auth_interop['AuthErrorExtension|get#code'](e);
              if (code !== "auth/emulator-config-failed") {
                dart.throw(web_utils$.getFirebaseAuthException(e));
              }
            } else {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          return yield this.delegate.verifyPasswordResetCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t27;
        try {
          let data = null;
          if (multiFactorSession != null) {
            let _webMultiFactorSession = firebase_auth_web_multi_factor.MultiFactorSessionWeb.as(multiFactorSession);
            if (multiFactorInfo != null) {
              data = new (T$.IdentityMapOfString$dynamic()).from(["multiFactorUid", multiFactorInfo.uid, "session", _webMultiFactorSession.webSession.jsObject]);
            } else {
              data = new (T$.IdentityMapOfString$dynamic()).from(["phoneNumber", phoneNumber, "session", _webMultiFactorSession.webSession.jsObject]);
            }
          }
          let phoneOptions = dart.nullCheck((t27 = data, t27 == null ? phoneNumber : t27));
          let provider = auth$.PhoneAuthProvider.new(this[S$._webAuth]);
          let verifier = new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: this}).delegate;
          let verificationId = (yield provider.verifyPhoneNumber(utils.jsify(phoneOptions, dart.fn(object => object, T$.ObjectNToObjectN())), verifier));
          codeSent(verificationId, null);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            verificationFailed(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      return async.async(dart.void, function* revokeTokenWithAuthorizationCode() {
        dart.throw(new core.UnimplementedError.new("revokeTokenWithAuthorizationCode() is only available on apple platforms."));
      });
    }
  };
  (firebase_auth_web.FirebaseAuthWeb.__ = function() {
    this[S$._initialized] = T$.CompleterOfvoid().new();
    this[S$._webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  (firebase_auth_web.FirebaseAuthWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._initialized] = T$.CompleterOfvoid().new();
    this[S$._webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: app});
    firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    this.delegate.onAuthStateChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (!this[S$._initialized].isCompleted) {
        this[S$._initialized].complete();
      }
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser, this[S$._webAuth]);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
    this.delegate.onIdTokenChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser, this[S$._webAuth]);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_get](app.name)).add(webUser);
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  dart.addTypeTests(firebase_auth_web.FirebaseAuthWeb);
  dart.addTypeCaches(firebase_auth_web.FirebaseAuthWeb);
  dart.setMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web.FirebaseAuthWeb.__proto__),
    setInitialValues: dart.fnType(firebase_auth_web.FirebaseAuthWeb, [], {currentUser: dart.nullable(messages$46pigeon$0.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: dart.nullable(core.bool), forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ['registerWith']);
  dart.setGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    delegate: auth$.Auth,
    tenantId: dart.nullable(core.String),
    languageCode: core.String
  }));
  dart.setSetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    tenantId: dart.nullable(core.String)
  }));
  dart.setStaticGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web.FirebaseAuthWeb, I[14]);
  dart.setFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web.FirebaseAuthWeb.__proto__),
    [S$._initialized]: dart.fieldType(async.Completer$(dart.void)),
    [S$._webAuth]: dart.fieldType(dart.nullable(auth$.Auth))
  }));
  dart.setStaticFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ['_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(firebase_auth_web.FirebaseAuthWeb, {
    /*firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _authStateChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _idTokenChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _userChangesListeners(value) {}
  }, false);
  firebase_auth_web.getOriginName = function getOriginName(appName) {
    return appName + "-firebaseEmulatorOrigin";
  };
  firebase_core_platform_interface.FirebaseAppPlatform = class FirebaseAppPlatform extends plugin_platform_interface.PlatformInterface {
    get name() {
      return this[S$.name];
    }
    set name(value) {
      super.name = value;
    }
    get options() {
      return this[S$.options];
    }
    set options(value) {
      super.options = value;
    }
    static ['_#new#tearOff'](name, options) {
      return new firebase_core_platform_interface.FirebaseAppPlatform.new(name, options);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebaseAppPlatform._token);
    }
    get [S$._isDefault]() {
      return this.name === "[DEFAULT]";
    }
    get isAutomaticDataCollectionEnabled() {
      dart.throw(new core.UnimplementedError.new("isAutomaticDataCollectionEnabled has not been implemented."));
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() has not been implemented."));
      });
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticDataCollectionEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticDataCollectionEnabled() has not been implemented."));
      });
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticResourceManagementEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticResourceManagementEnabled() has not been implemented."));
      });
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseAppPlatform.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core_platform_interface.FirebaseAppPlatform)) + "(" + this.name + ")";
    }
  };
  (firebase_core_platform_interface.FirebaseAppPlatform.new = function(name, options) {
    this[S$.name] = name;
    this[S$.options] = options;
    firebase_core_platform_interface.FirebaseAppPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebaseAppPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebaseAppPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    [S$._isDefault]: core.bool,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseAppPlatform, I[15]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    name: dart.finalFieldType(core.String),
    options: dart.finalFieldType(firebase_core_platform_interface.FirebaseOptions)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['_token']);
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseAppPlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseAppPlatform, ['hashCode']);
  dart.defineLazy(firebase_core_platform_interface.FirebaseAppPlatform, {
    /*firebase_core_platform_interface.FirebaseAppPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_core_web.FirebaseAppWeb = class FirebaseAppWeb extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#_#tearOff'](name, options) {
      return new firebase_core_web.FirebaseAppWeb.__(name, options);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield core$.app(this.name).delete();
      }).bind(this));
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._isAutomaticDataCollectionEnabled];
    }
    setAutomaticDataCollectionEnabled(enabled) {
      this[S$._isAutomaticDataCollectionEnabled] = enabled;
      return T$.FutureOfvoid().value();
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return T$.FutureOfvoid().value();
    }
  };
  (firebase_core_web.FirebaseAppWeb.__ = function(name, options) {
    this[S$._isAutomaticDataCollectionEnabled] = false;
    firebase_core_web.FirebaseAppWeb.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_web.FirebaseAppWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseAppWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseAppWeb);
  dart.setLibraryUri(firebase_core_web.FirebaseAppWeb, I[16]);
  dart.setFieldSignature(firebase_core_web.FirebaseAppWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseAppWeb.__proto__),
    [S$._isAutomaticDataCollectionEnabled]: dart.fieldType(core.bool)
  }));
  firebase_core_web.FirebaseWebService = class FirebaseWebService extends core.Object {
    get name() {
      return this[S$.name$1];
    }
    set name(value) {
      this[S$.name$1] = value;
    }
    get override() {
      return this[S$.override];
    }
    set override(value) {
      this[S$.override] = value;
    }
    get ensurePluginInitialized() {
      return this[S$.ensurePluginInitialized];
    }
    set ensurePluginInitialized(value) {
      this[S$.ensurePluginInitialized] = value;
    }
    static ['_#_#tearOff'](name, opts) {
      let override = opts && 'override' in opts ? opts.override : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      return new firebase_core_web.FirebaseWebService.__(name, {override: override, ensurePluginInitialized: ensurePluginInitialized});
    }
  };
  (firebase_core_web.FirebaseWebService.__ = function(name, opts) {
    let override = opts && 'override' in opts ? opts.override : null;
    let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
    this[S$.name$1] = name;
    this[S$.override] = override;
    this[S$.ensurePluginInitialized] = ensurePluginInitialized;
    ;
  }).prototype = firebase_core_web.FirebaseWebService.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseWebService);
  dart.addTypeCaches(firebase_core_web.FirebaseWebService);
  dart.setLibraryUri(firebase_core_web.FirebaseWebService, I[16]);
  dart.setFieldSignature(firebase_core_web.FirebaseWebService, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseWebService.__proto__),
    name: dart.fieldType(core.String),
    override: dart.fieldType(dart.nullable(core.String)),
    ensurePluginInitialized: dart.fieldType(dart.nullable(dart.fnType(async.Future$(dart.void), [app$.App])))
  }));
  firebase_core_platform_interface.FirebasePlatform = class FirebasePlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return firebase_core_platform_interface.FirebasePlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePlatform._token);
      firebase_core_platform_interface.FirebasePlatform._instance = instance;
    }
    get apps() {
      dart.throw(new core.UnimplementedError.new("apps has not been implemented."));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      dart.throw(new core.UnimplementedError.new("initializeApp() has not been implemented."));
    }
    app(name = "[DEFAULT]") {
      dart.throw(new core.UnimplementedError.new("app() has not been implemented."));
    }
  };
  (firebase_core_platform_interface.FirebasePlatform.new = function() {
    firebase_core_platform_interface.FirebasePlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebasePlatform.__proto__),
    initializeApp: dart.fnType(async.Future$(firebase_core_platform_interface.FirebaseAppPlatform), [], {name: dart.nullable(core.String), options: dart.nullable(firebase_core_platform_interface.FirebaseOptions)}, {}),
    app: dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [], [core.String])
  }));
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePlatform.__proto__),
    apps: core.List$(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.setStaticGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setStaticSetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePlatform, I[15]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePlatform, () => ['_token', '_instance']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePlatform, {
    /*firebase_core_platform_interface.FirebasePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*firebase_core_platform_interface.FirebasePlatform._instance*/get _instance() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    },
    set _instance(value) {}
  }, false);
  firebase_core_web.FirebaseCoreWeb = class FirebaseCoreWeb extends firebase_core_platform_interface.FirebasePlatform {
    static registerService(service, opts) {
      let productNameOverride = opts && 'productNameOverride' in opts ? opts.productNameOverride : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      firebase_core_web.FirebaseCoreWeb._services[S$.$putIfAbsent](service, dart.fn(() => new firebase_core_web.FirebaseWebService.__(service, {override: productNameOverride, ensurePluginInitialized: ensurePluginInitialized}), T$.VoidToFirebaseWebService()));
    }
    static registerWith(registrar) {
      firebase_core_platform_interface.FirebasePlatform.instance = new firebase_core_web.FirebaseCoreWeb.new();
    }
    get firebaseSDKVersion() {
      let t28;
      return core.String.as((t28 = js.context._get("flutterfire_web_sdk_version"), t28 == null ? "10.7.0" : t28));
    }
    get [S$._ignoredServiceScripts]() {
      try {
        let ignored = js.JsObject.fromBrowserObject(core.Object.as(js.context._get("flutterfire_ignore_scripts")));
        if (core.Iterable.is(ignored)) {
          return core.Iterable.as(ignored)[S$.$map](core.String, dart.fn(e => dart.toString(e), T$.dynamicToString()))[S$.$toList]({growable: false});
        }
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
        } else
          throw e$;
      }
      return T$.JSArrayOfString().of([]);
    }
    injectSrcScript(src, windowVar) {
      return async.async(dart.void, (function* injectSrcScript() {
        let trustedUrl = null;
        let trustedPolicyName = this[S$._defaultTrustedPolicyName] + windowVar;
        if (dart.global.trustedTypes != null) {
          js$['DomConsoleExtension|get#debug'](dart.global.console)("TrustedTypes available. Creating policy:", trustedPolicyName);
          let factory = dart.nullCheck(dart.global.trustedTypes);
          try {
            let policy = js$['DomTrustedTypePolicyFactoryExtension|createPolicy'](factory, trustedPolicyName, {createScriptURL: js.allowInterop(T$.StringToString(), dart.fn(url => src, T$.StringToString()))});
            trustedUrl = js$['DomTrustedTypePolicyExtension|createScriptURL'](policy, src);
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
              dart.rethrow(e$);
            } else
              throw e$;
          }
        }
        let script = html.ScriptElement.new();
        script[S$.$type] = "text/javascript";
        script.crossOrigin = "anonymous";
        script[S$.$text] = "      window.ff_trigger_" + windowVar + " = async (callback) => {\n        console.debug(\"Initializing Firebase " + windowVar + "\");\n        callback(await import(\"" + dart.str(trustedUrl != null ? js_util._callMethodUnchecked0(dart.dynamic, trustedUrl, "toString") : src) + "\"));\n      };\n    ";
        if (!(html.document[S$.$head] != null)) dart.assertFailed(null, I[17], 137, 12, "document.head != null");
        dart.nullCheck(html.document[S$.$head])[S$.$append](script);
        let completer = async.Completer.new();
        js.context.callMethod("ff_trigger_" + windowVar, [dart.fn(module => {
            js.context._set(windowVar, module);
            js.context.deleteProperty("ff_trigger_" + windowVar);
            completer.complete();
          }, T$.dynamicToNull())]);
        yield completer.future;
      }).bind(this));
    }
    [S$._initializeCore]() {
      return async.async(dart.void, (function* _initializeCore() {
        if (js.context._get("firebase_core") != null) {
          return;
        }
        let version = this.firebaseSDKVersion;
        let ignored = this[S$._ignoredServiceScripts];
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[S$.$values][S$.$map](T$.FutureOfvoid(), dart.fn(service => {
          let t30, t30$;
          if (ignored[S$.$contains]((t30 = service.override, t30 == null ? service.name : t30))) {
            return async.Future.value();
          }
          return this.injectSrcScript("https://www.gstatic.com/firebasejs/" + version + "/firebase-" + service.name + ".js", "firebase_" + dart.str((t30$ = service.override, t30$ == null ? service.name : t30$)));
        }, T$.FirebaseWebServiceToFutureOfvoid())));
      }).bind(this));
    }
    get apps() {
      return firebase_core_web.guardNotInitialized(T$.ListOfFirebaseAppPlatform(), dart.fn(() => core$.apps[S$.$map](firebase_core_platform_interface.FirebaseAppPlatform, C[9] || CT.C9)[S$.$toList]({growable: false}), T$.VoidToListOfFirebaseAppPlatform()));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        yield this[S$._initializeCore]();
        firebase_core_web.guardNotInitialized(core.String, dart.fn(() => dart.global.firebase_core.SDK_VERSION, T$.VoidToString()));
        if (!dart.fn(() => {
          if (dart.global.firebase_core.SDK_VERSION !== "10.7.0") {
            core.print("            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"" + "10.7.0" + "\"\n            but your currently specifying \"" + dart.global.firebase_core.SDK_VERSION + "\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"" + "10.7.0" + "\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '" + dart.global.firebase_core.SDK_VERSION + "';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '" + "10.7.0" + "';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/" + dart.global.firebase_core.SDK_VERSION + "/firebase-app.js\"></script>\n          ");
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[17], 201, 7, "() {\n        if (firebase.SDK_VERSION != supportedFirebaseJsSdkVersion) {\n          // ignore: avoid_print\n          print(\n            '''\n            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\"\n            but your currently specifying \"${firebase.SDK_VERSION}\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '${firebase.SDK_VERSION}';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '$supportedFirebaseJsSdkVersion';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/${firebase.SDK_VERSION}/firebase-app.js\"></script>\n          ''',\n          );\n        }\n\n        return true;\n      }()");
        let app = null;
        if (name == null || name === "[DEFAULT]") {
          let defaultAppExists = false;
          try {
            app = core$.app();
            defaultAppExists = true;
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
            } else
              throw e$;
          }
          if (defaultAppExists) {
            if (options != null) {
              if (options.apiKey !== dart.nullCheck(app).options.apiKey || options.databaseURL !== app.options.databaseURL || options.storageBucket !== app.options.storageBucket) {
                dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
              }
            }
          } else {
            if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating the default app.", I[17], 255, 11, "options != null");
            app = core$.initializeApp({apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          }
        }
        if (name != null && name !== "[DEFAULT]") {
          if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[17], 277, 9, "options != null");
          try {
            app = core$.initializeApp({name: name, apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            if (core.Object.is(e)) {
              if (firebase_core_web._getJSErrorCode(e) === "app/duplicate-app") {
                dart.throw(firebase_core_platform_interface.duplicateApp(name));
              }
              dart.throw(firebase_core_web._catchJSError(e));
            } else
              throw e$0;
          }
        }
        let appCheck = firebase_core_web.FirebaseCoreWeb._services[S$.$remove]("app-check");
        if (appCheck != null) {
          yield dart.nullCheck(appCheck.ensurePluginInitialized)(dart.nullCheck(app));
        }
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[S$.$values][S$.$map](T$.FutureOfvoid(), dart.fn(service => {
          let ensureInitializedFunction = service.ensurePluginInitialized;
          if (ensureInitializedFunction == null || app == null) {
            return async.Future.value();
          }
          return ensureInitializedFunction(app);
        }, T$.FirebaseWebServiceToFutureOfvoid())));
        return firebase_core_web._createFromJsApp(dart.nullCheck(app));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      let app = null;
      try {
        app = firebase_core_web.guardNotInitialized(app$.App, dart.fn(() => core$.app(name), T$.VoidToApp()));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          if (firebase_core_web._getJSErrorCode(e) === "app/no-app") {
            dart.throw(firebase_core_platform_interface.noAppExists(name));
          }
          dart.throw(firebase_core_web._catchJSError(e));
        } else
          throw e$;
      }
      return firebase_core_web._createFromJsApp(app);
    }
    static ['_#new#tearOff']() {
      return new firebase_core_web.FirebaseCoreWeb.new();
    }
  };
  (firebase_core_web.FirebaseCoreWeb.new = function() {
    this[S$._defaultTrustedPolicyName] = "flutterfire-";
    firebase_core_web.FirebaseCoreWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_web.FirebaseCoreWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseCoreWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseCoreWeb);
  dart.setMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getMethods(firebase_core_web.FirebaseCoreWeb.__proto__),
    injectSrcScript: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    [S$._initializeCore]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ['registerService', 'registerWith']);
  dart.setGetterSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getGetters(firebase_core_web.FirebaseCoreWeb.__proto__),
    firebaseSDKVersion: core.String,
    [S$._ignoredServiceScripts]: core.List$(core.String)
  }));
  dart.setLibraryUri(firebase_core_web.FirebaseCoreWeb, I[16]);
  dart.setFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseCoreWeb.__proto__),
    [S$._defaultTrustedPolicyName]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ['_services']);
  dart.defineLazy(firebase_core_web.FirebaseCoreWeb, {
    /*firebase_core_web.FirebaseCoreWeb._services*/get _services() {
      return new (T$.IdentityMapOfString$FirebaseWebService()).from(["core", new firebase_core_web.FirebaseWebService.__("app", {override: "core"})]);
    },
    set _services(value) {}
  }, false);
  firebase_core_web._createFromJsApp = function _createFromJsApp(jsApp) {
    return new firebase_core_web.FirebaseAppWeb.__(jsApp.name, firebase_core_web._createFromJsOptions(jsApp.options));
  };
  firebase_core_web._createFromJsOptions = function _createFromJsOptions(options) {
    return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: options.apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
  };
  firebase_core_web._getJSErrorCode = function _getJSErrorCode(e) {
    let t33;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      t33 = js_util.getProperty(T$.StringN(), core.Object.as(e), "code");
      return t33 == null ? "" : t33;
    }
    return "";
  };
  firebase_core_web._catchJSError = function _catchJSError(e) {
    let t33;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      let rawCode = js_util.getProperty(core.String, core.Object.as(e), "code");
      let code = rawCode;
      let message = (t33 = js_util.getProperty(T$.StringN(), core.Object.as(e), "message"), t33 == null ? "" : t33);
      if (code[S$.$contains]("/")) {
        let chunks = code[S$.$split]("/");
        code = chunks[S$.$_get](chunks[S$.$length] - 1);
      }
      return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: code, message: message[S$.$replaceAll](" (" + rawCode + ")", "")});
    }
    dart.throw(e);
  };
  firebase_core_web._handleException = function _handleException(exception, stackTrace) {
    if (exception[S$.$toString]()[S$.$contains]("of undefined")) {
      dart.throw(firebase_core_platform_interface.coreNotInitialized());
    }
    core.Error.throwWithStackTrace(exception, stackTrace);
  };
  firebase_core_web.guardNotInitialized = function guardNotInitialized(R, cb) {
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(C[10] || CT.C10));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stackTrace = dart.stackTrace(e);
      if (core.Object.is(error)) {
        firebase_core_web._handleException(error, stackTrace);
      } else
        throw e;
    }
  };
  dart.defineLazy(firebase_core_web, {
    /*firebase_core_web.supportedFirebaseJsSdkVersion*/get supportedFirebaseJsSdkVersion() {
      return "10.7.0";
    }
  }, false);
  firebase_core_platform_interface.FirebaseException = class FirebaseException extends core.Object {
    get plugin() {
      return this[S$.plugin];
    }
    set plugin(value) {
      super.plugin = value;
    }
    get message() {
      return this[S$.message];
    }
    set message(value) {
      super.message = value;
    }
    get code() {
      return this[S$.code];
    }
    set code(value) {
      super.code = value;
    }
    get stackTrace() {
      return this[S$.stackTrace];
    }
    set stackTrace(value) {
      super.stackTrace = value;
    }
    static ['_#new#tearOff'](opts) {
      let plugin = opts && 'plugin' in opts ? opts.plugin : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
      return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code, stackTrace: stackTrace});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseException.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return core.Object.hash(this.plugin, this.code, this.message);
    }
    toString() {
      let output = "[" + this.plugin + "/" + this.code + "] " + dart.str(this.message);
      if (this.stackTrace != null) {
        output = output + ("\n\n" + dart.str(this.stackTrace));
      }
      return output;
    }
  };
  (firebase_core_platform_interface.FirebaseException.new = function(opts) {
    let t34;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
    this[S$.plugin] = plugin;
    this[S$.message] = message;
    this[S$.stackTrace] = stackTrace;
    this[S$.code] = (t34 = code, t34 == null ? "unknown" : t34);
    ;
  }).prototype = firebase_core_platform_interface.FirebaseException.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseException);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseException);
  firebase_core_platform_interface.FirebaseException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseException, I[15]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseException, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseException.__proto__),
    plugin: dart.finalFieldType(core.String),
    message: dart.finalFieldType(dart.nullable(core.String)),
    code: dart.finalFieldType(core.String),
    stackTrace: dart.finalFieldType(dart.nullable(core.StackTrace))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseException, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseException, ['hashCode']);
  firebase_core_platform_interface.FirebaseOptions = class FirebaseOptions extends core.Object {
    get apiKey() {
      return this[S$.apiKey];
    }
    set apiKey(value) {
      super.apiKey = value;
    }
    get appId() {
      return this[S$.appId];
    }
    set appId(value) {
      super.appId = value;
    }
    get messagingSenderId() {
      return this[S$.messagingSenderId];
    }
    set messagingSenderId(value) {
      super.messagingSenderId = value;
    }
    get projectId() {
      return this[S$.projectId];
    }
    set projectId(value) {
      super.projectId = value;
    }
    get authDomain() {
      return this[S$.authDomain];
    }
    set authDomain(value) {
      super.authDomain = value;
    }
    get databaseURL() {
      return this[S$.databaseURL];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    get storageBucket() {
      return this[S$.storageBucket];
    }
    set storageBucket(value) {
      super.storageBucket = value;
    }
    get measurementId() {
      return this[S$.measurementId];
    }
    set measurementId(value) {
      super.measurementId = value;
    }
    get trackingId() {
      return this[S$.trackingId];
    }
    set trackingId(value) {
      super.trackingId = value;
    }
    get deepLinkURLScheme() {
      return this[S$.deepLinkURLScheme];
    }
    set deepLinkURLScheme(value) {
      super.deepLinkURLScheme = value;
    }
    get androidClientId() {
      return this[S$.androidClientId];
    }
    set androidClientId(value) {
      super.androidClientId = value;
    }
    get iosClientId() {
      return this[S$.iosClientId];
    }
    set iosClientId(value) {
      super.iosClientId = value;
    }
    get iosBundleId() {
      return this[S$.iosBundleId];
    }
    set iosBundleId(value) {
      super.iosBundleId = value;
    }
    get appGroupId() {
      return this[S$.appGroupId];
    }
    set appGroupId(value) {
      super.appGroupId = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    static ['_#fromPigeon#tearOff'](options) {
      return new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
    }
    get asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["apiKey", this.apiKey, "appId", this.appId, "messagingSenderId", this.messagingSenderId, "projectId", this.projectId, "authDomain", this.authDomain, "databaseURL", this.databaseURL, "storageBucket", this.storageBucket, "measurementId", this.measurementId, "trackingId", this.trackingId, "deepLinkURLScheme", this.deepLinkURLScheme, "androidClientId", this.androidClientId, "iosClientId", this.iosClientId, "iosBundleId", this.iosBundleId, "appGroupId", this.appGroupId]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseOptions.is(other)) return false;
      return (C[11] || CT.C11).equals(this.asMap, other.asMap);
    }
    get hashCode() {
      return (C[11] || CT.C11).hash(this.asMap);
    }
    toString() {
      return this.asMap[S$.$toString]();
    }
  };
  (firebase_core_platform_interface.FirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[S$.apiKey] = apiKey;
    this[S$.appId] = appId;
    this[S$.messagingSenderId] = messagingSenderId;
    this[S$.projectId] = projectId;
    this[S$.authDomain] = authDomain;
    this[S$.databaseURL] = databaseURL;
    this[S$.storageBucket] = storageBucket;
    this[S$.measurementId] = measurementId;
    this[S$.trackingId] = trackingId;
    this[S$.deepLinkURLScheme] = deepLinkURLScheme;
    this[S$.androidClientId] = androidClientId;
    this[S$.iosClientId] = iosClientId;
    this[S$.iosBundleId] = iosBundleId;
    this[S$.appGroupId] = appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  (firebase_core_platform_interface.FirebaseOptions.fromPigeon = function(options) {
    this[S$.apiKey] = options.apiKey;
    this[S$.appId] = options.appId;
    this[S$.messagingSenderId] = options.messagingSenderId;
    this[S$.projectId] = options.projectId;
    this[S$.authDomain] = options.authDomain;
    this[S$.databaseURL] = options.databaseURL;
    this[S$.storageBucket] = options.storageBucket;
    this[S$.measurementId] = options.measurementId;
    this[S$.trackingId] = options.trackingId;
    this[S$.deepLinkURLScheme] = options.deepLinkURLScheme;
    this[S$.androidClientId] = options.androidClientId;
    this[S$.iosClientId] = options.iosClientId;
    this[S$.iosBundleId] = options.iosBundleId;
    this[S$.appGroupId] = options.appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseOptions);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseOptions);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseOptions.__proto__),
    asMap: core.Map$(core.String, dart.nullable(core.String))
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseOptions, I[15]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseOptions.__proto__),
    apiKey: dart.finalFieldType(core.String),
    appId: dart.finalFieldType(core.String),
    messagingSenderId: dart.finalFieldType(core.String),
    projectId: dart.finalFieldType(core.String),
    authDomain: dart.finalFieldType(dart.nullable(core.String)),
    databaseURL: dart.finalFieldType(dart.nullable(core.String)),
    storageBucket: dart.finalFieldType(dart.nullable(core.String)),
    measurementId: dart.finalFieldType(dart.nullable(core.String)),
    trackingId: dart.finalFieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.finalFieldType(dart.nullable(core.String)),
    androidClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosBundleId: dart.finalFieldType(dart.nullable(core.String)),
    appGroupId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseOptions, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseOptions, ['hashCode']);
  firebase_core_platform_interface.MethodChannelFirebase = class MethodChannelFirebase extends firebase_core_platform_interface.FirebasePlatform {
    [S$._initializeCore$1]() {
      return async.async(dart.void, (function* _initializeCore() {
        let apps = (yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeCore());
        apps[S$.$where](dart.fn(element => element != null, T$.PigeonInitializeResponseNTobool()))[S$.$cast](messages$46pigeon.PigeonInitializeResponse)[S$.$forEach](dart.bind(this, S$._initializeFirebaseAppFromMap));
        firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized = true;
      }).bind(this));
    }
    [S$._initializeFirebaseAppFromMap](response) {
      let methodChannelFirebaseApp = new firebase_core_platform_interface.MethodChannelFirebaseApp.new(response.name, new firebase_core_platform_interface.FirebaseOptions.fromPigeon(response.options), {isAutomaticDataCollectionEnabled: response.isAutomaticDataCollectionEnabled});
      firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_set](methodChannelFirebaseApp.name, methodChannelFirebaseApp);
      firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$_set](methodChannelFirebaseApp.name, response.pluginConstants);
    }
    get apps() {
      return firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$values][S$.$toList]({growable: false});
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        if (!firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized) {
          yield this[S$._initializeCore$1]();
        }
        if (name == null || name === "[DEFAULT]") {
          let defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]");
          let _options = options;
          if (platform.defaultTargetPlatform === platform.TargetPlatform.android && defaultApp == null && _options == null) {
            let options = (yield firebase_core_platform_interface.MethodChannelFirebase.api.optionsFromResource());
            _options = new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
          }
          if (defaultApp == null && _options != null) {
            this[S$._initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp("[DEFAULT]", new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: _options.apiKey, appId: _options.appId, messagingSenderId: _options.messagingSenderId, projectId: _options.projectId, authDomain: _options.authDomain, databaseURL: _options.databaseURL, storageBucket: _options.storageBucket, measurementId: _options.measurementId, trackingId: _options.trackingId, deepLinkURLScheme: _options.deepLinkURLScheme, androidClientId: _options.androidClientId, iosClientId: _options.iosClientId, iosBundleId: _options.iosBundleId, appGroupId: _options.appGroupId})));
            defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]");
          }
          if (defaultApp == null && _options == null) {
            dart.throw(firebase_core_platform_interface.coreNotInitialized());
          }
          if (defaultApp != null && _options != null && !_options.projectId[S$.$startsWith]("demo-")) {
            if (_options.apiKey !== defaultApp.options.apiKey || _options.databaseURL != null && _options.databaseURL != defaultApp.options.databaseURL || _options.storageBucket != null && _options.storageBucket != defaultApp.options.storageBucket) {
              dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
            }
          }
          return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]"));
        }
        if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[18], 145, 7, "options != null");
        if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$containsKey](name)) {
          let existingApp = dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
          if (dart.nullCheck(options).apiKey !== existingApp.options.apiKey || options.databaseURL != null && options.databaseURL != existingApp.options.databaseURL || options.storageBucket != null && options.storageBucket != existingApp.options.storageBucket) {
            dart.throw(firebase_core_platform_interface.duplicateApp(name));
          } else {
            return existingApp;
          }
        }
        this[S$._initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp(name, new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: dart.nullCheck(options).apiKey, appId: options.appId, messagingSenderId: options.messagingSenderId, projectId: options.projectId, authDomain: options.authDomain, databaseURL: options.databaseURL, storageBucket: options.storageBucket, measurementId: options.measurementId, trackingId: options.trackingId, deepLinkURLScheme: options.deepLinkURLScheme, androidClientId: options.androidClientId, iosClientId: options.iosClientId, iosBundleId: options.iosBundleId, appGroupId: options.appGroupId})));
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$containsKey](name)) {
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
      }
      dart.throw(firebase_core_platform_interface.noAppExists(name));
    }
    static ['_#new#tearOff']() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebase.new = function() {
    firebase_core_platform_interface.MethodChannelFirebase.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebase.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebase);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebase);
  dart.setMethodSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.MethodChannelFirebase.__proto__),
    [S$._initializeCore$1]: dart.fnType(async.Future$(dart.void), []),
    [S$._initializeFirebaseAppFromMap]: dart.fnType(dart.void, [messages$46pigeon.PigeonInitializeResponse])
  }));
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebase, I[15]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ['appInstances', 'isCoreInitialized', 'api']);
  dart.defineLazy(firebase_core_platform_interface.MethodChannelFirebase, {
    /*firebase_core_platform_interface.MethodChannelFirebase.appInstances*/get appInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseApp()).new();
    },
    set appInstances(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized*/get isCoreInitialized() {
      return false;
    },
    set isCoreInitialized(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.api*/get api() {
      return new messages$46pigeon.FirebaseCoreHostApi.new();
    },
    set api(value) {}
  }, false);
  firebase_core_platform_interface.MethodChannelFirebaseApp = class MethodChannelFirebaseApp extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#new#tearOff'](name, options, opts) {
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      return new firebase_core_platform_interface.MethodChannelFirebaseApp.new(name, options, {isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled});
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._isAutomaticDataCollectionEnabled$1];
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        if (this[S$._isDefault]) {
          dart.throw(firebase_core_platform_interface.noDefaultAppDelete());
        }
        if (this[S$._isDeleted]) {
          return;
        }
        yield this[S$._api].delete(this.name);
        firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$remove](this.name);
        firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$remove](this.name);
        this[S$._isDeleted] = true;
      }).bind(this));
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        yield this[S$._api].setAutomaticDataCollectionEnabled(this.name, enabled);
        this[S$._isAutomaticDataCollectionEnabled$1] = enabled;
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        yield this[S$._api].setAutomaticResourceManagementEnabled(this.name, enabled);
      }).bind(this));
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebaseApp.new = function(name, options, opts) {
    let t34;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    this[S$._isDeleted] = false;
    this[S$._api] = new messages$46pigeon.FirebaseAppHostApi.new();
    this[S$._isAutomaticDataCollectionEnabled$1] = core.bool.as((t34 = isAutomaticDataCollectionEnabled, t34 == null ? false : t34));
    firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebaseApp.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebaseApp, I[15]);
  dart.setFieldSignature(firebase_core_platform_interface.MethodChannelFirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__),
    [S$._isDeleted]: dart.fieldType(core.bool),
    [S$._isAutomaticDataCollectionEnabled$1]: dart.fieldType(core.bool),
    [S$._api]: dart.finalFieldType(messages$46pigeon.FirebaseAppHostApi)
  }));
  firebase_core_platform_interface.FirebasePluginPlatform = class FirebasePluginPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePluginPlatform._token);
    }
    get pluginConstants() {
      let appConstants = T$.MapNOfObjectN$ObjectN().as(firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$_get](this[S$._appName]));
      if (appConstants != null && appConstants[S$.$_get](this[S$._methodChannelName]) != null) {
        return core.Map.as(dart.nullCheck(appConstants[S$.$_get](this[S$._methodChannelName])));
      }
      return new _js_helper.LinkedMap.new();
    }
  };
  (firebase_core_platform_interface.FirebasePluginPlatform.new = function(_appName, _methodChannelName) {
    this[S$._appName] = _appName;
    this[S$._methodChannelName] = _methodChannelName;
    firebase_core_platform_interface.FirebasePluginPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePluginPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePluginPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    pluginConstants: core.Map
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePluginPlatform, I[15]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    [S$._appName]: dart.finalFieldType(core.String),
    [S$._methodChannelName]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['_constantsForPluginApps', '_token']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePluginPlatform, {
    /*firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps*/get _constantsForPluginApps() {
      return new _js_helper.LinkedMap.new();
    },
    set _constantsForPluginApps(value) {},
    /*firebase_core_platform_interface.FirebasePluginPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_core_platform_interface.noAppExists = function noAppExists(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "no-app", message: "No Firebase App '" + appName + "' has been created - call Firebase.initializeApp()"});
  };
  firebase_core_platform_interface.duplicateApp = function duplicateApp(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "duplicate-app", message: "A Firebase App named \"" + appName + "\" already exists"});
  };
  firebase_core_platform_interface.noDefaultAppInitialization = function noDefaultAppInitialization() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The " + "[DEFAULT]" + " app cannot be initialized here. " + "To initialize the default app, follow the installation instructions " + "for the specific platform you are developing with."});
  };
  firebase_core_platform_interface.coreNotInitialized = function coreNotInitialized() {
    let message = "Firebase has not been correctly initialized.\n\nUsually this means you've attempted to use a Firebase service before calling `Firebase.initializeApp`.\n\nView the documentation for more information: https://firebase.flutter.dev/docs/overview#initialization\n    ";
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "not-initialized", message: message});
  };
  firebase_core_platform_interface.noDefaultAppDelete = function noDefaultAppDelete() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The default Firebase app instance cannot be deleted."});
  };
  dart.defineLazy(firebase_core_platform_interface, {
    /*firebase_core_platform_interface.defaultFirebaseAppName*/get defaultFirebaseAppName() {
      return "[DEFAULT]";
    }
  }, false);
  nested.SingleChildStatelessWidget = class SingleChildStatelessWidget extends framework.StatelessWidget {
    get [S$._child$1]() {
      return this[S$._child];
    }
    set [S$._child$1](value) {
      super[S$._child$1] = value;
    }
    build(context) {
      return this.buildWithChild(context, this[S$._child$1]);
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
  };
  (nested.SingleChildStatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[S$._child] = child;
    nested.SingleChildStatelessWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatelessWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidget);
  dart.addTypeCaches(nested.SingleChildStatelessWidget);
  nested.SingleChildStatelessWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested.SingleChildStatelessElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidget, I[20]);
  dart.setFieldSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatelessWidget.__proto__),
    [S$._child$1]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_InheritedProvider_default = Symbol('_is_InheritedProvider_default');
  provider$.InheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderOfT = () => (__t$_CreateInheritedProviderOfT = dart.constFn(provider$._CreateInheritedProvider$(T)))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$_InheritedProviderElementOfT = () => (__t$_InheritedProviderElementOfT = dart.constFn(provider$._InheritedProviderElement$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeOfTN = () => (__t$_InheritedProviderScopeOfTN = dart.constFn(provider$._InheritedProviderScope$(__t$TN())))();
    class InheritedProvider extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose, builder: builder, lazy: lazy, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, startListening: startListening, lazy: lazy, builder: builder, child: child});
      }
      static ['_#_constructor#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T))._constructor({key: key, delegate: delegate, lazy: lazy, builder: builder, child: child});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[S$._delegate$2].debugFillProperties(properties);
      }
      createElement() {
        return new (__t$_InheritedProviderElementOfT()).new(this);
      }
      buildWithChild(context, child) {
        if (!(this.builder != null || child != null)) dart.assertFailed(dart.str(this[S$.$runtimeType]) + " used outside of MultiProvider must specify a child", I[19], 158, 7, "builder != null || child != null");
        return new (__t$_InheritedProviderScopeOfTN()).new({owner: this, debugType: dart.str(this[S$.$runtimeType]), child: this.builder != null ? new basic.Builder.new({builder: dart.fn(context => dart.nullCheck(this.builder)(context, child), T$.BuildContextToWidget())}) : dart.nullCheck(child)});
      }
    }
    (InheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder] = builder;
      this[S$._lazy] = lazy;
      this[S$._delegate$2] = new (__t$_CreateInheritedProviderOfT()).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder] = builder;
      this[S$._lazy] = lazy;
      this[S$._delegate$2] = new (__t$_ValueInheritedProviderOfT()).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider._constructor = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder] = builder;
      this[S$._lazy] = lazy;
      this[S$._delegate$2] = delegate;
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    dart.addTypeTests(InheritedProvider);
    InheritedProvider.prototype[_is_InheritedProvider_default] = true;
    dart.addTypeCaches(InheritedProvider);
    dart.setMethodSignature(InheritedProvider, () => ({
      __proto__: dart.getMethods(InheritedProvider.__proto__),
      createElement: dart.fnType(provider$._InheritedProviderElement$(T), []),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(InheritedProvider, I[21]);
    dart.setFieldSignature(InheritedProvider, () => ({
      __proto__: dart.getFields(InheritedProvider.__proto__),
      [S$._delegate$2]: dart.finalFieldType(provider$._Delegate$(T)),
      [S$._lazy]: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])))
    }));
    return InheritedProvider;
  });
  provider$.InheritedProvider = provider$.InheritedProvider$();
  dart.addTypeTests(provider$.InheritedProvider, _is_InheritedProvider_default);
  const _is_DeferredInheritedProvider_default = Symbol('_is_DeferredInheritedProvider_default');
  provider$.DeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderOfT$R = () => (__t$_CreateDeferredInheritedProviderOfT$R = dart.constFn(provider$._CreateDeferredInheritedProvider$(T, R)))();
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    class DeferredInheritedProvider extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).new({key: key, create: create, dispose: dispose, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).value({key: key, value: value, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (DeferredInheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, child: child, lazy: lazy, builder: builder, delegate: new (__t$_CreateDeferredInheritedProviderOfT$R()).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening})});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    (DeferredInheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, lazy: lazy, builder: builder, delegate: new (__t$_ValueDeferredInheritedProviderOfT$R()).new(value, updateShouldNotify, startListening), child: child});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    dart.addTypeTests(DeferredInheritedProvider);
    DeferredInheritedProvider.prototype[_is_DeferredInheritedProvider_default] = true;
    dart.addTypeCaches(DeferredInheritedProvider);
    dart.setLibraryUri(DeferredInheritedProvider, I[21]);
    return DeferredInheritedProvider;
  });
  provider$.DeferredInheritedProvider = provider$.DeferredInheritedProvider$();
  dart.addTypeTests(provider$.DeferredInheritedProvider, _is_DeferredInheritedProvider_default);
  const _is_StreamProvider_default = Symbol('_is_StreamProvider_default');
  async_provider.StreamProvider$ = dart.generic(T => {
    class StreamProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Stream$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (StreamProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    (StreamProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.value.call(this, {key: key, lazy: lazy, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    dart.addTypeTests(StreamProvider);
    StreamProvider.prototype[_is_StreamProvider_default] = true;
    dart.addTypeCaches(StreamProvider);
    dart.setLibraryUri(StreamProvider, I[22]);
    return StreamProvider;
  });
  async_provider.StreamProvider = async_provider.StreamProvider$();
  dart.addTypeTests(async_provider.StreamProvider, _is_StreamProvider_default);
  const _is_FutureProvider_default = Symbol('_is_FutureProvider_default');
  async_provider.FutureProvider$ = dart.generic(T => {
    class FutureProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Future$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
    }
    (FutureProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    (FutureProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.value.call(this, {key: key, builder: builder, lazy: false, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    dart.addTypeTests(FutureProvider);
    FutureProvider.prototype[_is_FutureProvider_default] = true;
    dart.addTypeCaches(FutureProvider);
    dart.setLibraryUri(FutureProvider, I[22]);
    return FutureProvider;
  });
  async_provider.FutureProvider = async_provider.FutureProvider$();
  dart.addTypeTests(async_provider.FutureProvider, _is_FutureProvider_default);
  async_provider._streamStartListening = function _streamStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      if (!e.hasValue) {
        setState(initialData);
      }
      if (controller == null) {
        return dart.fn(() => {
        }, T$.VoidTovoid());
      }
      let sub = controller.listen(setState, {onError: dart.fn(error => {
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nStreamProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.bind(sub, 'cancel');
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Stream$(T)), dart.nullable(T)]));
  };
  async_provider._futureStartListening = function _futureStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      let t34;
      if (!e.hasValue) {
        setState(initialData);
      }
      let canceled = false;
      t34 = controller;
      t34 == null ? null : t34.then(core.Null, dart.fn(value => {
        if (canceled) {
          return;
        }
        setState(value);
      }, dart.fnType(core.Null, [T])), {onError: dart.fn(error => {
          if (canceled) {
            return;
          }
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nFutureProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.fn(() => canceled = true, T$.VoidTovoid());
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Future$(T)), dart.nullable(T)]));
  };
  const _is_ListenableProvider_default = Symbol('_is_ListenableProvider_default');
  listenable_provider.ListenableProvider$ = dart.generic(T => {
    class ListenableProvider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static _startListening(e, value) {
        let t34;
        t34 = value;
        t34 == null ? null : t34.addListener(dart.bind(e, 'markNeedsNotifyDependents'));
        return dart.fn(() => {
          let t34;
          t34 = value;
          return t34 == null ? null : t34.removeListener(dart.bind(e, 'markNeedsNotifyDependents'));
        }, T$.VoidTovoid());
      }
    }
    (ListenableProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.new.call(this, {key: key, startListening: C[14] || CT.C14, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    (ListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: C[14] || CT.C14, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    dart.addTypeTests(ListenableProvider);
    ListenableProvider.prototype[_is_ListenableProvider_default] = true;
    dart.addTypeCaches(ListenableProvider);
    dart.setStaticMethodSignature(ListenableProvider, () => ['_startListening']);
    dart.setLibraryUri(ListenableProvider, I[23]);
    return ListenableProvider;
  });
  listenable_provider.ListenableProvider = listenable_provider.ListenableProvider$();
  dart.addTypeTests(listenable_provider.ListenableProvider, _is_ListenableProvider_default);
  const _is_ChangeNotifierProvider_default = Symbol('_is_ChangeNotifierProvider_default');
  change_notifier_provider.ChangeNotifierProvider$ = dart.generic(T => {
    class ChangeNotifierProvider extends listenable_provider.ListenableProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).new({key: key, create: create, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).value({key: key, value: value, builder: builder, child: child});
      }
      static _dispose(context, notifier) {
        let t34;
        t34 = notifier;
        t34 == null ? null : t34.dispose();
      }
    }
    (ChangeNotifierProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.new.call(this, {key: key, create: create, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    (ChangeNotifierProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    dart.addTypeTests(ChangeNotifierProvider);
    ChangeNotifierProvider.prototype[_is_ChangeNotifierProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProvider);
    dart.setStaticMethodSignature(ChangeNotifierProvider, () => ['_dispose']);
    dart.setLibraryUri(ChangeNotifierProvider, I[24]);
    return ChangeNotifierProvider;
  });
  change_notifier_provider.ChangeNotifierProvider = change_notifier_provider.ChangeNotifierProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProvider, _is_ChangeNotifierProvider_default);
  const _is_ListenableProxyProvider0_default = Symbol('_is_ListenableProxyProvider0_default');
  listenable_provider.ListenableProxyProvider0$ = dart.generic(R => {
    class ListenableProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider0$(R)).new({key: key, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, lazy: lazy, builder: builder, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: C[14] || CT.C14, child: child});
      ;
    }).prototype = ListenableProxyProvider0.prototype;
    dart.addTypeTests(ListenableProxyProvider0);
    ListenableProxyProvider0.prototype[_is_ListenableProxyProvider0_default] = true;
    dart.addTypeCaches(ListenableProxyProvider0);
    dart.setLibraryUri(ListenableProxyProvider0, I[23]);
    return ListenableProxyProvider0;
  });
  listenable_provider.ListenableProxyProvider0 = listenable_provider.ListenableProxyProvider0$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider0, _is_ListenableProxyProvider0_default);
  const _is_ListenableProxyProvider_default = Symbol('_is_ListenableProxyProvider_default');
  listenable_provider.ListenableProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider$(T, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider.prototype;
    dart.addTypeTests(ListenableProxyProvider);
    ListenableProxyProvider.prototype[_is_ListenableProxyProvider_default] = true;
    dart.addTypeCaches(ListenableProxyProvider);
    dart.setLibraryUri(ListenableProxyProvider, I[23]);
    return ListenableProxyProvider;
  });
  listenable_provider.ListenableProxyProvider = listenable_provider.ListenableProxyProvider$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider, _is_ListenableProxyProvider_default);
  const _is_ChangeNotifierProxyProvider_default = Symbol('_is_ChangeNotifierProxyProvider_default');
  change_notifier_provider.ChangeNotifierProxyProvider$ = dart.generic((T, R) => {
    class ChangeNotifierProxyProvider extends listenable_provider.ListenableProxyProvider$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider$(T, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider);
    ChangeNotifierProxyProvider.prototype[_is_ChangeNotifierProxyProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider);
    dart.setLibraryUri(ChangeNotifierProxyProvider, I[24]);
    return ChangeNotifierProxyProvider;
  });
  change_notifier_provider.ChangeNotifierProxyProvider = change_notifier_provider.ChangeNotifierProxyProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider, _is_ChangeNotifierProxyProvider_default);
  const _is_ChangeNotifierProxyProvider0_default = Symbol('_is_ChangeNotifierProxyProvider0_default');
  change_notifier_provider.ChangeNotifierProxyProvider0$ = dart.generic(R => {
    class ChangeNotifierProxyProvider0 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider0$(R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider0.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider0);
    ChangeNotifierProxyProvider0.prototype[_is_ChangeNotifierProxyProvider0_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider0);
    dart.setLibraryUri(ChangeNotifierProxyProvider0, I[24]);
    return ChangeNotifierProxyProvider0;
  });
  change_notifier_provider.ChangeNotifierProxyProvider0 = change_notifier_provider.ChangeNotifierProxyProvider0$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider0, _is_ChangeNotifierProxyProvider0_default);
  const _is_ListenableProxyProvider2_default = Symbol('_is_ListenableProxyProvider2_default');
  listenable_provider.ListenableProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider2 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider2.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider2.prototype;
    dart.addTypeTests(ListenableProxyProvider2);
    ListenableProxyProvider2.prototype[_is_ListenableProxyProvider2_default] = true;
    dart.addTypeCaches(ListenableProxyProvider2);
    dart.setLibraryUri(ListenableProxyProvider2, I[23]);
    return ListenableProxyProvider2;
  });
  listenable_provider.ListenableProxyProvider2 = listenable_provider.ListenableProxyProvider2$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider2, _is_ListenableProxyProvider2_default);
  const _is_ChangeNotifierProxyProvider2_default = Symbol('_is_ChangeNotifierProxyProvider2_default');
  change_notifier_provider.ChangeNotifierProxyProvider2$ = dart.generic((T, T2, R) => {
    class ChangeNotifierProxyProvider2 extends listenable_provider.ListenableProxyProvider2$(T, T2, R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider2.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider2.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider2);
    ChangeNotifierProxyProvider2.prototype[_is_ChangeNotifierProxyProvider2_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider2);
    dart.setLibraryUri(ChangeNotifierProxyProvider2, I[24]);
    return ChangeNotifierProxyProvider2;
  });
  change_notifier_provider.ChangeNotifierProxyProvider2 = change_notifier_provider.ChangeNotifierProxyProvider2$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider2, _is_ChangeNotifierProxyProvider2_default);
  const _is_ListenableProxyProvider3_default = Symbol('_is_ListenableProxyProvider3_default');
  listenable_provider.ListenableProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider3 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider3.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider3.prototype;
    dart.addTypeTests(ListenableProxyProvider3);
    ListenableProxyProvider3.prototype[_is_ListenableProxyProvider3_default] = true;
    dart.addTypeCaches(ListenableProxyProvider3);
    dart.setLibraryUri(ListenableProxyProvider3, I[23]);
    return ListenableProxyProvider3;
  });
  listenable_provider.ListenableProxyProvider3 = listenable_provider.ListenableProxyProvider3$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider3, _is_ListenableProxyProvider3_default);
  const _is_ChangeNotifierProxyProvider3_default = Symbol('_is_ChangeNotifierProxyProvider3_default');
  change_notifier_provider.ChangeNotifierProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    class ChangeNotifierProxyProvider3 extends listenable_provider.ListenableProxyProvider3$(T, T2, T3, R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider3.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider3.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider3);
    ChangeNotifierProxyProvider3.prototype[_is_ChangeNotifierProxyProvider3_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider3);
    dart.setLibraryUri(ChangeNotifierProxyProvider3, I[24]);
    return ChangeNotifierProxyProvider3;
  });
  change_notifier_provider.ChangeNotifierProxyProvider3 = change_notifier_provider.ChangeNotifierProxyProvider3$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider3, _is_ChangeNotifierProxyProvider3_default);
  const _is_ListenableProxyProvider4_default = Symbol('_is_ListenableProxyProvider4_default');
  listenable_provider.ListenableProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider4 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider4.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider4.prototype;
    dart.addTypeTests(ListenableProxyProvider4);
    ListenableProxyProvider4.prototype[_is_ListenableProxyProvider4_default] = true;
    dart.addTypeCaches(ListenableProxyProvider4);
    dart.setLibraryUri(ListenableProxyProvider4, I[23]);
    return ListenableProxyProvider4;
  });
  listenable_provider.ListenableProxyProvider4 = listenable_provider.ListenableProxyProvider4$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider4, _is_ListenableProxyProvider4_default);
  const _is_ChangeNotifierProxyProvider4_default = Symbol('_is_ChangeNotifierProxyProvider4_default');
  change_notifier_provider.ChangeNotifierProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    class ChangeNotifierProxyProvider4 extends listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider4.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider4.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider4);
    ChangeNotifierProxyProvider4.prototype[_is_ChangeNotifierProxyProvider4_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider4);
    dart.setLibraryUri(ChangeNotifierProxyProvider4, I[24]);
    return ChangeNotifierProxyProvider4;
  });
  change_notifier_provider.ChangeNotifierProxyProvider4 = change_notifier_provider.ChangeNotifierProxyProvider4$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider4, _is_ChangeNotifierProxyProvider4_default);
  const _is_ListenableProxyProvider5_default = Symbol('_is_ListenableProxyProvider5_default');
  listenable_provider.ListenableProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider5 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider5.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider5.prototype;
    dart.addTypeTests(ListenableProxyProvider5);
    ListenableProxyProvider5.prototype[_is_ListenableProxyProvider5_default] = true;
    dart.addTypeCaches(ListenableProxyProvider5);
    dart.setLibraryUri(ListenableProxyProvider5, I[23]);
    return ListenableProxyProvider5;
  });
  listenable_provider.ListenableProxyProvider5 = listenable_provider.ListenableProxyProvider5$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider5, _is_ListenableProxyProvider5_default);
  const _is_ChangeNotifierProxyProvider5_default = Symbol('_is_ChangeNotifierProxyProvider5_default');
  change_notifier_provider.ChangeNotifierProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    class ChangeNotifierProxyProvider5 extends listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider5.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider5.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider5);
    ChangeNotifierProxyProvider5.prototype[_is_ChangeNotifierProxyProvider5_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider5);
    dart.setLibraryUri(ChangeNotifierProxyProvider5, I[24]);
    return ChangeNotifierProxyProvider5;
  });
  change_notifier_provider.ChangeNotifierProxyProvider5 = change_notifier_provider.ChangeNotifierProxyProvider5$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider5, _is_ChangeNotifierProxyProvider5_default);
  const _is_ListenableProxyProvider6_default = Symbol('_is_ListenableProxyProvider6_default');
  listenable_provider.ListenableProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider6 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider6.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider6.prototype;
    dart.addTypeTests(ListenableProxyProvider6);
    ListenableProxyProvider6.prototype[_is_ListenableProxyProvider6_default] = true;
    dart.addTypeCaches(ListenableProxyProvider6);
    dart.setLibraryUri(ListenableProxyProvider6, I[23]);
    return ListenableProxyProvider6;
  });
  listenable_provider.ListenableProxyProvider6 = listenable_provider.ListenableProxyProvider6$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider6, _is_ListenableProxyProvider6_default);
  const _is_ChangeNotifierProxyProvider6_default = Symbol('_is_ChangeNotifierProxyProvider6_default');
  change_notifier_provider.ChangeNotifierProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    class ChangeNotifierProxyProvider6 extends listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider6.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[13] || CT.C13, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider6.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider6);
    ChangeNotifierProxyProvider6.prototype[_is_ChangeNotifierProxyProvider6_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider6);
    dart.setLibraryUri(ChangeNotifierProxyProvider6, I[24]);
    return ChangeNotifierProxyProvider6;
  });
  change_notifier_provider.ChangeNotifierProxyProvider6 = change_notifier_provider.ChangeNotifierProxyProvider6$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider6, _is_ChangeNotifierProxyProvider6_default);
  const _is_Consumer_default = Symbol('_is_Consumer_default');
  consumer.Consumer$ = dart.generic(T => {
    class Consumer extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer$(T)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t36, t35, t34;
        t34 = context;
        t35 = provider$.Provider.of(T, context);
        t36 = child;
        return this.builder(t34, t35, t36);
      }
    }
    (Consumer.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$1] = builder;
      Consumer.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer.prototype;
    dart.addTypeTests(Consumer);
    Consumer.prototype[_is_Consumer_default] = true;
    dart.addTypeCaches(Consumer);
    dart.setMethodSignature(Consumer, () => ({
      __proto__: dart.getMethods(Consumer.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer, I[25]);
    dart.setFieldSignature(Consumer, () => ({
      __proto__: dart.getFields(Consumer.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)]))
    }));
    return Consumer;
  });
  consumer.Consumer = consumer.Consumer$();
  dart.addTypeTests(consumer.Consumer, _is_Consumer_default);
  const _is_Consumer2_default = Symbol('_is_Consumer2_default');
  consumer.Consumer2$ = dart.generic((A, B) => {
    class Consumer2 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer2$(A, B)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t37, t36, t35, t34;
        t34 = context;
        t35 = provider$.Provider.of(A, context);
        t36 = provider$.Provider.of(B, context);
        t37 = child;
        return this.builder(t34, t35, t36, t37);
      }
    }
    (Consumer2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$2] = builder;
      Consumer2.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer2.prototype;
    dart.addTypeTests(Consumer2);
    Consumer2.prototype[_is_Consumer2_default] = true;
    dart.addTypeCaches(Consumer2);
    dart.setMethodSignature(Consumer2, () => ({
      __proto__: dart.getMethods(Consumer2.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer2, I[25]);
    dart.setFieldSignature(Consumer2, () => ({
      __proto__: dart.getFields(Consumer2.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, dart.nullable(framework.Widget)]))
    }));
    return Consumer2;
  });
  consumer.Consumer2 = consumer.Consumer2$();
  dart.addTypeTests(consumer.Consumer2, _is_Consumer2_default);
  const _is_Consumer3_default = Symbol('_is_Consumer3_default');
  consumer.Consumer3$ = dart.generic((A, B, C) => {
    class Consumer3 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer3$(A, B, C)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t38, t37, t36, t35, t34;
        t34 = context;
        t35 = provider$.Provider.of(A, context);
        t36 = provider$.Provider.of(B, context);
        t37 = provider$.Provider.of(C, context);
        t38 = child;
        return this.builder(t34, t35, t36, t37, t38);
      }
    }
    (Consumer3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$3] = builder;
      Consumer3.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer3.prototype;
    dart.addTypeTests(Consumer3);
    Consumer3.prototype[_is_Consumer3_default] = true;
    dart.addTypeCaches(Consumer3);
    dart.setMethodSignature(Consumer3, () => ({
      __proto__: dart.getMethods(Consumer3.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer3, I[25]);
    dart.setFieldSignature(Consumer3, () => ({
      __proto__: dart.getFields(Consumer3.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, dart.nullable(framework.Widget)]))
    }));
    return Consumer3;
  });
  consumer.Consumer3 = consumer.Consumer3$();
  dart.addTypeTests(consumer.Consumer3, _is_Consumer3_default);
  const _is_Consumer4_default = Symbol('_is_Consumer4_default');
  consumer.Consumer4$ = dart.generic((A, B, C, D) => {
    class Consumer4 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer4$(A, B, C, D)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t39, t38, t37, t36, t35, t34;
        t34 = context;
        t35 = provider$.Provider.of(A, context);
        t36 = provider$.Provider.of(B, context);
        t37 = provider$.Provider.of(C, context);
        t38 = provider$.Provider.of(D, context);
        t39 = child;
        return this.builder(t34, t35, t36, t37, t38, t39);
      }
    }
    (Consumer4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$4] = builder;
      Consumer4.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer4.prototype;
    dart.addTypeTests(Consumer4);
    Consumer4.prototype[_is_Consumer4_default] = true;
    dart.addTypeCaches(Consumer4);
    dart.setMethodSignature(Consumer4, () => ({
      __proto__: dart.getMethods(Consumer4.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer4, I[25]);
    dart.setFieldSignature(Consumer4, () => ({
      __proto__: dart.getFields(Consumer4.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, dart.nullable(framework.Widget)]))
    }));
    return Consumer4;
  });
  consumer.Consumer4 = consumer.Consumer4$();
  dart.addTypeTests(consumer.Consumer4, _is_Consumer4_default);
  const _is_Consumer5_default = Symbol('_is_Consumer5_default');
  consumer.Consumer5$ = dart.generic((A, B, C, D, E) => {
    class Consumer5 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer5$(A, B, C, D, E)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t40, t39, t38, t37, t36, t35, t34;
        t34 = context;
        t35 = provider$.Provider.of(A, context);
        t36 = provider$.Provider.of(B, context);
        t37 = provider$.Provider.of(C, context);
        t38 = provider$.Provider.of(D, context);
        t39 = provider$.Provider.of(E, context);
        t40 = child;
        return this.builder(t34, t35, t36, t37, t38, t39, t40);
      }
    }
    (Consumer5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$5] = builder;
      Consumer5.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer5.prototype;
    dart.addTypeTests(Consumer5);
    Consumer5.prototype[_is_Consumer5_default] = true;
    dart.addTypeCaches(Consumer5);
    dart.setMethodSignature(Consumer5, () => ({
      __proto__: dart.getMethods(Consumer5.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer5, I[25]);
    dart.setFieldSignature(Consumer5, () => ({
      __proto__: dart.getFields(Consumer5.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, dart.nullable(framework.Widget)]))
    }));
    return Consumer5;
  });
  consumer.Consumer5 = consumer.Consumer5$();
  dart.addTypeTests(consumer.Consumer5, _is_Consumer5_default);
  const _is_Consumer6_default = Symbol('_is_Consumer6_default');
  consumer.Consumer6$ = dart.generic((A, B, C, D, E, F) => {
    class Consumer6 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, F, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer6$(A, B, C, D, E, F)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t41, t40, t39, t38, t37, t36, t35, t34;
        t34 = context;
        t35 = provider$.Provider.of(A, context);
        t36 = provider$.Provider.of(B, context);
        t37 = provider$.Provider.of(C, context);
        t38 = provider$.Provider.of(D, context);
        t39 = provider$.Provider.of(E, context);
        t40 = provider$.Provider.of(F, context);
        t41 = child;
        return this.builder(t34, t35, t36, t37, t38, t39, t40, t41);
      }
    }
    (Consumer6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$6] = builder;
      Consumer6.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer6.prototype;
    dart.addTypeTests(Consumer6);
    Consumer6.prototype[_is_Consumer6_default] = true;
    dart.addTypeCaches(Consumer6);
    dart.setMethodSignature(Consumer6, () => ({
      __proto__: dart.getMethods(Consumer6.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer6, I[25]);
    dart.setFieldSignature(Consumer6, () => ({
      __proto__: dart.getFields(Consumer6.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, F, dart.nullable(framework.Widget)]))
    }));
    return Consumer6;
  });
  consumer.Consumer6 = consumer.Consumer6$();
  dart.addTypeTests(consumer.Consumer6, _is_Consumer6_default);
  nested.Nested = class Nested extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.Nested.new({key: key, children: children, child: child});
    }
    build(context) {
      dart.throw(new core.StateError.new("implemented internally"));
    }
    createElement() {
      return new nested._NestedElement.new(this);
    }
  };
  (nested.Nested.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!children[S$.$isNotEmpty]) dart.assertFailed(null, I[26], 71, 16, "children.isNotEmpty");
    this[S$._children] = children;
    this[S$._child$1] = child;
    nested.Nested.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.Nested.prototype;
  dart.addTypeTests(nested.Nested);
  dart.addTypeCaches(nested.Nested);
  nested.Nested[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.Nested, () => ({
    __proto__: dart.getMethods(nested.Nested.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested._NestedElement, [])
  }));
  dart.setLibraryUri(nested.Nested, I[20]);
  dart.setFieldSignature(nested.Nested, () => ({
    __proto__: dart.getFields(nested.Nested.__proto__),
    [S$._children]: dart.finalFieldType(core.List$(nested.SingleChildWidget)),
    [S$._child$1]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  provider$.MultiProvider = class MultiProvider extends nested.Nested {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new provider$.MultiProvider.new({key: key, providers: providers, child: child, builder: builder});
    }
  };
  (provider$.MultiProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    provider$.MultiProvider.__proto__.new.call(this, {key: key, children: providers, child: builder != null ? new basic.Builder.new({builder: dart.fn(context => builder(context, child), T$.BuildContextToWidget())}) : child});
    ;
  }).prototype = provider$.MultiProvider.prototype;
  dart.addTypeTests(provider$.MultiProvider);
  dart.addTypeCaches(provider$.MultiProvider);
  dart.setLibraryUri(provider$.MultiProvider, I[21]);
  const _is_Provider_default = Symbol('_is_Provider_default');
  provider$.Provider$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class Provider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static of(T, context, opts) {
        let t34;
        let listen = opts && 'listen' in opts ? opts.listen : true;
        if (!(dart.nullCheck(context.owner).debugBuilding || listen === false || provider$.debugIsInInheritedProviderUpdate)) dart.assertFailed("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + dart.str(dart.wrapType(T)) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + dart.str(context) + "\n", I[27], 274, 7, "context.owner!.debugBuilding ||\n          listen == false ||\n          debugIsInInheritedProviderUpdate");
        let inheritedElement = provider$.Provider._inheritedElementOf(T, context);
        if (listen) {
          context.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
        }
        let value = (t34 = inheritedElement, t34 == null ? null : t34.value);
        if (provider$._isSoundMode) {
          if (!T.is(value)) {
            dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), context.widget[S$.$runtimeType]));
          }
          return value;
        }
        return T.as(value);
      }
      static _inheritedElementOf(T, context) {
        if (!(context !== null)) dart.assertFailed("Tried to call context.read/watch/select or similar on a `context` that is null.\n\nThis can happen if you used the context of a StatefulWidget and that\nStatefulWidget was disposed.\n", I[27], 319, 12, "context != null");
        if (!(provider$._debugIsSelecting === false)) dart.assertFailed("Cannot call context.read/watch/select inside the callback of a context.select", I[27], 326, 7, "_debugIsSelecting == false");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n", I[27], 330, 7, "T != dynamic");
        let inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))).as(context.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T))));
        if (inheritedElement == null && !T.is(null)) {
          dart.throw(new provider$.ProviderNotFoundException.new(dart.wrapType(T), context.widget[S$.$runtimeType]));
        }
        return inheritedElement;
      }
    }
    (Provider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Provider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, dispose: dispose, debugCheckInvalidValueType: dart.fn(value => {
          let t34;
          t34 = provider$.Provider.debugCheckInvalidValueType;
          return t34 == null ? null : t34(T, value);
        }, __t$TTovoid()), child: child});
      ;
    }).prototype = Provider.prototype;
    (Provider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!dart.fn(() => {
        let t34;
        t34 = provider$.Provider.debugCheckInvalidValueType;
        t34 == null ? null : t34(T, value);
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[27], 243, 16, "() {\n          Provider.debugCheckInvalidValueType?.call<T>(value);\n          return true;\n        }()");
      Provider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, child: child});
      ;
    }).prototype = Provider.prototype;
    dart.addTypeTests(Provider);
    Provider.prototype[_is_Provider_default] = true;
    dart.addTypeCaches(Provider);
    dart.setStaticMethodSignature(Provider, () => ['of', '_inheritedElementOf']);
    dart.setLibraryUri(Provider, I[21]);
    dart.setStaticFieldSignature(Provider, () => ['debugCheckInvalidValueType']);
    return Provider;
  });
  provider$.Provider = provider$.Provider$();
  dart.defineLazy(provider$.Provider, {
    /*provider$.Provider.debugCheckInvalidValueType*/get debugCheckInvalidValueType() {
      return dart.fn((T, value) => {
        if (!dart.fn(() => {
          if (change_notifier.Listenable.is(value) || async.Stream.is(value)) {
            dart.throw(assertions.FlutterError.new("Tried to use Provider with a subtype of Listenable/Stream (" + dart.str(dart.wrapType(T)) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + dart.str(dart.wrapType(T)) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[27], 385, 12, "() {\n      if (value is Listenable || value is Stream) {\n        throw FlutterError('''\nTried to use Provider with a subtype of Listenable/Stream ($T).\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen $T is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n''');\n      }\n      return true;\n    }()");
      }, T$.TTovoid$1());
    },
    set debugCheckInvalidValueType(value) {}
  }, false);
  dart.addTypeTests(provider$.Provider, _is_Provider_default);
  provider$.ProviderNullException = class ProviderNullException extends core.Object {
    get valueType() {
      return this[S$.valueType];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[S$.widgetType];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNullException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: The widget " + dart.str(this.widgetType) + " tried to read Provider<" + dart.str(this.valueType) + "> but the matching\nprovider returned null.\n\nTo fix the error, consider changing Provider<" + dart.str(this.valueType) + "> to Provider<" + dart.str(this.valueType) + "?>.\n";
    }
  };
  (provider$.ProviderNullException.new = function(valueType, widgetType) {
    this[S$.valueType] = valueType;
    this[S$.widgetType] = widgetType;
    ;
  }).prototype = provider$.ProviderNullException.prototype;
  dart.addTypeTests(provider$.ProviderNullException);
  dart.addTypeCaches(provider$.ProviderNullException);
  provider$.ProviderNullException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNullException, I[21]);
  dart.setFieldSignature(provider$.ProviderNullException, () => ({
    __proto__: dart.getFields(provider$.ProviderNullException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNullException, ['toString']);
  provider$.ProviderNotFoundException = class ProviderNotFoundException extends core.Object {
    get valueType() {
      return this[S$.valueType$1];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[S$.widgetType$1];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNotFoundException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: Could not find the correct Provider<" + dart.str(this.valueType) + "> above this " + dart.str(this.widgetType) + " Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are \"scoped\". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that " + dart.str(this.widgetType) + " is under your MultiProvider/Provider<" + dart.str(this.valueType) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>().toString()),\n    );\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context, child) {\n        // No longer throws\n        return Text(context.watch<Example>().toString());\n      }\n    );\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    }
  };
  (provider$.ProviderNotFoundException.new = function(valueType, widgetType) {
    this[S$.valueType$1] = valueType;
    this[S$.widgetType$1] = widgetType;
    ;
  }).prototype = provider$.ProviderNotFoundException.prototype;
  dart.addTypeTests(provider$.ProviderNotFoundException);
  dart.addTypeCaches(provider$.ProviderNotFoundException);
  provider$.ProviderNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNotFoundException, I[21]);
  dart.setFieldSignature(provider$.ProviderNotFoundException, () => ({
    __proto__: dart.getFields(provider$.ProviderNotFoundException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNotFoundException, ['toString']);
  const _is__Delegate_default = Symbol('_is__Delegate_default');
  provider$._Delegate$ = dart.generic(T => {
    class _Delegate extends core.Object {
      debugFillProperties(properties) {
      }
    }
    (_Delegate.new = function() {
      ;
    }).prototype = _Delegate.prototype;
    dart.addTypeTests(_Delegate);
    _Delegate.prototype[_is__Delegate_default] = true;
    dart.addTypeCaches(_Delegate);
    dart.setMethodSignature(_Delegate, () => ({
      __proto__: dart.getMethods(_Delegate.__proto__),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder])
    }));
    dart.setLibraryUri(_Delegate, I[21]);
    return _Delegate;
  });
  provider$._Delegate = provider$._Delegate$();
  dart.addTypeTests(provider$._Delegate, _is__Delegate_default);
  const _is__DeferredDelegate_default = Symbol('_is__DeferredDelegate_default');
  provider$._DeferredDelegate$ = dart.generic((T, R) => {
    class _DeferredDelegate extends provider$._Delegate$(R) {}
    (_DeferredDelegate.new = function(updateShouldNotify, startListening) {
      this.updateShouldNotify = updateShouldNotify;
      this.startListening = startListening;
      ;
    }).prototype = _DeferredDelegate.prototype;
    dart.addTypeTests(_DeferredDelegate);
    _DeferredDelegate.prototype[_is__DeferredDelegate_default] = true;
    dart.addTypeCaches(_DeferredDelegate);
    dart.setLibraryUri(_DeferredDelegate, I[21]);
    dart.setFieldSignature(_DeferredDelegate, () => ({
      __proto__: dart.getFields(_DeferredDelegate.__proto__),
      updateShouldNotify: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [R, R]))),
      startListening: dart.finalFieldType(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(R)), dart.fnType(dart.void, [R]), T, dart.nullable(R)]))
    }));
    return _DeferredDelegate;
  });
  provider$._DeferredDelegate = provider$._DeferredDelegate$();
  dart.addTypeTests(provider$._DeferredDelegate, _is__DeferredDelegate_default);
  const _is__DelegateState_default = Symbol('_is__DelegateState_default');
  provider$._DelegateState$ = dart.generic((T, D) => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeElementOfTN = () => (__t$_InheritedProviderScopeElementOfTN = dart.constFn(provider$._InheritedProviderScopeElement$(__t$TN())))();
    var __t$_InheritedProviderScopeElementNOfTN = () => (__t$_InheritedProviderScopeElementNOfTN = dart.constFn(dart.nullable(__t$_InheritedProviderScopeElementOfTN())))();
    class _DelegateState extends core.Object {
      get element() {
        return this[S$.element];
      }
      set element(value) {
        this[S$.element] = __t$_InheritedProviderScopeElementNOfTN().as(value);
      }
      get delegate() {
        return D.as(dart.nullCheck(this.element).widget.owner[S$._delegate$2]);
      }
      debugSetInheritedLock(value) {
        return dart.nullCheck(this.element)[S$._debugSetInheritedLock](value);
      }
      willUpdateDelegate(newDelegate) {
        D.as(newDelegate);
        return false;
      }
      dispose() {
      }
      debugFillProperties(properties) {
      }
      build(opts) {
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
      }
    }
    (_DelegateState.new = function() {
      this[S$.element] = null;
      ;
    }).prototype = _DelegateState.prototype;
    dart.addTypeTests(_DelegateState);
    _DelegateState.prototype[_is__DelegateState_default] = true;
    dart.addTypeCaches(_DelegateState);
    dart.setMethodSignature(_DelegateState, () => ({
      __proto__: dart.getMethods(_DelegateState.__proto__),
      debugSetInheritedLock: dart.fnType(core.bool, [core.bool]),
      willUpdateDelegate: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      dispose: dart.fnType(dart.void, []),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder]),
      build: dart.fnType(dart.void, [], {}, {isBuildFromExternalSources: core.bool})
    }));
    dart.setGetterSignature(_DelegateState, () => ({
      __proto__: dart.getGetters(_DelegateState.__proto__),
      delegate: D
    }));
    dart.setLibraryUri(_DelegateState, I[21]);
    dart.setFieldSignature(_DelegateState, () => ({
      __proto__: dart.getFields(_DelegateState.__proto__),
      element: dart.fieldType(dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))))
    }));
    return _DelegateState;
  });
  provider$._DelegateState = provider$._DelegateState$();
  dart.addTypeTests(provider$._DelegateState, _is__DelegateState_default);
  const _is__DeferredDelegateState_default = Symbol('_is__DeferredDelegateState_default');
  provider$._DeferredDelegateState$ = dart.generic((T, R, W) => {
    var __t$InheritedContextOfRNAndFnAndT__ToFn = () => (__t$InheritedContextOfRNAndFnAndT__ToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfRN(), __t$RTovoid(), T, __t$RN()])))();
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$InheritedContextOfRN = () => (__t$InheritedContextOfRN = dart.constFn(provider$.InheritedContext$(__t$RN())))();
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    var __t$RAndRTobool = () => (__t$RAndRTobool = dart.constFn(dart.fnType(core.bool, [R, R])))();
    var __t$RAndRToNbool = () => (__t$RAndRToNbool = dart.constFn(dart.nullable(__t$RAndRTobool())))();
    class _DeferredDelegateState extends provider$._DelegateState$(R, W) {
      get value() {
        let t38, t37, t36, t35, t34;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = false;
        this[S$._removeListener] == null ? this[S$._removeListener] = (t34 = this.delegate, t35 = dart.nullCheck(this.element), t36 = dart.bind(this, 'setState'), t37 = this.controller, t38 = this[S$._value], __t$InheritedContextOfRNAndFnAndT__ToFn().as(t34.startListening)(t35, t36, t37, t38)) : null;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = true;
        if (!dart.nullCheck(this.element).hasValue) dart.assertFailed("The callback \"startListening\" was called, but it left DeferredInhertitedProviderElement<" + dart.str(dart.wrapType(T)) + ", " + dart.str(dart.wrapType(R)) + ">\nin an uninitialized state.\n\nIt is necessary for \"startListening\" to call \"setState\" at least once the very\nfirst time \"value\" is requested.\n\nTo fix, consider:\n\nDeferredInheritedProvider(\n  ...,\n  startListening: (element, setState, controller, value) {\n    if (!element.hasValue) {\n      setState(myInitialValue); // TODO replace myInitialValue with your own\n    }\n    ...\n  }\n)\n    ", I[28], 109, 12, "element!.hasValue");
        if (!(this[S$._removeListener] != null)) dart.assertFailed(null, I[28], 128, 12, "_removeListener != null");
        return R.as(this[S$._value]);
      }
      dispose() {
        let t34;
        super.dispose();
        t34 = this[S$._removeListener];
        t34 == null ? null : t34();
      }
      get isLoaded() {
        return this[S$._removeListener] != null;
      }
      get hasValue() {
        return this[S$._hasValue];
      }
      setState(value) {
        R.as(value);
        if (this[S$._hasValue]) {
          let shouldNotify = __t$RAndRToNbool().as(this.delegate.updateShouldNotify) != null ? dart.nullCheck(__t$RAndRToNbool().as(this.delegate.updateShouldNotify))(R.as(this[S$._value]), value) : !dart.equals(this[S$._value], value);
          if (shouldNotify) {
            dart.nullCheck(this.element).markNeedsNotifyDependents();
          }
        }
        this[S$._hasValue] = true;
        this[S$._value] = value;
      }
    }
    (_DeferredDelegateState.new = function() {
      this[S$._removeListener] = null;
      this[S$._value] = null;
      this[S$._hasValue] = false;
      _DeferredDelegateState.__proto__.new.call(this);
      ;
    }).prototype = _DeferredDelegateState.prototype;
    dart.addTypeTests(_DeferredDelegateState);
    _DeferredDelegateState.prototype[_is__DeferredDelegateState_default] = true;
    dart.addTypeCaches(_DeferredDelegateState);
    dart.setMethodSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getMethods(_DeferredDelegateState.__proto__),
      setState: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getGetters(_DeferredDelegateState.__proto__),
      value: R,
      isLoaded: core.bool,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_DeferredDelegateState, I[21]);
    dart.setFieldSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getFields(_DeferredDelegateState.__proto__),
      [S$._removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [S$._value]: dart.fieldType(dart.nullable(R)),
      [S$._hasValue]: dart.fieldType(core.bool)
    }));
    return _DeferredDelegateState;
  });
  provider$._DeferredDelegateState = provider$._DeferredDelegateState$();
  dart.addTypeTests(provider$._DeferredDelegateState, _is__DeferredDelegateState_default);
  const _is__CreateDeferredInheritedProvider_default = Symbol('_is__CreateDeferredInheritedProvider_default');
  provider$._CreateDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderElementOfT$R = () => (__t$_CreateDeferredInheritedProviderElementOfT$R = dart.constFn(provider$._CreateDeferredInheritedProviderElement$(T, R)))();
    class _CreateDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._CreateDeferredInheritedProvider$(T, R)).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      createState() {
        return new (__t$_CreateDeferredInheritedProviderElementOfT$R()).new();
      }
    }
    (_CreateDeferredInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.create = create;
      this.dispose = dispose;
      _CreateDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _CreateDeferredInheritedProvider.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProvider);
    _CreateDeferredInheritedProvider.prototype[_is__CreateDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProvider);
    dart.setMethodSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateDeferredInheritedProviderElement$(T, R), [])
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProvider, I[21]);
    dart.setFieldSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateDeferredInheritedProvider;
  });
  provider$._CreateDeferredInheritedProvider = provider$._CreateDeferredInheritedProvider$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProvider, _is__CreateDeferredInheritedProvider_default);
  const _is__CreateDeferredInheritedProviderElement_default = Symbol('_is__CreateDeferredInheritedProviderElement_default');
  provider$._CreateDeferredInheritedProviderElement$ = dart.generic((T, R) => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _CreateDeferredInheritedProviderElement extends provider$._DeferredDelegateState$(T, R, provider$._CreateDeferredInheritedProvider$(T, R)) {
      get controller() {
        let t35, t34;
        if (!this[S$._didBuild]) {
          if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[28], 186, 14, "debugSetInheritedLock(true)");
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[28], 190, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = true;
              provider$.debugIsInInheritedProviderUpdate = false;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[28], 199, 16, "() {\n          debugIsInInheritedProviderCreate = true;\n          debugIsInInheritedProviderUpdate = false;\n          return true;\n        }()");
            this[S$._controller] = (t34 = this.delegate, t35 = dart.nullCheck(this.element), t34.create(t35));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[28], 206, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          this[S$._didBuild] = true;
        }
        return T.as(this[S$._controller]);
      }
      dispose() {
        let t34;
        super.dispose();
        if (this[S$._didBuild]) {
          t34 = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t34 == null ? null : t34(dart.nullCheck(this.element), T.as(this[S$._controller]));
        }
      }
      debugFillProperties(properties) {
        let t34, t34$;
        super.debugFillProperties(properties);
        if (this.isLoaded) {
          t34 = properties;
          (() => {
            t34.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
            t34.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
            return t34;
          })();
        } else {
          t34$ = properties;
          (() => {
            t34$.add(new diagnostics.FlagProperty.new("controller", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            t34$.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            return t34$;
          })();
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._CreateDeferredInheritedProviderElement$(T, R)).new();
      }
    }
    (_CreateDeferredInheritedProviderElement.new = function() {
      this[S$._didBuild] = false;
      this[S$._controller] = null;
      _CreateDeferredInheritedProviderElement.__proto__.new.call(this);
      ;
    }).prototype = _CreateDeferredInheritedProviderElement.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProviderElement);
    _CreateDeferredInheritedProviderElement.prototype[_is__CreateDeferredInheritedProviderElement_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProviderElement);
    dart.setGetterSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getGetters(_CreateDeferredInheritedProviderElement.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProviderElement, I[21]);
    dart.setFieldSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProviderElement.__proto__),
      [S$._didBuild]: dart.fieldType(core.bool),
      [S$._controller]: dart.fieldType(dart.nullable(T))
    }));
    return _CreateDeferredInheritedProviderElement;
  });
  provider$._CreateDeferredInheritedProviderElement = provider$._CreateDeferredInheritedProviderElement$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProviderElement, _is__CreateDeferredInheritedProviderElement_default);
  const _is__ValueDeferredInheritedProvider_default = Symbol('_is__ValueDeferredInheritedProvider_default');
  provider$._ValueDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderStateOfT$R = () => (__t$_ValueDeferredInheritedProviderStateOfT$R = dart.constFn(provider$._ValueDeferredInheritedProviderState$(T, R)))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _ValueDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, value, updateShouldNotify, startListening) {
        return new (provider$._ValueDeferredInheritedProvider$(T, R)).new(value, updateShouldNotify, startListening);
      }
      createState() {
        return new (__t$_ValueDeferredInheritedProviderStateOfT$R()).new();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.value));
      }
    }
    (_ValueDeferredInheritedProvider.new = function(value, updateShouldNotify, startListening) {
      this.value = value;
      _ValueDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _ValueDeferredInheritedProvider.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProvider);
    _ValueDeferredInheritedProvider.prototype[_is__ValueDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProvider);
    dart.setMethodSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueDeferredInheritedProviderState$(T, R), [])
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProvider, I[21]);
    dart.setFieldSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueDeferredInheritedProvider.__proto__),
      value: dart.finalFieldType(T)
    }));
    return _ValueDeferredInheritedProvider;
  });
  provider$._ValueDeferredInheritedProvider = provider$._ValueDeferredInheritedProvider$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProvider, _is__ValueDeferredInheritedProvider_default);
  const _is__ValueDeferredInheritedProviderState_default = Symbol('_is__ValueDeferredInheritedProviderState_default');
  provider$._ValueDeferredInheritedProviderState$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _ValueDeferredInheritedProviderState extends provider$._DeferredDelegateState$(T, R, provider$._ValueDeferredInheritedProvider$(T, R)) {
      willUpdateDelegate(oldDelegate) {
        __t$_ValueDeferredInheritedProviderOfT$R().as(oldDelegate);
        if (!dart.equals(this.delegate.value, oldDelegate.value)) {
          if (this[S$._removeListener] != null) {
            dart.nullCheck(this[S$._removeListener])();
            this[S$._removeListener] = null;
          }
          return true;
        }
        return false;
      }
      get controller() {
        return this.delegate.value;
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (this[S$._removeListener] != null) {
          properties.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._ValueDeferredInheritedProviderState$(T, R)).new();
      }
    }
    (_ValueDeferredInheritedProviderState.new = function() {
      _ValueDeferredInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueDeferredInheritedProviderState.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProviderState);
    _ValueDeferredInheritedProviderState.prototype[_is__ValueDeferredInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProviderState);
    dart.setGetterSignature(_ValueDeferredInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueDeferredInheritedProviderState.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProviderState, I[21]);
    return _ValueDeferredInheritedProviderState;
  });
  provider$._ValueDeferredInheritedProviderState = provider$._ValueDeferredInheritedProviderState$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProviderState, _is__ValueDeferredInheritedProviderState_default);
  provider$.PostEventCall = class PostEventCall extends core.Object {
    get eventKind() {
      return this[S$.eventKind];
    }
    set eventKind(value) {
      super.eventKind = value;
    }
    get event() {
      return this[S$.event];
    }
    set event(value) {
      super.event = value;
    }
    static ['_#_#tearOff'](eventKind, event) {
      return new provider$.PostEventCall.__(eventKind, event);
    }
  };
  (provider$.PostEventCall.__ = function(eventKind, event) {
    this[S$.eventKind] = eventKind;
    this[S$.event] = event;
    ;
  }).prototype = provider$.PostEventCall.prototype;
  dart.addTypeTests(provider$.PostEventCall);
  dart.addTypeCaches(provider$.PostEventCall);
  dart.setLibraryUri(provider$.PostEventCall, I[21]);
  dart.setFieldSignature(provider$.PostEventCall, () => ({
    __proto__: dart.getFields(provider$.PostEventCall.__proto__),
    eventKind: dart.finalFieldType(core.String),
    event: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))
  }));
  provider$.PostEventSpy = class PostEventSpy extends core.Object {
    get logs() {
      return this[S$.logs];
    }
    set logs(value) {
      super.logs = value;
    }
    static ['_#_#tearOff']() {
      return new provider$.PostEventSpy.__();
    }
    dispose() {
      if (!dart.equals(provider$._debugPostEventOverride, dart.bind(this, S$._postEvent))) dart.assertFailed("disposed a spy different from the current spy", I[29], 43, 7, "_debugPostEventOverride == _postEvent");
      provider$._debugPostEventOverride = null;
    }
    [S$._postEvent](eventKind, event) {
      this.logs[S$.$add](new provider$.PostEventCall.__(eventKind, event));
    }
  };
  (provider$.PostEventSpy.__ = function() {
    this[S$.logs] = T$.JSArrayOfPostEventCall().of([]);
    ;
  }).prototype = provider$.PostEventSpy.prototype;
  dart.addTypeTests(provider$.PostEventSpy);
  dart.addTypeCaches(provider$.PostEventSpy);
  dart.setMethodSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getMethods(provider$.PostEventSpy.__proto__),
    dispose: dart.fnType(dart.void, []),
    [S$._postEvent]: dart.fnType(dart.void, [core.String, core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setLibraryUri(provider$.PostEventSpy, I[21]);
  dart.setFieldSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getFields(provider$.PostEventSpy.__proto__),
    logs: dart.finalFieldType(core.List$(provider$.PostEventCall))
  }));
  provider$.ProviderNode = class ProviderNode extends core.Object {
    get id() {
      return this[S$.id];
    }
    set id(value) {
      super.id = value;
    }
    get type() {
      return this[S$.type];
    }
    set type(value) {
      super.type = value;
    }
    get childrenNodeIds() {
      return this[S$.childrenNodeIds];
    }
    set childrenNodeIds(value) {
      super.childrenNodeIds = value;
    }
    get [S$._element$1]() {
      return this[S$._element];
    }
    set [S$._element$1](value) {
      super[S$._element$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let element = opts && 'element' in opts ? opts.element : null;
      return new provider$.ProviderNode.new({id: id, childrenNodeIds: childrenNodeIds, type: type, element: element});
    }
    get value() {
      return this[S$._element$1][S$._delegateState].value;
    }
  };
  (provider$.ProviderNode.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let element = opts && 'element' in opts ? opts.element : null;
    this[S$.id] = id;
    this[S$.childrenNodeIds] = childrenNodeIds;
    this[S$.type] = type;
    this[S$._element] = element;
    ;
  }).prototype = provider$.ProviderNode.prototype;
  dart.addTypeTests(provider$.ProviderNode);
  dart.addTypeCaches(provider$.ProviderNode);
  dart.setGetterSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getGetters(provider$.ProviderNode.__proto__),
    value: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(provider$.ProviderNode, I[21]);
  dart.setFieldSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getFields(provider$.ProviderNode.__proto__),
    id: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    childrenNodeIds: dart.finalFieldType(core.List$(core.String)),
    [S$._element$1]: dart.finalFieldType(provider$._InheritedProviderScopeElement$(dart.nullable(core.Object)))
  }));
  provider$.ProviderBinding = class ProviderBinding extends core.Object {
    static ['_#_#tearOff']() {
      return new provider$.ProviderBinding.__();
    }
    get providerDetails() {
      return this[S$._providerDetails];
    }
    set providerDetails(value) {
      provider$.debugPostEvent("provider:provider_list_changed", new _js_helper.LinkedMap.new());
      this[S$._providerDetails] = value;
    }
    providerDidChange(providerId) {
      provider$.debugPostEvent("provider:provider_changed", new _js_helper.LinkedMap.from(["id", providerId]));
    }
  };
  (provider$.ProviderBinding.__ = function() {
    this[S$._providerDetails] = new (T$.IdentityMapOfString$ProviderNode()).new();
    ;
  }).prototype = provider$.ProviderBinding.prototype;
  dart.addTypeTests(provider$.ProviderBinding);
  dart.addTypeCaches(provider$.ProviderBinding);
  dart.setMethodSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getMethods(provider$.ProviderBinding.__proto__),
    providerDidChange: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getGetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setSetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getSetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setLibraryUri(provider$.ProviderBinding, I[21]);
  dart.setFieldSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getFields(provider$.ProviderBinding.__proto__),
    [S$._providerDetails]: dart.fieldType(core.Map$(core.String, provider$.ProviderNode))
  }));
  dart.setStaticFieldSignature(provider$.ProviderBinding, () => ['debugInstance']);
  dart.defineLazy(provider$.ProviderBinding, {
    /*provider$.ProviderBinding.debugInstance*/get debugInstance() {
      return new provider$.ProviderBinding.__();
    }
  }, false);
  nested.SingleChildWidgetElementMixin = class SingleChildWidgetElementMixin extends framework.Element {};
  nested.SingleChildWidgetElementMixin[dart.mixinOn] = Element => class SingleChildWidgetElementMixin extends Element {
    get [S$._parent]() {
      return this[S$._parent$1];
    }
    set [S$._parent](value) {
      this[S$._parent$1] = value;
    }
    mount(parent, newSlot) {
      if (T$._NestedHookElementN().is(parent)) {
        this[S$._parent] = parent;
      }
      super.mount(parent, newSlot);
    }
    activate() {
      super.activate();
      this.visitAncestorElements(dart.fn(parent => {
        if (nested._NestedHookElement.is(parent)) {
          this[S$._parent] = parent;
        }
        return false;
      }, T$.ElementTobool()));
    }
  };
  (nested.SingleChildWidgetElementMixin[dart.mixinNew] = function() {
    this[S$._parent$1] = null;
  }).prototype = nested.SingleChildWidgetElementMixin.prototype;
  dart.addTypeTests(nested.SingleChildWidgetElementMixin);
  dart.addTypeCaches(nested.SingleChildWidgetElementMixin);
  nested.SingleChildWidgetElementMixin[dart.implements] = () => [framework.Element];
  dart.setMethodSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildWidgetElementMixin.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setLibraryUri(nested.SingleChildWidgetElementMixin, I[20]);
  dart.setFieldSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getFields(nested.SingleChildWidgetElementMixin.__proto__),
    [S$._parent]: dart.fieldType(dart.nullable(nested._NestedHookElement))
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36 = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatelessElement = class SingleChildStatelessElement extends StatelessElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatelessElement.new(widget);
    }
    build() {
      if (this[S$._parent] != null) {
        return this.widget.buildWithChild(this, dart.nullCheck(this[S$._parent]).injectedChild);
      }
      return super.build();
    }
    get widget() {
      return nested.SingleChildStatelessWidget.as(super.widget);
    }
  };
  (nested.SingleChildStatelessElement.new = function(widget) {
    nested.SingleChildStatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatelessElement.prototype;
  dart.addTypeTests(nested.SingleChildStatelessElement);
  dart.addTypeCaches(nested.SingleChildStatelessElement);
  dart.setGetterSignature(nested.SingleChildStatelessElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessElement.__proto__),
    widget: nested.SingleChildStatelessWidget
  }));
  dart.setLibraryUri(nested.SingleChildStatelessElement, I[20]);
  const _is__InheritedProviderElement_default = Symbol('_is__InheritedProviderElement_default');
  provider$._InheritedProviderElement$ = dart.generic(T => {
    class _InheritedProviderElement extends nested.SingleChildStatelessElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderElement$(T)).new(widget);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this.visitChildren(dart.fn(e => e.debugFillProperties(properties), T$.ElementTovoid()));
      }
    }
    (_InheritedProviderElement.new = function(widget) {
      _InheritedProviderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderElement.prototype;
    dart.addTypeTests(_InheritedProviderElement);
    _InheritedProviderElement.prototype[_is__InheritedProviderElement_default] = true;
    dart.addTypeCaches(_InheritedProviderElement);
    dart.setLibraryUri(_InheritedProviderElement, I[21]);
    return _InheritedProviderElement;
  });
  provider$._InheritedProviderElement = provider$._InheritedProviderElement$();
  dart.addTypeTests(provider$._InheritedProviderElement, _is__InheritedProviderElement_default);
  const _is_InheritedContext_default = Symbol('_is_InheritedContext_default');
  provider$.InheritedContext$ = dart.generic(T => {
    class InheritedContext extends framework.BuildContext {}
    (InheritedContext.new = function() {
      ;
    }).prototype = InheritedContext.prototype;
    dart.addTypeTests(InheritedContext);
    InheritedContext.prototype[_is_InheritedContext_default] = true;
    dart.addTypeCaches(InheritedContext);
    dart.setLibraryUri(InheritedContext, I[21]);
    return InheritedContext;
  });
  provider$.InheritedContext = provider$.InheritedContext$();
  dart.addTypeTests(provider$.InheritedContext, _is_InheritedContext_default);
  const _is__InheritedProviderScope_default = Symbol('_is__InheritedProviderScope_default');
  provider$._InheritedProviderScope$ = dart.generic(T => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    class _InheritedProviderScope extends framework.InheritedWidget {
      get owner() {
        return this[S$.owner];
      }
      set owner(value) {
        super.owner = value;
      }
      get debugType() {
        return this[S$.debugType];
      }
      set debugType(value) {
        super.debugType = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let owner = opts && 'owner' in opts ? opts.owner : null;
        let debugType = opts && 'debugType' in opts ? opts.debugType : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$._InheritedProviderScope$(T)).new({owner: owner, debugType: debugType, child: child});
      }
      updateShouldNotify(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        return false;
      }
      createElement() {
        return new (__t$_InheritedProviderScopeElementOfT()).new(this);
      }
    }
    (_InheritedProviderScope.new = function(opts) {
      let owner = opts && 'owner' in opts ? opts.owner : null;
      let debugType = opts && 'debugType' in opts ? opts.debugType : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.owner] = owner;
      this[S$.debugType] = debugType;
      if (!T.is(null)) dart.assertFailed(null, I[19], 341, 16, "null is T");
      _InheritedProviderScope.__proto__.new.call(this, {child: child});
      ;
    }).prototype = _InheritedProviderScope.prototype;
    dart.addTypeTests(_InheritedProviderScope);
    _InheritedProviderScope.prototype[_is__InheritedProviderScope_default] = true;
    dart.addTypeCaches(_InheritedProviderScope);
    dart.setMethodSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getMethods(_InheritedProviderScope.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(provider$._InheritedProviderScopeElement$(T), [])
    }));
    dart.setLibraryUri(_InheritedProviderScope, I[21]);
    dart.setFieldSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getFields(_InheritedProviderScope.__proto__),
      owner: dart.finalFieldType(provider$.InheritedProvider$(T)),
      debugType: dart.finalFieldType(core.String)
    }));
    return _InheritedProviderScope;
  });
  provider$._InheritedProviderScope = provider$._InheritedProviderScope$();
  dart.addTypeTests(provider$._InheritedProviderScope, _is__InheritedProviderScope_default);
  const _is__Dependency_default = Symbol('_is__Dependency_default');
  provider$._Dependency$ = dart.generic(T => {
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$JSArrayOfTTobool = () => (__t$JSArrayOfTTobool = dart.constFn(_interceptors.JSArray$(__t$TTobool())))();
    class _Dependency extends core.Object {
      static ['_#new#tearOff'](T) {
        return new (provider$._Dependency$(T)).new();
      }
    }
    (_Dependency.new = function() {
      this.shouldClearSelectors = false;
      this.shouldClearMutationScheduled = false;
      this.selectors = __t$JSArrayOfTTobool().of([]);
      ;
    }).prototype = _Dependency.prototype;
    dart.addTypeTests(_Dependency);
    _Dependency.prototype[_is__Dependency_default] = true;
    dart.addTypeCaches(_Dependency);
    dart.setLibraryUri(_Dependency, I[21]);
    dart.setFieldSignature(_Dependency, () => ({
      __proto__: dart.getFields(_Dependency.__proto__),
      shouldClearSelectors: dart.fieldType(core.bool),
      shouldClearMutationScheduled: dart.fieldType(core.bool),
      selectors: dart.finalFieldType(core.List$(dart.fnType(core.bool, [T])))
    }));
    return _Dependency;
  });
  provider$._Dependency = provider$._Dependency$();
  dart.addTypeTests(provider$._Dependency, _is__Dependency_default);
  const _is__InheritedProviderScopeElement_default = Symbol('_is__InheritedProviderScopeElement_default');
  provider$._InheritedProviderScopeElement$ = dart.generic(T => {
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    var __t$_DependencyOfT = () => (__t$_DependencyOfT = dart.constFn(provider$._Dependency$(T)))();
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$ListOfTTobool = () => (__t$ListOfTTobool = dart.constFn(core.List$(__t$TTobool())))();
    class _InheritedProviderScopeElement extends framework.InheritedElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderScopeElement$(T)).new(widget);
      }
      get [S$._delegateState]() {
        let t35, t35$, t34;
        t34 = this[S$.___InheritedProviderScopeElement__delegateState];
        return t34 == null ? (t35$ = (t35 = this.widget.owner[S$._delegate$2].createState(), (() => {
          t35.element = this;
          return t35;
        })()), this[S$.___InheritedProviderScopeElement__delegateState] == null ? this[S$.___InheritedProviderScopeElement__delegateState] = t35$ : dart.throw(new _internal.LateError.fieldADI("_delegateState"))) : t34;
      }
      get [S$._debugId]() {
        let t34;
        t34 = this[S$.___InheritedProviderScopeElement__debugId];
        return t34 == null ? dart.throw(new _internal.LateError.fieldNI("_debugId")) : t34;
      }
      set [S$._debugId](_debugId$35param) {
        this[S$.___InheritedProviderScopeElement__debugId] = _debugId$35param;
      }
      getElementForInheritedWidgetOfExactType(InheritedWidgetType) {
        let inheritedElement = null;
        this.visitAncestorElements(dart.fn(parent => {
          inheritedElement = parent.getElementForInheritedWidgetOfExactType(InheritedWidgetType);
          return false;
        }, T$.ElementTobool()));
        return inheritedElement;
      }
      mount(parent, newSlot) {
        let t34;
        {
          this[S$._debugId] = dart.str((t34 = provider$._InheritedProviderScopeElement._nextProviderId, provider$._InheritedProviderScopeElement._nextProviderId = t34 + 1, t34));
          provider$.ProviderBinding.debugInstance.providerDetails = (() => {
            let t34 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            t34[S$.$_set](this[S$._debugId], new provider$.ProviderNode.new({id: this[S$._debugId], childrenNodeIds: C[15] || CT.C15, type: this.widget.debugType, element: this}));
            return t34;
          })();
        }
        super.mount(parent, newSlot);
      }
      get widget() {
        return __t$_InheritedProviderScopeOfT().as(super.widget);
      }
      reassemble() {
        super.reassemble();
        let value = this[S$._delegateState].hasValue ? this[S$._delegateState].value : null;
        if (reassemble_handler.ReassembleHandler.is(value)) {
          value.reassemble();
        }
      }
      updateDependencies(dependent, aspect) {
        let t35;
        let dependencies = this.getDependencies(dependent);
        if (dependencies != null && !__t$_DependencyOfT().is(dependencies)) {
          return;
        }
        if (__t$TTobool().is(aspect)) {
          let selectorDependency = __t$_DependencyOfT().as((t35 = dependencies, t35 == null ? new (__t$_DependencyOfT()).new() : t35));
          if (selectorDependency.shouldClearSelectors) {
            selectorDependency.shouldClearSelectors = false;
            __t$ListOfTTobool().as(selectorDependency.selectors)[S$.$clear]();
          }
          if (selectorDependency.shouldClearMutationScheduled === false) {
            selectorDependency.shouldClearMutationScheduled = true;
            T$.FutureOfNull().microtask(dart.fn(() => {
              let t35;
              t35 = selectorDependency;
              (() => {
                t35.shouldClearMutationScheduled = false;
                t35.shouldClearSelectors = true;
                return t35;
              })();
            }, T$.VoidToNull()));
          }
          __t$ListOfTTobool().as(selectorDependency.selectors)[S$.$add](aspect);
          this.setDependencies(dependent, selectorDependency);
        } else {
          this.setDependencies(dependent, C[8] || CT.C8);
        }
      }
      notifyDependent(oldWidget, dependent) {
        framework.InheritedWidget.as(oldWidget);
        let dependencies = this.getDependencies(dependent);
        {
          provider$.ProviderBinding.debugInstance.providerDidChange(this[S$._debugId]);
        }
        let shouldNotify = false;
        if (dependencies != null) {
          if (__t$_DependencyOfT().is(dependencies)) {
            if (dependent.dirty) {
              return;
            }
            for (let updateShouldNotify of __t$ListOfTTobool().as(dependencies.selectors)) {
              try {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = true;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 480, 20, "() {\n              _debugIsSelecting = true;\n              return true;\n            }()");
                shouldNotify = updateShouldNotify(this.value);
              } finally {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = false;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 486, 20, "() {\n              _debugIsSelecting = false;\n              return true;\n            }()");
              }
              if (shouldNotify) {
                break;
              }
            }
          } else {
            shouldNotify = true;
          }
        }
        if (shouldNotify) {
          dependent.didChangeDependencies();
        }
      }
      update(newWidget) {
        __t$_InheritedProviderScopeOfT().as(newWidget);
        if (!dart.fn(() => {
          if (!this.widget.owner[S$._delegate$2][S$.$runtimeType]._equals(newWidget.owner[S$._delegate$2][S$.$runtimeType])) {
            dart.throw(new core.StateError.new("Rebuilt " + dart.str(this.widget) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 507, 12, "() {\n      if (widget.owner._delegate.runtimeType !=\n          newWidget.owner._delegate.runtimeType) {\n        throw StateError('''\nRebuilt $widget using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n''');\n      }\n      return true;\n    }()");
        this[S$._isBuildFromExternalSources] = true;
        this[S$._updatedShouldNotify] = this[S$._delegateState].willUpdateDelegate(newWidget.owner[S$._delegate$2]);
        super.update(newWidget);
        this[S$._updatedShouldNotify] = false;
      }
      updated(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        super.updated(oldWidget);
        if (this[S$._updatedShouldNotify]) {
          this.notifyClients(oldWidget);
        }
      }
      didChangeDependencies() {
        this[S$._isBuildFromExternalSources] = true;
        super.didChangeDependencies();
      }
      build() {
        if (this.widget.owner[S$._lazy] === false) {
          this.value;
        }
        this[S$._delegateState].build({isBuildFromExternalSources: this[S$._isBuildFromExternalSources]});
        this[S$._isBuildFromExternalSources] = false;
        if (this[S$._shouldNotifyDependents]) {
          this[S$._shouldNotifyDependents] = false;
          this.notifyClients(this.widget);
        }
        return super.build();
      }
      unmount() {
        let t36;
        this[S$._delegateState].dispose();
        {
          provider$.ProviderBinding.debugInstance.providerDetails = (t36 = (() => {
            let t35 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            return t35;
          })(), (() => {
            t36[S$.$remove](this[S$._debugId]);
            return t36;
          })());
        }
        super.unmount();
      }
      get hasValue() {
        return this[S$._delegateState].hasValue;
      }
      markNeedsNotifyDependents() {
        if (!this[S$._isNotifyDependentsEnabled]) {
          return;
        }
        this.markNeedsBuild();
        this[S$._shouldNotifyDependents] = true;
      }
      [S$._debugSetInheritedLock](value) {
        if (!dart.fn(() => {
          this[S$._debugInheritLocked] = value;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 582, 12, "() {\n      _debugInheritLocked = value;\n      return true;\n    }()");
        return true;
      }
      get value() {
        return this[S$._delegateState].value;
      }
      dependOnInheritedElement(ancestor, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (!dart.fn(() => {
          if (this[S$._debugInheritLocked]) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to listen to an InheritedWidget " + "in a life-cycle that will never be called again."), new assertions.ErrorDescription.new("This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 597, 12, "() {\n      if (_debugInheritLocked) {\n        throw FlutterError.fromParts(\n          <DiagnosticsNode>[\n            ErrorSummary(\n              'Tried to listen to an InheritedWidget '\n              'in a life-cycle that will never be called again.',\n            ),\n            ErrorDescription('''\nThis error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n'''),\n          ],\n        );\n      }\n      return true;\n    }()");
        return super.dependOnInheritedElement(ancestor, {aspect: aspect});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[S$._delegateState].debugFillProperties(properties);
      }
    }
    (_InheritedProviderScopeElement.new = function(widget) {
      this[S$._shouldNotifyDependents] = false;
      this[S$._debugInheritLocked] = false;
      this[S$._isNotifyDependentsEnabled] = true;
      this[S$._updatedShouldNotify] = false;
      this[S$._isBuildFromExternalSources] = false;
      this[S$.___InheritedProviderScopeElement__delegateState] = null;
      this[S$.___InheritedProviderScopeElement__debugId] = null;
      _InheritedProviderScopeElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderScopeElement.prototype;
    dart.addTypeTests(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement.prototype[_is__InheritedProviderScopeElement_default] = true;
    dart.addTypeCaches(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement[dart.implements] = () => [provider$.InheritedContext$(T)];
    dart.setMethodSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getMethods(_InheritedProviderScopeElement.__proto__),
      mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
      markNeedsNotifyDependents: dart.fnType(dart.void, []),
      [S$._debugSetInheritedLock]: dart.fnType(core.bool, [core.bool])
    }));
    dart.setGetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getGetters(_InheritedProviderScopeElement.__proto__),
      [S$._delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [S$._debugId]: core.String,
      widget: provider$._InheritedProviderScope$(T),
      hasValue: core.bool,
      value: T
    }));
    dart.setSetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getSetters(_InheritedProviderScopeElement.__proto__),
      [S$._debugId]: core.String
    }));
    dart.setLibraryUri(_InheritedProviderScopeElement, I[21]);
    dart.setFieldSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getFields(_InheritedProviderScopeElement.__proto__),
      [S$._shouldNotifyDependents]: dart.fieldType(core.bool),
      [S$._debugInheritLocked]: dart.fieldType(core.bool),
      [S$._isNotifyDependentsEnabled]: dart.fieldType(core.bool),
      [S$._updatedShouldNotify]: dart.fieldType(core.bool),
      [S$._isBuildFromExternalSources]: dart.fieldType(core.bool),
      [S$.___InheritedProviderScopeElement__delegateState]: dart.fieldType(dart.nullable(provider$._DelegateState$(T, provider$._Delegate$(T)))),
      [S$.___InheritedProviderScopeElement__debugId]: dart.fieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(_InheritedProviderScopeElement, () => ['_nextProviderId']);
    return _InheritedProviderScopeElement;
  });
  provider$._InheritedProviderScopeElement = provider$._InheritedProviderScopeElement$();
  dart.defineLazy(provider$._InheritedProviderScopeElement, {
    /*provider$._InheritedProviderScopeElement._nextProviderId*/get _nextProviderId() {
      return 0;
    },
    set _nextProviderId(value) {}
  }, false);
  dart.addTypeTests(provider$._InheritedProviderScopeElement, _is__InheritedProviderScopeElement_default);
  const _is__CreateInheritedProvider_default = Symbol('_is__CreateInheritedProvider_default');
  provider$._CreateInheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderStateOfT = () => (__t$_CreateInheritedProviderStateOfT = dart.constFn(provider$._CreateInheritedProviderState$(T)))();
    class _CreateInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        return new (provider$._CreateInheritedProvider$(T)).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      }
      createState() {
        return new (__t$_CreateInheritedProviderStateOfT()).new();
      }
    }
    (_CreateInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      this.create = create;
      this.update = update;
      this.debugCheckInvalidValueType = debugCheckInvalidValueType;
      this.startListening = startListening;
      this.dispose = dispose;
      if (!(create != null || update != null)) dart.assertFailed(null, I[19], 674, 16, "create != null || update != null");
      this[S$._updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _CreateInheritedProvider.prototype;
    dart.addTypeTests(_CreateInheritedProvider);
    _CreateInheritedProvider.prototype[_is__CreateInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateInheritedProvider);
    dart.setMethodSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_CreateInheritedProvider, I[21]);
    dart.setFieldSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      update: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext, dart.nullable(T)]))),
      [S$._updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      debugCheckInvalidValueType: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateInheritedProvider;
  });
  provider$._CreateInheritedProvider = provider$._CreateInheritedProvider$();
  dart.addTypeTests(provider$._CreateInheritedProvider, _is__CreateInheritedProvider_default);
  const _is__CreateInheritedProviderState_default = Symbol('_is__CreateInheritedProviderState_default');
  provider$._CreateInheritedProviderState$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$TToNvoid = () => (__t$TToNvoid = dart.constFn(dart.nullable(__t$TTovoid())))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$BuildContextAndTNToT = () => (__t$BuildContextAndTNToT = dart.constFn(dart.fnType(T, [framework.BuildContext, __t$TN()])))();
    var __t$BuildContextAndTNToNT = () => (__t$BuildContextAndTNToNT = dart.constFn(dart.nullable(__t$BuildContextAndTNToT())))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _CreateInheritedProviderState extends provider$._DelegateState$(T, provider$._CreateInheritedProvider$(T)) {
      get value() {
        let t36, t37;
        if (this[S$._didInitValue] && this[S$._initError] != null) {
          dart.throw(new core.StateError.new("Tried to read a provider that threw during the creation of its value.\n" + "The exception occurred during the creation of type " + dart.str(dart.wrapType(T)) + ".\n\n" + dart.str((t36 = this[S$._initError], t36 == null ? null : dart.toString(t36)))));
        }
        let _debugPreviousIsInInheritedProviderCreate = null;
        let _debugPreviousIsInInheritedProviderUpdate = null;
        if (!dart.fn(() => {
          _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
          _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 718, 12, "() {\n      _debugPreviousIsInInheritedProviderCreate =\n          debugIsInInheritedProviderCreate;\n      _debugPreviousIsInInheritedProviderUpdate =\n          debugIsInInheritedProviderUpdate;\n      return true;\n    }()");
        if (!this[S$._didInitValue]) {
          this[S$._didInitValue] = true;
          if (this.delegate.create != null) {
            if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[19], 729, 16, "debugSetInheritedLock(true)");
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = true;
                provider$.debugIsInInheritedProviderUpdate = false;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 731, 18, "() {\n            debugIsInInheritedProviderCreate = true;\n            debugIsInInheritedProviderUpdate = false;\n            return true;\n          }()");
              this[S$._value] = dart.nullCheck(this.delegate.create)(dart.nullCheck(this.element));
            } catch (e$) {
              let e = dart.getThrown(e$);
              let stackTrace = dart.stackTrace(e$);
              if (core.Object.is(e)) {
                this[S$._initError] = new assertions.FlutterErrorDetails.new({library: "provider", exception: e, stack: stackTrace});
                dart.rethrow(e$);
              } else
                throw e$;
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 745, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!this.debugSetInheritedLock(false)) dart.assertFailed(null, I[19], 753, 16, "debugSetInheritedLock(false)");
            if (!dart.fn(() => {
              let t37;
              t37 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t37 == null ? null : t37(T.as(this[S$._value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 755, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
          if (__t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = false;
                provider$.debugIsInInheritedProviderUpdate = true;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 762, 18, "() {\n            debugIsInInheritedProviderCreate = false;\n            debugIsInInheritedProviderUpdate = true;\n            return true;\n          }()");
              this[S$._value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), this[S$._value]);
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 769, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!dart.fn(() => {
              let t37;
              t37 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t37 == null ? null : t37(T.as(this[S$._value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 778, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
        }
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = false;
        this[S$._removeListener] == null ? this[S$._removeListener] = (t37 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t37 == null ? null : t37(dart.nullCheck(this.element), T.as(this[S$._value]))) : null;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[S$._removeListener] != null)) dart.assertFailed(null, I[19], 788, 12, "delegate.startListening == null || _removeListener != null");
        return T.as(this[S$._value]);
      }
      dispose() {
        let t37, t37$;
        super.dispose();
        t37 = this[S$._removeListener];
        t37 == null ? null : t37();
        if (this[S$._didInitValue]) {
          t37$ = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t37$ == null ? null : t37$(dart.nullCheck(this.element), T.as(this[S$._value]));
        }
      }
      debugFillProperties(properties) {
        let t37;
        super.debugFillProperties(properties);
        if (this[S$._didInitValue]) {
          t37 = properties;
          (() => {
            t37.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
            t37.add(new diagnostics.FlagProperty.new("", {value: this[S$._removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
            return t37;
          })();
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      build(opts) {
        let t38, t37;
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
        let shouldNotify = false;
        if (isBuildFromExternalSources && this[S$._didInitValue] && __t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
          let previousValue = this[S$._value];
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 839, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = false;
              provider$.debugIsInInheritedProviderUpdate = true;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 847, 16, "() {\n          debugIsInInheritedProviderCreate = false;\n          debugIsInInheritedProviderUpdate = true;\n          return true;\n        }()");
            this[S$._value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), T.as(this[S$._value]));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 854, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          if (__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]) != null) {
            shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]))(T.as(previousValue), T.as(this[S$._value]));
          } else {
            shouldNotify = !dart.equals(this[S$._value], previousValue);
          }
          if (shouldNotify) {
            if (!dart.fn(() => {
              let t37;
              t37 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t37 == null ? null : t37(T.as(this[S$._value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 873, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
            if (this[S$._removeListener] != null) {
              dart.nullCheck(this[S$._removeListener])();
              this[S$._removeListener] = null;
            }
            t37 = this[S$._previousWidget];
            t37 == null ? null : (t38 = __t$BuildContextAndTToNvoid().as(t37.dispose), t38 == null ? null : t38(dart.nullCheck(this.element), T.as(previousValue)));
          }
        }
        if (shouldNotify) {
          dart.nullCheck(this.element)[S$._shouldNotifyDependents] = true;
        }
        this[S$._previousWidget] = this.delegate;
        return super.build({isBuildFromExternalSources: isBuildFromExternalSources});
      }
      get hasValue() {
        return this[S$._didInitValue];
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._CreateInheritedProviderState$(T)).new();
      }
    }
    (_CreateInheritedProviderState.new = function() {
      this[S$._removeListener] = null;
      this[S$._didInitValue] = false;
      this[S$._value] = null;
      this[S$._previousWidget] = null;
      this[S$._initError] = null;
      _CreateInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _CreateInheritedProviderState.prototype;
    dart.addTypeTests(_CreateInheritedProviderState);
    _CreateInheritedProviderState.prototype[_is__CreateInheritedProviderState_default] = true;
    dart.addTypeCaches(_CreateInheritedProviderState);
    dart.setGetterSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getGetters(_CreateInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_CreateInheritedProviderState, I[21]);
    dart.setFieldSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getFields(_CreateInheritedProviderState.__proto__),
      [S$._removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [S$._didInitValue]: dart.fieldType(core.bool),
      [S$._value]: dart.fieldType(dart.nullable(T)),
      [S$._previousWidget]: dart.fieldType(dart.nullable(provider$._CreateInheritedProvider$(T))),
      [S$._initError]: dart.fieldType(dart.nullable(assertions.FlutterErrorDetails))
    }));
    return _CreateInheritedProviderState;
  });
  provider$._CreateInheritedProviderState = provider$._CreateInheritedProviderState$();
  dart.addTypeTests(provider$._CreateInheritedProviderState, _is__CreateInheritedProviderState_default);
  const _is__ValueInheritedProvider_default = Symbol('_is__ValueInheritedProvider_default');
  provider$._ValueInheritedProvider$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$_ValueInheritedProviderStateOfT = () => (__t$_ValueInheritedProviderStateOfT = dart.constFn(provider$._ValueInheritedProviderState$(T)))();
    class _ValueInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._ValueInheritedProvider$(T)).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      createState() {
        return new (__t$_ValueInheritedProviderStateOfT()).new();
      }
    }
    (_ValueInheritedProvider.new = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.value = value;
      this.startListening = startListening;
      this[S$._updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _ValueInheritedProvider.prototype;
    dart.addTypeTests(_ValueInheritedProvider);
    _ValueInheritedProvider.prototype[_is__ValueInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueInheritedProvider);
    dart.setMethodSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_ValueInheritedProvider, I[21]);
    dart.setFieldSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueInheritedProvider.__proto__),
      value: dart.finalFieldType(T),
      [S$._updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T])))
    }));
    return _ValueInheritedProvider;
  });
  provider$._ValueInheritedProvider = provider$._ValueInheritedProvider$();
  dart.addTypeTests(provider$._ValueInheritedProvider, _is__ValueInheritedProvider_default);
  const _is__ValueInheritedProviderState_default = Symbol('_is__ValueInheritedProviderState_default');
  provider$._ValueInheritedProviderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _ValueInheritedProviderState extends provider$._DelegateState$(T, provider$._ValueInheritedProvider$(T)) {
      get value() {
        let t37;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = false;
        this[S$._removeListener] == null ? this[S$._removeListener] = (t37 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t37 == null ? null : t37(dart.nullCheck(this.element), this.delegate.value)) : null;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[S$._removeListener] != null)) dart.assertFailed(null, I[19], 928, 12, "delegate.startListening == null || _removeListener != null");
        return this.delegate.value;
      }
      willUpdateDelegate(newDelegate) {
        __t$_ValueInheritedProviderOfT().as(newDelegate);
        let shouldNotify = null;
        if (__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]) != null) {
          shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]))(this.delegate.value, newDelegate.value);
        } else {
          shouldNotify = !dart.equals(newDelegate.value, this.delegate.value);
        }
        if (shouldNotify && this[S$._removeListener] != null) {
          dart.nullCheck(this[S$._removeListener])();
          this[S$._removeListener] = null;
        }
        return shouldNotify;
      }
      dispose() {
        let t37;
        super.dispose();
        t37 = this[S$._removeListener];
        t37 == null ? null : t37();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new diagnostics.FlagProperty.new("", {value: this[S$._removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
      }
      get hasValue() {
        return true;
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._ValueInheritedProviderState$(T)).new();
      }
    }
    (_ValueInheritedProviderState.new = function() {
      this[S$._removeListener] = null;
      _ValueInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueInheritedProviderState.prototype;
    dart.addTypeTests(_ValueInheritedProviderState);
    _ValueInheritedProviderState.prototype[_is__ValueInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueInheritedProviderState);
    dart.setGetterSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_ValueInheritedProviderState, I[21]);
    dart.setFieldSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getFields(_ValueInheritedProviderState.__proto__),
      [S$._removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    return _ValueInheritedProviderState;
  });
  provider$._ValueInheritedProviderState = provider$._ValueInheritedProviderState$();
  dart.addTypeTests(provider$._ValueInheritedProviderState, _is__ValueInheritedProviderState_default);
  provider$.debugPostEvent = function debugPostEvent(eventKind, event = C[16] || CT.C16) {
    if (provider$._debugPostEventOverride != null) {
      dart.nullCheck(provider$._debugPostEventOverride)(eventKind, event);
    } else {
      developer.postEvent(eventKind, event);
    }
  };
  provider$.spyPostEvent = function spyPostEvent() {
    if (!(provider$._debugPostEventOverride == null)) dart.assertFailed("postEvent is already spied", I[29], 22, 10, "_debugPostEventOverride == null");
    let spy = new provider$.PostEventSpy.__();
    provider$._debugPostEventOverride = dart.bind(spy, S$._postEvent);
    return spy;
  };
  provider$['SelectContext|select'] = function SelectContext$124select(T, R, $this, selector) {
    let t38;
    if (!!sliver.SliverWithKeepAliveWidget.is($this.widget)) dart.assertFailed("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ", I[19], 247, 12, "widget is! SliverWithKeepAliveWidget");
    if (!(layout_builder.LayoutBuilder.is($this.widget) || $this.debugDoingBuild)) dart.assertFailed("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n", I[19], 266, 12, "widget is LayoutBuilder || debugDoingBuild");
    let inheritedElement = provider$.Provider._inheritedElementOf(T, $this);
    try {
      let value = (t38 = inheritedElement, t38 == null ? null : t38.value);
      if (!T.is(value)) {
        dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[S$.$runtimeType]));
      }
      if (!dart.fn(() => {
        provider$._debugIsSelecting = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 279, 14, "() {\n        _debugIsSelecting = true;\n        return true;\n      }()");
      let selected = selector(value);
      if (inheritedElement != null) {
        $this.dependOnInheritedElement(inheritedElement, {aspect: dart.fn(newValue => {
            if (!T.is(newValue)) {
              dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[S$.$runtimeType]));
            }
            return !(C[17] || CT.C17).equals(selector(newValue), selected);
          }, dart.fnType(core.bool, [dart.nullable(T)]))});
      } else {
        $this.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
      }
      return selected;
    } finally {
      if (!dart.fn(() => {
        provider$._debugIsSelecting = false;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 304, 14, "() {\n        _debugIsSelecting = false;\n        return true;\n      }()");
    }
  };
  provider$['SelectContext|get#select'] = function SelectContext$124get$35select($this) {
    return dart.fn((T, R, selector) => provider$['SelectContext|select'](T, R, $this, selector), T$.FnToR());
  };
  provider$['ReadContext|read'] = function ReadContext$124read(T, $this) {
    return provider$.Provider.of(T, $this, {listen: false});
  };
  provider$['ReadContext|get#read'] = function ReadContext$124get$35read($this) {
    return dart.fn(T => provider$['ReadContext|read'](T, $this), T$.VoidToT());
  };
  provider$['WatchContext|watch'] = function WatchContext$124watch(T, $this) {
    return provider$.Provider.of(T, $this);
  };
  provider$['WatchContext|get#watch'] = function WatchContext$124get$35watch($this) {
    return dart.fn(T => provider$['WatchContext|watch'](T, $this), T$.VoidToT());
  };
  dart.defineLazy(provider$, {
    /*provider$._isSoundMode*/get _isSoundMode() {
      return !T$.ListOfint().is(T$.JSArrayOfintN().of([]));
    },
    /*provider$._debugPostEventOverride*/get _debugPostEventOverride() {
      return null;
    },
    set _debugPostEventOverride(value) {},
    /*provider$._debugIsSelecting*/get _debugIsSelecting() {
      return false;
    },
    set _debugIsSelecting(value) {},
    /*provider$.debugIsInInheritedProviderUpdate*/get debugIsInInheritedProviderUpdate() {
      return false;
    },
    set debugIsInInheritedProviderUpdate(value) {},
    /*provider$.debugIsInInheritedProviderCreate*/get debugIsInInheritedProviderCreate() {
      return false;
    },
    set debugIsInInheritedProviderCreate(value) {}
  }, false);
  const _is_ProxyProvider0_default = Symbol('_is_ProxyProvider0_default');
  proxy_provider.ProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider0$(R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider0.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: dart.fn(value => {
          let t43;
          t43 = provider$.Provider.debugCheckInvalidValueType;
          return t43 == null ? null : t43(R, value);
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ProxyProvider0.prototype;
    dart.addTypeTests(ProxyProvider0);
    ProxyProvider0.prototype[_is_ProxyProvider0_default] = true;
    dart.addTypeCaches(ProxyProvider0);
    dart.setLibraryUri(ProxyProvider0, I[30]);
    return ProxyProvider0;
  });
  proxy_provider.ProxyProvider0 = proxy_provider.ProxyProvider0$();
  dart.addTypeTests(proxy_provider.ProxyProvider0, _is_ProxyProvider0_default);
  const _is_ProxyProvider_default = Symbol('_is_ProxyProvider_default');
  proxy_provider.ProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider$(T, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider.prototype;
    dart.addTypeTests(ProxyProvider);
    ProxyProvider.prototype[_is_ProxyProvider_default] = true;
    dart.addTypeCaches(ProxyProvider);
    dart.setLibraryUri(ProxyProvider, I[30]);
    return ProxyProvider;
  });
  proxy_provider.ProxyProvider = proxy_provider.ProxyProvider$();
  dart.addTypeTests(proxy_provider.ProxyProvider, _is_ProxyProvider_default);
  const _is_ProxyProvider2_default = Symbol('_is_ProxyProvider2_default');
  proxy_provider.ProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider2 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider2.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider2.prototype;
    dart.addTypeTests(ProxyProvider2);
    ProxyProvider2.prototype[_is_ProxyProvider2_default] = true;
    dart.addTypeCaches(ProxyProvider2);
    dart.setLibraryUri(ProxyProvider2, I[30]);
    return ProxyProvider2;
  });
  proxy_provider.ProxyProvider2 = proxy_provider.ProxyProvider2$();
  dart.addTypeTests(proxy_provider.ProxyProvider2, _is_ProxyProvider2_default);
  const _is_ProxyProvider3_default = Symbol('_is_ProxyProvider3_default');
  proxy_provider.ProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider3 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider3.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider3.prototype;
    dart.addTypeTests(ProxyProvider3);
    ProxyProvider3.prototype[_is_ProxyProvider3_default] = true;
    dart.addTypeCaches(ProxyProvider3);
    dart.setLibraryUri(ProxyProvider3, I[30]);
    return ProxyProvider3;
  });
  proxy_provider.ProxyProvider3 = proxy_provider.ProxyProvider3$();
  dart.addTypeTests(proxy_provider.ProxyProvider3, _is_ProxyProvider3_default);
  const _is_ProxyProvider4_default = Symbol('_is_ProxyProvider4_default');
  proxy_provider.ProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider4 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider4.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider4.prototype;
    dart.addTypeTests(ProxyProvider4);
    ProxyProvider4.prototype[_is_ProxyProvider4_default] = true;
    dart.addTypeCaches(ProxyProvider4);
    dart.setLibraryUri(ProxyProvider4, I[30]);
    return ProxyProvider4;
  });
  proxy_provider.ProxyProvider4 = proxy_provider.ProxyProvider4$();
  dart.addTypeTests(proxy_provider.ProxyProvider4, _is_ProxyProvider4_default);
  const _is_ProxyProvider5_default = Symbol('_is_ProxyProvider5_default');
  proxy_provider.ProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider5 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider5.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider5.prototype;
    dart.addTypeTests(ProxyProvider5);
    ProxyProvider5.prototype[_is_ProxyProvider5_default] = true;
    dart.addTypeCaches(ProxyProvider5);
    dart.setLibraryUri(ProxyProvider5, I[30]);
    return ProxyProvider5;
  });
  proxy_provider.ProxyProvider5 = proxy_provider.ProxyProvider5$();
  dart.addTypeTests(proxy_provider.ProxyProvider5, _is_ProxyProvider5_default);
  const _is_ProxyProvider6_default = Symbol('_is_ProxyProvider6_default');
  proxy_provider.ProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider6 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider6.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider6.prototype;
    dart.addTypeTests(ProxyProvider6);
    ProxyProvider6.prototype[_is_ProxyProvider6_default] = true;
    dart.addTypeCaches(ProxyProvider6);
    dart.setLibraryUri(ProxyProvider6, I[30]);
    return ProxyProvider6;
  });
  proxy_provider.ProxyProvider6 = proxy_provider.ProxyProvider6$();
  dart.addTypeTests(proxy_provider.ProxyProvider6, _is_ProxyProvider6_default);
  reassemble_handler.ReassembleHandler = class ReassembleHandler extends core.Object {};
  (reassemble_handler.ReassembleHandler.new = function() {
    ;
  }).prototype = reassemble_handler.ReassembleHandler.prototype;
  dart.addTypeTests(reassemble_handler.ReassembleHandler);
  dart.addTypeCaches(reassemble_handler.ReassembleHandler);
  dart.setLibraryUri(reassemble_handler.ReassembleHandler, I[31]);
  nested.SingleChildStatefulWidget = class SingleChildStatefulWidget extends framework.StatefulWidget {
    get [S$._child$1]() {
      return this[S$._child$2];
    }
    set [S$._child$1](value) {
      super[S$._child$1] = value;
    }
    createElement() {
      return new nested.SingleChildStatefulElement.new(this);
    }
  };
  (nested.SingleChildStatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[S$._child$2] = child;
    nested.SingleChildStatefulWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatefulWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatefulWidget);
  dart.addTypeCaches(nested.SingleChildStatefulWidget);
  nested.SingleChildStatefulWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidget.__proto__),
    createElement: dart.fnType(nested.SingleChildStatefulElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidget, I[20]);
  dart.setFieldSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatefulWidget.__proto__),
    [S$._child$1]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_Selector0_default = Symbol('_is_Selector0_default');
  selector$.Selector0$ = dart.generic(T => {
    var __t$_Selector0StateOfT = () => (__t$_Selector0StateOfT = dart.constFn(selector$._Selector0State$(T)))();
    class Selector0 extends nested.SingleChildStatefulWidget {
      get builder() {
        return this[S$.builder$7];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[S$.selector];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector0$(T)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
      createState() {
        return new (__t$_Selector0StateOfT()).new();
      }
    }
    (Selector0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$7] = builder;
      this[S$.selector] = selector;
      this[S$._shouldRebuild] = shouldRebuild;
      Selector0.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Selector0.prototype;
    dart.addTypeTests(Selector0);
    Selector0.prototype[_is_Selector0_default] = true;
    dart.addTypeCaches(Selector0);
    dart.setMethodSignature(Selector0, () => ({
      __proto__: dart.getMethods(Selector0.__proto__),
      createState: dart.fnType(selector$._Selector0State$(T), [])
    }));
    dart.setLibraryUri(Selector0, I[32]);
    dart.setFieldSignature(Selector0, () => ({
      __proto__: dart.getFields(Selector0.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)])),
      selector: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      [S$._shouldRebuild]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return Selector0;
  });
  selector$.Selector0 = selector$.Selector0$();
  dart.addTypeTests(selector$.Selector0, _is_Selector0_default);
  const _is_SingleChildState_default = Symbol('_is_SingleChildState_default');
  nested.SingleChildState$ = dart.generic(T => {
    class SingleChildState extends framework.State$(T) {
      build(context) {
        return this.buildWithChild(context, this.widget[S$._child$1]);
      }
    }
    (SingleChildState.new = function() {
      SingleChildState.__proto__.new.call(this);
      ;
    }).prototype = SingleChildState.prototype;
    dart.addTypeTests(SingleChildState);
    SingleChildState.prototype[_is_SingleChildState_default] = true;
    dart.addTypeCaches(SingleChildState);
    dart.setMethodSignature(SingleChildState, () => ({
      __proto__: dart.getMethods(SingleChildState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildState, I[20]);
    return SingleChildState;
  });
  nested.SingleChildState = nested.SingleChildState$();
  dart.addTypeTests(nested.SingleChildState, _is_SingleChildState_default);
  const _is__Selector0State_default = Symbol('_is__Selector0State_default');
  selector$._Selector0State$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    var __t$BuildContextAndTAndWidgetNToWidget = () => (__t$BuildContextAndTAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _Selector0State extends nested.SingleChildState$(selector$.Selector0$(T)) {
      get value() {
        return this[S$.value];
      }
      set value(value) {
        this[S$.value] = __t$TN().as(value);
      }
      buildWithChild(context, child) {
        let t44, t43;
        let selected = (t43 = this.widget, t44 = context, t43.selector(t44));
        let shouldInvalidateCache = !dart.equals(this.oldWidget, this.widget) || __t$TAndTToNbool().as(this.widget[S$._shouldRebuild]) != null && dart.nullCheck(__t$TAndTToNbool().as(this.widget[S$._shouldRebuild]))(T.as(this.value), selected) || __t$TAndTToNbool().as(this.widget[S$._shouldRebuild]) == null && !(C[17] || CT.C17).equals(this.value, selected);
        if (shouldInvalidateCache) {
          this.value = selected;
          this.oldWidget = this.widget;
          this.cache = new basic.Builder.new({builder: dart.fn(context => {
              let t46, t45, t44, t43;
              t43 = this.widget;
              t44 = context;
              t45 = selected;
              t46 = child;
              return __t$BuildContextAndTAndWidgetNToWidget().as(t43.builder)(t44, t45, t46);
            }, T$.BuildContextToWidget())});
        }
        return dart.nullCheck(this.cache);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      static ['_#new#tearOff'](T) {
        return new (selector$._Selector0State$(T)).new();
      }
    }
    (_Selector0State.new = function() {
      this[S$.value] = null;
      this.cache = null;
      this.oldWidget = null;
      _Selector0State.__proto__.new.call(this);
      ;
    }).prototype = _Selector0State.prototype;
    dart.addTypeTests(_Selector0State);
    _Selector0State.prototype[_is__Selector0State_default] = true;
    dart.addTypeCaches(_Selector0State);
    dart.setMethodSignature(_Selector0State, () => ({
      __proto__: dart.getMethods(_Selector0State.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(_Selector0State, I[32]);
    dart.setFieldSignature(_Selector0State, () => ({
      __proto__: dart.getFields(_Selector0State.__proto__),
      value: dart.fieldType(dart.nullable(T)),
      cache: dart.fieldType(dart.nullable(framework.Widget)),
      oldWidget: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return _Selector0State;
  });
  selector$._Selector0State = selector$._Selector0State$();
  dart.addTypeTests(selector$._Selector0State, _is__Selector0State_default);
  const _is_Selector_default = Symbol('_is_Selector_default');
  selector$.Selector$ = dart.generic((A, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector$(A, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector.prototype;
    dart.addTypeTests(Selector);
    Selector.prototype[_is_Selector_default] = true;
    dart.addTypeCaches(Selector);
    dart.setLibraryUri(Selector, I[32]);
    return Selector;
  });
  selector$.Selector = selector$.Selector$();
  dart.addTypeTests(selector$.Selector, _is_Selector_default);
  const _is_Selector2_default = Symbol('_is_Selector2_default');
  selector$.Selector2$ = dart.generic((A, B, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector2 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector2$(A, B, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector2.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector2.prototype;
    dart.addTypeTests(Selector2);
    Selector2.prototype[_is_Selector2_default] = true;
    dart.addTypeCaches(Selector2);
    dart.setLibraryUri(Selector2, I[32]);
    return Selector2;
  });
  selector$.Selector2 = selector$.Selector2$();
  dart.addTypeTests(selector$.Selector2, _is_Selector2_default);
  const _is_Selector3_default = Symbol('_is_Selector3_default');
  selector$.Selector3$ = dart.generic((A, B, C, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector3 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector3$(A, B, C, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector3.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector3.prototype;
    dart.addTypeTests(Selector3);
    Selector3.prototype[_is_Selector3_default] = true;
    dart.addTypeCaches(Selector3);
    dart.setLibraryUri(Selector3, I[32]);
    return Selector3;
  });
  selector$.Selector3 = selector$.Selector3$();
  dart.addTypeTests(selector$.Selector3, _is_Selector3_default);
  const _is_Selector4_default = Symbol('_is_Selector4_default');
  selector$.Selector4$ = dart.generic((A, B, C, D, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector4 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector4$(A, B, C, D, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector4.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector4.prototype;
    dart.addTypeTests(Selector4);
    Selector4.prototype[_is_Selector4_default] = true;
    dart.addTypeCaches(Selector4);
    dart.setLibraryUri(Selector4, I[32]);
    return Selector4;
  });
  selector$.Selector4 = selector$.Selector4$();
  dart.addTypeTests(selector$.Selector4, _is_Selector4_default);
  const _is_Selector5_default = Symbol('_is_Selector5_default');
  selector$.Selector5$ = dart.generic((A, B, C, D, E, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector5 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector5$(A, B, C, D, E, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector5.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector5.prototype;
    dart.addTypeTests(Selector5);
    Selector5.prototype[_is_Selector5_default] = true;
    dart.addTypeCaches(Selector5);
    dart.setLibraryUri(Selector5, I[32]);
    return Selector5;
  });
  selector$.Selector5 = selector$.Selector5$();
  dart.addTypeTests(selector$.Selector5, _is_Selector5_default);
  const _is_Selector6_default = Symbol('_is_Selector6_default');
  selector$.Selector6$ = dart.generic((A, B, C, D, E, F, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector6 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, F, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector6$(A, B, C, D, E, F, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector6.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context), provider$.Provider.of(F, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector6.prototype;
    dart.addTypeTests(Selector6);
    Selector6.prototype[_is_Selector6_default] = true;
    dart.addTypeCaches(Selector6);
    dart.setLibraryUri(Selector6, I[32]);
    return Selector6;
  });
  selector$.Selector6 = selector$.Selector6$();
  dart.addTypeTests(selector$.Selector6, _is_Selector6_default);
  const _is_ValueListenableProvider_default = Symbol('_is_ValueListenableProvider_default');
  value_listenable_provider.ValueListenableProvider$ = dart.generic(T => {
    var __t$ValueListenableBuilderOfT = () => (__t$ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var __t$ProviderOfT = () => (__t$ProviderOfT = dart.constFn(provider$.Provider$(T)))();
    var __t$BuildContextAndTAndWidgetNToProviderOfT = () => (__t$BuildContextAndTAndWidgetNToProviderOfT = dart.constFn(dart.fnType(__t$ProviderOfT(), [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class ValueListenableProvider extends nested.SingleChildStatelessWidget {
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (value_listenable_provider.ValueListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, child: child});
      }
      buildWithChild(context, child) {
        return new (__t$ValueListenableBuilderOfT()).new({valueListenable: this[S$._valueListenable], builder: dart.fn((context, value, _) => new (__t$ProviderOfT()).value({value: value, updateShouldNotify: this[S$._updateShouldNotify$1], child: child}), __t$BuildContextAndTAndWidgetNToProviderOfT())});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this[S$._valueListenable].value));
      }
    }
    (ValueListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$._valueListenable] = value;
      this[S$._updateShouldNotify$1] = updateShouldNotify;
      ValueListenableProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = ValueListenableProvider.prototype;
    dart.addTypeTests(ValueListenableProvider);
    ValueListenableProvider.prototype[_is_ValueListenableProvider_default] = true;
    dart.addTypeCaches(ValueListenableProvider);
    dart.setMethodSignature(ValueListenableProvider, () => ({
      __proto__: dart.getMethods(ValueListenableProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(ValueListenableProvider, I[33]);
    dart.setFieldSignature(ValueListenableProvider, () => ({
      __proto__: dart.getFields(ValueListenableProvider.__proto__),
      [S$._valueListenable]: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      [S$._updateShouldNotify$1]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return ValueListenableProvider;
  });
  value_listenable_provider.ValueListenableProvider = value_listenable_provider.ValueListenableProvider$();
  dart.addTypeTests(value_listenable_provider.ValueListenableProvider, _is_ValueListenableProvider_default);
  firebase_auth.ConfirmationResult = class ConfirmationResult extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.ConfirmationResult.__(_auth, _delegate);
    }
    get verificationId() {
      return this[S$._delegate$3].verificationId;
    }
    confirm(verificationCode) {
      return async.async(firebase_auth.UserCredential, (function* confirm() {
        return new firebase_auth.UserCredential.__(this[S$._auth$1], yield this[S$._delegate$3].confirm(verificationCode));
      }).bind(this));
    }
  };
  (firebase_auth.ConfirmationResult.__ = function(_auth, _delegate) {
    this[S$._auth$1] = _auth;
    this[S$._delegate$3] = _delegate;
    platform_interface_confirmation_result.ConfirmationResultPlatform.verify(this[S$._delegate$3]);
  }).prototype = firebase_auth.ConfirmationResult.prototype;
  dart.addTypeTests(firebase_auth.ConfirmationResult);
  dart.addTypeCaches(firebase_auth.ConfirmationResult);
  dart.setMethodSignature(firebase_auth.ConfirmationResult, () => ({
    __proto__: dart.getMethods(firebase_auth.ConfirmationResult.__proto__),
    confirm: dart.fnType(async.Future$(firebase_auth.UserCredential), [core.String])
  }));
  dart.setGetterSignature(firebase_auth.ConfirmationResult, () => ({
    __proto__: dart.getGetters(firebase_auth.ConfirmationResult.__proto__),
    verificationId: core.String
  }));
  dart.setLibraryUri(firebase_auth.ConfirmationResult, I[34]);
  dart.setFieldSignature(firebase_auth.ConfirmationResult, () => ({
    __proto__: dart.getFields(firebase_auth.ConfirmationResult.__proto__),
    [S$._delegate$3]: dart.fieldType(platform_interface_confirmation_result.ConfirmationResultPlatform),
    [S$._auth$1]: dart.finalFieldType(firebase_auth.FirebaseAuth)
  }));
  firebase_auth.FirebaseAuth = class FirebaseAuth extends firebase_core_platform_interface.FirebasePluginPlatform {
    get app() {
      return this[S$.app];
    }
    set app(value) {
      this[S$.app] = value;
    }
    get [S$._delegate$3]() {
      this[S$._delegatePackingProperty] == null ? this[S$._delegatePackingProperty] = platform_interface_firebase_auth.FirebaseAuthPlatform.instanceFor({app: this.app, pluginConstants: this.pluginConstants}) : null;
      return dart.nullCheck(this[S$._delegatePackingProperty]);
    }
    static ['_#_#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_auth.FirebaseAuth.__({app: app});
    }
    static get instance() {
      let defaultAppInstance = firebase_core.Firebase.app();
      return firebase_auth.FirebaseAuth.instanceFor({app: defaultAppInstance});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return firebase_auth.FirebaseAuth.instanceFor({app: app, persistence: persistence});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return firebase_auth.FirebaseAuth._firebaseAuthInstances[S$.$putIfAbsent](app.name, dart.fn(() => new firebase_auth.FirebaseAuth.__({app: app}), T$.VoidToFirebaseAuth()));
    }
    get currentUser() {
      if (this[S$._delegate$3].currentUser != null) {
        return new firebase_auth.User.__(this, dart.nullCheck(this[S$._delegate$3].currentUser));
      }
      return null;
    }
    get languageCode() {
      if (this[S$._delegate$3].languageCode != null) {
        return this[S$._delegate$3].languageCode;
      }
      return null;
    }
    useEmulator(origin) {
      return async.async(dart.void, (function* useEmulator() {
        if (!origin[S$.$isNotEmpty]) dart.assertFailed(null, I[35], 95, 12, "origin.isNotEmpty");
        let mappedOrigin = origin;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.android && false) {
          if (mappedOrigin[S$.$startsWith]("http://localhost")) {
            mappedOrigin = mappedOrigin[S$.$replaceFirst]("http://localhost", "http://10.0.2.2");
          } else if (mappedOrigin[S$.$startsWith]("http://127.0.0.1")) {
            mappedOrigin = mappedOrigin[S$.$replaceFirst]("http://127.0.0.1", "http://10.0.2.2");
          }
        }
        let hostPortRegex = core.RegExp.new("^http:\\/\\/([\\w\\d.]+):(\\d+)$");
        let match = hostPortRegex.firstMatch(mappedOrigin);
        if (match == null) {
          dart.throw(new core.ArgumentError.new("firebase.auth().useEmulator() origin format error"));
        }
        let host = dart.nullCheck(match.group(1));
        let port = core.int.parse(dart.nullCheck(match.group(2)));
        yield this.useAuthEmulator(host, port);
      }).bind(this));
    }
    useAuthEmulator(host, port, opts) {
      let automaticHostMapping = opts && 'automaticHostMapping' in opts ? opts.automaticHostMapping : true;
      return async.async(dart.void, (function* useAuthEmulator() {
        let mappedHost = host;
        if (false && platform.defaultTargetPlatform === platform.TargetPlatform.android) {
          if ((mappedHost === "localhost" || mappedHost === "127.0.0.1") && automaticHostMapping) {
            core.print("Mapping Auth Emulator host \"" + mappedHost + "\" to \"10.0.2.2\".");
            mappedHost = "10.0.2.2";
          }
        }
        yield this[S$._delegate$3].useAuthEmulator(mappedHost, port);
      }).bind(this));
    }
    get tenantId() {
      return this[S$._delegate$3].tenantId;
    }
    set tenantId(tenantId) {
      this[S$._delegate$3].tenantId = tenantId;
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        yield this[S$._delegate$3].applyActionCode(code);
      }).bind(this));
    }
    checkActionCode(code) {
      return this[S$._delegate$3].checkActionCode(code);
    }
    confirmPasswordReset(opts) {
      let code = opts && 'code' in opts ? opts.code : null;
      let newPassword = opts && 'newPassword' in opts ? opts.newPassword : null;
      return async.async(dart.void, (function* confirmPasswordReset() {
        yield this[S$._delegate$3].confirmPasswordReset(code, newPassword);
      }).bind(this));
    }
    createUserWithEmailAndPassword(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return async.async(firebase_auth.UserCredential, (function* createUserWithEmailAndPassword() {
        return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].createUserWithEmailAndPassword(email, password));
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return this[S$._delegate$3].fetchSignInMethodsForEmail(email);
    }
    getRedirectResult() {
      return async.async(firebase_auth.UserCredential, (function* getRedirectResult() {
        return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].getRedirectResult());
      }).bind(this));
    }
    isSignInWithEmailLink(emailLink) {
      return this[S$._delegate$3].isSignInWithEmailLink(emailLink);
    }
    [S$._pipeStreamChanges](stream) {
      return stream.map(T$.UserN$1(), dart.fn(delegateUser => {
        if (delegateUser == null) {
          return null;
        }
        return new firebase_auth.User.__(this, delegateUser);
      }, T$.UserPlatformNToUserN())).asBroadcastStream({onCancel: dart.fn(sub => sub.cancel(), T$.StreamSubscriptionOfUserNTovoid())});
    }
    authStateChanges() {
      return this[S$._pipeStreamChanges](this[S$._delegate$3].authStateChanges());
    }
    idTokenChanges() {
      return this[S$._pipeStreamChanges](this[S$._delegate$3].idTokenChanges());
    }
    userChanges() {
      return this[S$._pipeStreamChanges](this[S$._delegate$3].userChanges());
    }
    sendPasswordResetEmail(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let actionCodeSettings = opts && 'actionCodeSettings' in opts ? opts.actionCodeSettings : null;
      return this[S$._delegate$3].sendPasswordResetEmail(email, actionCodeSettings);
    }
    sendSignInLinkToEmail(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let actionCodeSettings = opts && 'actionCodeSettings' in opts ? opts.actionCodeSettings : null;
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        if (actionCodeSettings.handleCodeInApp !== true) {
          dart.throw(new core.ArgumentError.new("The [handleCodeInApp] value of [ActionCodeSettings] must be `true`."));
        }
        yield this[S$._delegate$3].sendSignInLinkToEmail(email, actionCodeSettings);
      }).bind(this));
    }
    setLanguageCode(languageCode) {
      return this[S$._delegate$3].setLanguageCode(languageCode);
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return this[S$._delegate$3].setSettings({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow});
    }
    setPersistence(persistence) {
      return async.async(dart.void, (function* setPersistence() {
        return this[S$._delegate$3].setPersistence(persistence);
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(firebase_auth.UserCredential, (function* signInAnonymously() {
        return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].signInAnonymously());
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(firebase_auth.UserCredential, (function* signInWithCredential() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].signInWithCredential(credential));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(firebase_auth.UserCredential, (function* signInWithCustomToken() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].signInWithCustomToken(token));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return async.async(firebase_auth.UserCredential, (function* signInWithEmailAndPassword() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].signInWithEmailAndPassword(email, password));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return async.async(firebase_auth.UserCredential, (function* signInWithEmailLink() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].signInWithEmailLink(email, emailLink));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithAuthProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* signInWithAuthProvider() {
        return this.signInWithProvider(provider);
      }).bind(this));
    }
    signInWithProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* signInWithProvider() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].signInWithProvider(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPhoneNumber(phoneNumber, verifier = null) {
      return async.async(firebase_auth.ConfirmationResult, (function* signInWithPhoneNumber() {
        if (!phoneNumber[S$.$isNotEmpty]) dart.assertFailed(null, I[35], 666, 12, "phoneNumber.isNotEmpty");
        let mustClear = verifier == null;
        verifier == null ? verifier = firebase_auth.RecaptchaVerifier.new({auth: this[S$._delegate$3]}) : null;
        let result = (yield this[S$._delegate$3].signInWithPhoneNumber(phoneNumber, verifier.delegate));
        if (mustClear) {
          verifier.clear();
        }
        return new firebase_auth.ConfirmationResult.__(this, result);
      }).bind(this));
    }
    signInWithPopup(provider) {
      return async.async(firebase_auth.UserCredential, (function* signInWithPopup() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate$3].signInWithPopup(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithRedirect(provider) {
      try {
        return this[S$._delegate$3].signInWithRedirect(provider);
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
          let e = ex;
          dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
        } else if (core.Object.is(ex)) {
          let e = ex;
          dart.rethrow(e$);
        } else
          throw e$;
      }
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        yield this[S$._delegate$3].signOut();
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return this[S$._delegate$3].verifyPasswordResetCode(code);
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      if (!(phoneNumber != null || multiFactorInfo != null)) dart.assertFailed("Either phoneNumber or multiFactorInfo must be provided.", I[35], 801, 7, "phoneNumber != null || multiFactorInfo != null");
      return this[S$._delegate$3].verifyPhoneNumber({phoneNumber: phoneNumber, multiFactorInfo: multiFactorInfo, timeout: timeout, forceResendingToken: forceResendingToken, verificationCompleted: verificationCompleted, verificationFailed: verificationFailed, codeSent: codeSent, codeAutoRetrievalTimeout: codeAutoRetrievalTimeout, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorSession: multiFactorSession});
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      return this[S$._delegate$3].revokeTokenWithAuthorizationCode(authorizationCode);
    }
    toString() {
      return "FirebaseAuth(app: " + this.app.name + ")";
    }
  };
  (firebase_auth.FirebaseAuth.__ = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._delegatePackingProperty] = null;
    this[S$.app] = app;
    firebase_auth.FirebaseAuth.__proto__.new.call(this, app.name, "plugins.flutter.io/firebase_auth");
    ;
  }).prototype = firebase_auth.FirebaseAuth.prototype;
  dart.addTypeTests(firebase_auth.FirebaseAuth);
  dart.addTypeCaches(firebase_auth.FirebaseAuth);
  dart.setMethodSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getMethods(firebase_auth.FirebaseAuth.__proto__),
    useEmulator: dart.fnType(async.Future$(dart.void), [core.String]),
    useAuthEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int], {automaticHostMapping: core.bool}, {}),
    applyActionCode: dart.fnType(async.Future$(dart.void), [core.String]),
    checkActionCode: dart.fnType(async.Future$(action_code_info.ActionCodeInfo), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [], {}, {code: core.String, newPassword: core.String}),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(firebase_auth.UserCredential), [], {}, {email: core.String, password: core.String}),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    getRedirectResult: dart.fnType(async.Future$(firebase_auth.UserCredential), []),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    [S$._pipeStreamChanges]: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), [async.Stream$(dart.nullable(platform_interface_user.UserPlatform))]),
    authStateChanges: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), []),
    idTokenChanges: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), []),
    userChanges: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), []),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [], {actionCodeSettings: dart.nullable(action_code_settings.ActionCodeSettings)}, {email: core.String}),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [], {}, {actionCodeSettings: action_code_settings.ActionCodeSettings, email: core.String}),
    setLanguageCode: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: core.bool, forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {}),
    setPersistence: dart.fnType(async.Future$(dart.void), [types.Persistence]),
    signInAnonymously: dart.fnType(async.Future$(firebase_auth.UserCredential), []),
    signInWithCredential: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_credential.AuthCredential]),
    signInWithCustomToken: dart.fnType(async.Future$(firebase_auth.UserCredential), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(firebase_auth.UserCredential), [], {}, {email: core.String, password: core.String}),
    signInWithEmailLink: dart.fnType(async.Future$(firebase_auth.UserCredential), [], {}, {email: core.String, emailLink: core.String}),
    signInWithAuthProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider$.AuthProvider]),
    signInWithProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider$.AuthProvider]),
    signInWithPhoneNumber: dart.fnType(async.Future$(firebase_auth.ConfirmationResult), [core.String], [dart.nullable(firebase_auth.RecaptchaVerifier)]),
    signInWithPopup: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider$.AuthProvider]),
    signInWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider$.AuthProvider]),
    signOut: dart.fnType(async.Future$(dart.void), []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.PhoneMultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])}),
    revokeTokenWithAuthorizationCode: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(firebase_auth.FirebaseAuth, () => ['instanceFor']);
  dart.setGetterSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getGetters(firebase_auth.FirebaseAuth.__proto__),
    [S$._delegate$3]: platform_interface_firebase_auth.FirebaseAuthPlatform,
    currentUser: dart.nullable(firebase_auth.User),
    languageCode: dart.nullable(core.String),
    tenantId: dart.nullable(core.String)
  }));
  dart.setSetterSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getSetters(firebase_auth.FirebaseAuth.__proto__),
    tenantId: dart.nullable(core.String)
  }));
  dart.setStaticGetterSignature(firebase_auth.FirebaseAuth, () => ['instance']);
  dart.setLibraryUri(firebase_auth.FirebaseAuth, I[34]);
  dart.setFieldSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getFields(firebase_auth.FirebaseAuth.__proto__),
    [S$._delegatePackingProperty]: dart.fieldType(dart.nullable(platform_interface_firebase_auth.FirebaseAuthPlatform)),
    app: dart.fieldType(firebase_core.FirebaseApp)
  }));
  dart.setStaticFieldSignature(firebase_auth.FirebaseAuth, () => ['_firebaseAuthInstances']);
  dart.defineExtensionMethods(firebase_auth.FirebaseAuth, ['toString']);
  dart.defineLazy(firebase_auth.FirebaseAuth, {
    /*firebase_auth.FirebaseAuth._firebaseAuthInstances*/get _firebaseAuthInstances() {
      return new (T$.IdentityMapOfString$FirebaseAuth()).new();
    },
    set _firebaseAuthInstances(value) {}
  }, false);
  firebase_auth.MultiFactor = class MultiFactor extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_auth.MultiFactor.__(_delegate);
    }
    getSession() {
      return this[S$._delegate$3].getSession();
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        if (platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.is(assertion[S$._delegate$3])) {
          if (!(displayName != null)) dart.assertFailed("displayName is mandatory for TOTP", I[36], 28, 14, "displayName != null");
        }
        return this[S$._delegate$3].enroll(assertion[S$._delegate$3], {displayName: displayName});
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      if (!(factorUid != null && multiFactorInfo == null || factorUid == null && multiFactorInfo != null)) dart.assertFailed("Exactly one of `factorUid` or `multiFactorInfo` must be provided", I[36], 40, 7, "(factorUid != null && multiFactorInfo == null) ||\n          (factorUid == null && multiFactorInfo != null)");
      return this[S$._delegate$3].unenroll({factorUid: factorUid, multiFactorInfo: multiFactorInfo});
    }
    getEnrolledFactors() {
      return this[S$._delegate$3].getEnrolledFactors();
    }
  };
  (firebase_auth.MultiFactor.__ = function(_delegate) {
    this[S$._delegate$3] = _delegate;
    ;
  }).prototype = firebase_auth.MultiFactor.prototype;
  dart.addTypeTests(firebase_auth.MultiFactor);
  dart.addTypeCaches(firebase_auth.MultiFactor);
  dart.setMethodSignature(firebase_auth.MultiFactor, () => ({
    __proto__: dart.getMethods(firebase_auth.MultiFactor.__proto__),
    getSession: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorSession), []),
    enroll: dart.fnType(async.Future$(dart.void), [firebase_auth.MultiFactorAssertion], {displayName: dart.nullable(core.String)}, {}),
    unenroll: dart.fnType(async.Future$(dart.void), [], {factorUid: dart.nullable(core.String), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo)}, {}),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(platform_interface_multi_factor.MultiFactorInfo)), [])
  }));
  dart.setLibraryUri(firebase_auth.MultiFactor, I[34]);
  dart.setFieldSignature(firebase_auth.MultiFactor, () => ({
    __proto__: dart.getFields(firebase_auth.MultiFactor.__proto__),
    [S$._delegate$3]: dart.fieldType(platform_interface_multi_factor.MultiFactorPlatform)
  }));
  firebase_auth.PhoneMultiFactorGenerator = class PhoneMultiFactorGenerator extends core.Object {
    static getAssertion(credential) {
      let assertion = platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.instance.getAssertion(credential);
      return new firebase_auth.MultiFactorAssertion.__(assertion);
    }
    static ['_#new#tearOff']() {
      return new firebase_auth.PhoneMultiFactorGenerator.new();
    }
  };
  (firebase_auth.PhoneMultiFactorGenerator.new = function() {
    ;
  }).prototype = firebase_auth.PhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(firebase_auth.PhoneMultiFactorGenerator);
  dart.addTypeCaches(firebase_auth.PhoneMultiFactorGenerator);
  dart.setStaticMethodSignature(firebase_auth.PhoneMultiFactorGenerator, () => ['getAssertion']);
  dart.setLibraryUri(firebase_auth.PhoneMultiFactorGenerator, I[34]);
  firebase_auth.TotpMultiFactorGenerator = class TotpMultiFactorGenerator extends core.Object {
    static generateSecret(session) {
      return async.async(firebase_auth.TotpSecret, function* generateSecret() {
        let secret = (yield platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance.generateSecret(session));
        return new firebase_auth.TotpSecret.__(secret.codeIntervalSeconds, secret.codeLength, secret.enrollmentCompletionDeadline, secret.hashingAlgorithm, secret.secretKey, secret);
      });
    }
    static getAssertionForEnrollment(secret, oneTimePassword) {
      return async.async(firebase_auth.MultiFactorAssertion, function* getAssertionForEnrollment() {
        let assertion = (yield platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance.getAssertionForEnrollment(secret[S$._instance], oneTimePassword));
        return new firebase_auth.MultiFactorAssertion.__(assertion);
      });
    }
    static getAssertionForSignIn(enrollmentId, oneTimePassword) {
      return async.async(firebase_auth.MultiFactorAssertion, function* getAssertionForSignIn() {
        let assertion = (yield platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance.getAssertionForSignIn(enrollmentId, oneTimePassword));
        return new firebase_auth.MultiFactorAssertion.__(assertion);
      });
    }
    static ['_#new#tearOff']() {
      return new firebase_auth.TotpMultiFactorGenerator.new();
    }
  };
  (firebase_auth.TotpMultiFactorGenerator.new = function() {
    ;
  }).prototype = firebase_auth.TotpMultiFactorGenerator.prototype;
  dart.addTypeTests(firebase_auth.TotpMultiFactorGenerator);
  dart.addTypeCaches(firebase_auth.TotpMultiFactorGenerator);
  dart.setStaticMethodSignature(firebase_auth.TotpMultiFactorGenerator, () => ['generateSecret', 'getAssertionForEnrollment', 'getAssertionForSignIn']);
  dart.setLibraryUri(firebase_auth.TotpMultiFactorGenerator, I[34]);
  firebase_auth.TotpSecret = class TotpSecret extends core.Object {
    get codeIntervalSeconds() {
      return this[S$.codeIntervalSeconds];
    }
    set codeIntervalSeconds(value) {
      super.codeIntervalSeconds = value;
    }
    get codeLength() {
      return this[S$.codeLength];
    }
    set codeLength(value) {
      super.codeLength = value;
    }
    get enrollmentCompletionDeadline() {
      return this[S$.enrollmentCompletionDeadline];
    }
    set enrollmentCompletionDeadline(value) {
      super.enrollmentCompletionDeadline = value;
    }
    get hashingAlgorithm() {
      return this[S$.hashingAlgorithm];
    }
    set hashingAlgorithm(value) {
      super.hashingAlgorithm = value;
    }
    get secretKey() {
      return this[S$.secretKey];
    }
    set secretKey(value) {
      super.secretKey = value;
    }
    static ['_#_#tearOff'](codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey, _instance) {
      return new firebase_auth.TotpSecret.__(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey, _instance);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      return this[S$._instance].generateQrCodeUrl({accountName: accountName, issuer: issuer});
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, (function* openInOtpApp() {
        yield this[S$._instance].openInOtpApp(qrCodeUrl);
      }).bind(this));
    }
  };
  (firebase_auth.TotpSecret.__ = function(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey, _instance) {
    this[S$.codeIntervalSeconds] = codeIntervalSeconds;
    this[S$.codeLength] = codeLength;
    this[S$.enrollmentCompletionDeadline] = enrollmentCompletionDeadline;
    this[S$.hashingAlgorithm] = hashingAlgorithm;
    this[S$.secretKey] = secretKey;
    this[S$._instance] = _instance;
    ;
  }).prototype = firebase_auth.TotpSecret.prototype;
  dart.addTypeTests(firebase_auth.TotpSecret);
  dart.addTypeCaches(firebase_auth.TotpSecret);
  dart.setMethodSignature(firebase_auth.TotpSecret, () => ({
    __proto__: dart.getMethods(firebase_auth.TotpSecret.__proto__),
    generateQrCodeUrl: dart.fnType(async.Future$(core.String), [], {accountName: dart.nullable(core.String), issuer: dart.nullable(core.String)}, {}),
    openInOtpApp: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(firebase_auth.TotpSecret, I[34]);
  dart.setFieldSignature(firebase_auth.TotpSecret, () => ({
    __proto__: dart.getFields(firebase_auth.TotpSecret.__proto__),
    [S$._instance]: dart.finalFieldType(platform_interface_multi_factor.TotpSecretPlatform),
    codeIntervalSeconds: dart.finalFieldType(dart.nullable(core.int)),
    codeLength: dart.finalFieldType(dart.nullable(core.int)),
    enrollmentCompletionDeadline: dart.finalFieldType(dart.nullable(core.DateTime)),
    hashingAlgorithm: dart.finalFieldType(dart.nullable(core.String)),
    secretKey: dart.finalFieldType(core.String)
  }));
  firebase_auth.MultiFactorAssertion = class MultiFactorAssertion extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_auth.MultiFactorAssertion.__(_delegate);
    }
  };
  (firebase_auth.MultiFactorAssertion.__ = function(_delegate) {
    this[S$._delegate$3] = _delegate;
    platform_interface_multi_factor.MultiFactorAssertionPlatform.verify(this[S$._delegate$3]);
  }).prototype = firebase_auth.MultiFactorAssertion.prototype;
  dart.addTypeTests(firebase_auth.MultiFactorAssertion);
  dart.addTypeCaches(firebase_auth.MultiFactorAssertion);
  dart.setLibraryUri(firebase_auth.MultiFactorAssertion, I[34]);
  dart.setFieldSignature(firebase_auth.MultiFactorAssertion, () => ({
    __proto__: dart.getFields(firebase_auth.MultiFactorAssertion.__proto__),
    [S$._delegate$3]: dart.finalFieldType(platform_interface_multi_factor.MultiFactorAssertionPlatform)
  }));
  firebase_auth.MultiFactorResolver = class MultiFactorResolver extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.MultiFactorResolver.__(_auth, _delegate);
    }
    get hints() {
      return this[S$._delegate$3].hints;
    }
    get session() {
      return this[S$._delegate$3].session;
    }
    resolveSignIn(assertion) {
      return async.async(firebase_auth.UserCredential, (function* resolveSignIn() {
        let credential = (yield this[S$._delegate$3].resolveSignIn(assertion[S$._delegate$3]));
        return new firebase_auth.UserCredential.__(this[S$._auth$1], credential);
      }).bind(this));
    }
  };
  (firebase_auth.MultiFactorResolver.__ = function(_auth, _delegate) {
    this[S$._auth$1] = _auth;
    this[S$._delegate$3] = _delegate;
    platform_interface_multi_factor.MultiFactorResolverPlatform.verify(this[S$._delegate$3]);
  }).prototype = firebase_auth.MultiFactorResolver.prototype;
  dart.addTypeTests(firebase_auth.MultiFactorResolver);
  dart.addTypeCaches(firebase_auth.MultiFactorResolver);
  dart.setMethodSignature(firebase_auth.MultiFactorResolver, () => ({
    __proto__: dart.getMethods(firebase_auth.MultiFactorResolver.__proto__),
    resolveSignIn: dart.fnType(async.Future$(firebase_auth.UserCredential), [firebase_auth.MultiFactorAssertion])
  }));
  dart.setGetterSignature(firebase_auth.MultiFactorResolver, () => ({
    __proto__: dart.getGetters(firebase_auth.MultiFactorResolver.__proto__),
    hints: core.List$(platform_interface_multi_factor.MultiFactorInfo),
    session: platform_interface_multi_factor.MultiFactorSession
  }));
  dart.setLibraryUri(firebase_auth.MultiFactorResolver, I[34]);
  dart.setFieldSignature(firebase_auth.MultiFactorResolver, () => ({
    __proto__: dart.getFields(firebase_auth.MultiFactorResolver.__proto__),
    [S$._auth$1]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._delegate$3]: dart.finalFieldType(platform_interface_multi_factor.MultiFactorResolverPlatform)
  }));
  firebase_auth_exception.FirebaseAuthException = class FirebaseAuthException extends firebase_core_platform_interface.FirebaseException {
    get email() {
      return this[S$.email];
    }
    set email(value) {
      super.email = value;
    }
    get credential() {
      return this[S$.credential];
    }
    set credential(value) {
      super.credential = value;
    }
    get phoneNumber() {
      return this[S$.phoneNumber];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    get tenantId() {
      return this[S$.tenantId$1];
    }
    set tenantId(value) {
      super.tenantId = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      return new firebase_auth_exception.FirebaseAuthException.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    }
  };
  (firebase_auth_exception.FirebaseAuthException.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    this[S$.email] = email;
    this[S$.credential] = credential;
    this[S$.phoneNumber] = phoneNumber;
    this[S$.tenantId$1] = tenantId;
    firebase_auth_exception.FirebaseAuthException.__proto__.new.call(this, {plugin: "firebase_auth", message: message, code: code});
    ;
  }).prototype = firebase_auth_exception.FirebaseAuthException.prototype;
  dart.addTypeTests(firebase_auth_exception.FirebaseAuthException);
  dart.addTypeCaches(firebase_auth_exception.FirebaseAuthException);
  firebase_auth_exception.FirebaseAuthException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_exception.FirebaseAuthException, I[37]);
  dart.setFieldSignature(firebase_auth_exception.FirebaseAuthException, () => ({
    __proto__: dart.getFields(firebase_auth_exception.FirebaseAuthException.__proto__),
    email: dart.finalFieldType(dart.nullable(core.String)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    phoneNumber: dart.finalFieldType(dart.nullable(core.String)),
    tenantId: dart.finalFieldType(dart.nullable(core.String))
  }));
  firebase_auth.FirebaseAuthMultiFactorException = class FirebaseAuthMultiFactorException extends firebase_auth_exception.FirebaseAuthException {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.FirebaseAuthMultiFactorException.__(_auth, _delegate);
    }
    get resolver() {
      return new firebase_auth.MultiFactorResolver.__(this[S$._auth$1], this[S$._delegate$3].resolver);
    }
  };
  (firebase_auth.FirebaseAuthMultiFactorException.__ = function(_auth, _delegate) {
    this[S$._auth$1] = _auth;
    this[S$._delegate$3] = _delegate;
    firebase_auth.FirebaseAuthMultiFactorException.__proto__.new.call(this, {code: _delegate.code, message: _delegate.message, email: _delegate.email, credential: _delegate.credential, phoneNumber: _delegate.phoneNumber, tenantId: _delegate.tenantId});
    ;
  }).prototype = firebase_auth.FirebaseAuthMultiFactorException.prototype;
  dart.addTypeTests(firebase_auth.FirebaseAuthMultiFactorException);
  dart.addTypeCaches(firebase_auth.FirebaseAuthMultiFactorException);
  dart.setGetterSignature(firebase_auth.FirebaseAuthMultiFactorException, () => ({
    __proto__: dart.getGetters(firebase_auth.FirebaseAuthMultiFactorException.__proto__),
    resolver: firebase_auth.MultiFactorResolver
  }));
  dart.setLibraryUri(firebase_auth.FirebaseAuthMultiFactorException, I[34]);
  dart.setFieldSignature(firebase_auth.FirebaseAuthMultiFactorException, () => ({
    __proto__: dart.getFields(firebase_auth.FirebaseAuthMultiFactorException.__proto__),
    [S$._auth$1]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._delegate$3]: dart.finalFieldType(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform)
  }));
  firebase_auth.RecaptchaVerifier = class RecaptchaVerifier extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_auth.RecaptchaVerifier.__(_delegate);
    }
    static new(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[18] || CT.C18;
      let theme = opts && 'theme' in opts ? opts.theme : C[19] || CT.C19;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return new firebase_auth.RecaptchaVerifier.__(firebase_auth.RecaptchaVerifier._factory.delegateFor({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired}));
    }
    static ['_#new#tearOff'](opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[18] || CT.C18;
      let theme = opts && 'theme' in opts ? opts.theme : C[19] || CT.C19;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return firebase_auth.RecaptchaVerifier.new({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    get delegate() {
      return this[S$._delegate$3];
    }
    get type() {
      return this[S$._delegate$3].type;
    }
    clear() {
      return this[S$._delegate$3].clear();
    }
    render() {
      return async.async(core.int, (function* render() {
        return this[S$._delegate$3].render();
      }).bind(this));
    }
    verify() {
      return async.async(core.String, (function* verify() {
        return this[S$._delegate$3].verify();
      }).bind(this));
    }
  };
  (firebase_auth.RecaptchaVerifier.__ = function(_delegate) {
    this[S$._delegate$3] = _delegate;
    ;
  }).prototype = firebase_auth.RecaptchaVerifier.prototype;
  dart.addTypeTests(firebase_auth.RecaptchaVerifier);
  dart.addTypeCaches(firebase_auth.RecaptchaVerifier);
  dart.setMethodSignature(firebase_auth.RecaptchaVerifier, () => ({
    __proto__: dart.getMethods(firebase_auth.RecaptchaVerifier.__proto__),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.int), []),
    verify: dart.fnType(async.Future$(core.String), [])
  }));
  dart.setStaticMethodSignature(firebase_auth.RecaptchaVerifier, () => ['new']);
  dart.setGetterSignature(firebase_auth.RecaptchaVerifier, () => ({
    __proto__: dart.getGetters(firebase_auth.RecaptchaVerifier.__proto__),
    delegate: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform,
    type: core.String
  }));
  dart.setLibraryUri(firebase_auth.RecaptchaVerifier, I[34]);
  dart.setFieldSignature(firebase_auth.RecaptchaVerifier, () => ({
    __proto__: dart.getFields(firebase_auth.RecaptchaVerifier.__proto__),
    [S$._delegate$3]: dart.fieldType(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform)
  }));
  dart.setStaticFieldSignature(firebase_auth.RecaptchaVerifier, () => ['_factory']);
  dart.defineLazy(firebase_auth.RecaptchaVerifier, {
    /*firebase_auth.RecaptchaVerifier._factory*/get _factory() {
      return platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.instance;
    }
  }, false);
  firebase_auth.User = class User extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.User.__(_auth, _delegate);
    }
    get displayName() {
      return this[S$._delegate$3].displayName;
    }
    get email() {
      return this[S$._delegate$3].email;
    }
    get emailVerified() {
      return this[S$._delegate$3].isEmailVerified;
    }
    get isAnonymous() {
      return this[S$._delegate$3].isAnonymous;
    }
    get metadata() {
      return this[S$._delegate$3].metadata;
    }
    get phoneNumber() {
      return this[S$._delegate$3].phoneNumber;
    }
    get photoURL() {
      return this[S$._delegate$3].photoURL;
    }
    get providerData() {
      return this[S$._delegate$3].providerData;
    }
    get refreshToken() {
      return this[S$._delegate$3].refreshToken;
    }
    get tenantId() {
      return this[S$._delegate$3].tenantId;
    }
    get uid() {
      return this[S$._delegate$3].uid;
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        return this[S$._delegate$3].delete();
      }).bind(this));
    }
    getIdToken(forceRefresh = false) {
      return this[S$._delegate$3].getIdToken(forceRefresh);
    }
    getIdTokenResult(forceRefresh = false) {
      return this[S$._delegate$3].getIdTokenResult(forceRefresh);
    }
    linkWithCredential(credential) {
      return async.async(firebase_auth.UserCredential, (function* linkWithCredential() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth$1], yield this[S$._delegate$3].linkWithCredential(credential));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth$1], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* linkWithProvider() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth$1], yield this[S$._delegate$3].linkWithProvider(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth$1], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* reauthenticateWithProvider() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth$1], yield this[S$._delegate$3].reauthenticateWithProvider(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth$1], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithPopup(provider) {
      return async.async(firebase_auth.UserCredential, (function* reauthenticateWithPopup() {
        return new firebase_auth.UserCredential.__(this[S$._auth$1], yield this[S$._delegate$3].reauthenticateWithPopup(provider));
      }).bind(this));
    }
    reauthenticateWithRedirect(provider) {
      return async.async(dart.void, (function* reauthenticateWithRedirect() {
        yield this[S$._delegate$3].reauthenticateWithRedirect(provider);
      }).bind(this));
    }
    linkWithPopup(provider) {
      return async.async(firebase_auth.UserCredential, (function* linkWithPopup() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth$1], yield this[S$._delegate$3].linkWithPopup(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth$1], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithRedirect(provider) {
      return async.async(dart.void, (function* linkWithRedirect() {
        try {
          yield this[S$._delegate$3].linkWithRedirect(provider);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth$1], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPhoneNumber(phoneNumber, verifier = null) {
      return async.async(firebase_auth.ConfirmationResult, (function* linkWithPhoneNumber() {
        if (!phoneNumber[S$.$isNotEmpty]) dart.assertFailed(null, I[38], 490, 12, "phoneNumber.isNotEmpty");
        let mustClear = verifier == null;
        verifier == null ? verifier = firebase_auth.RecaptchaVerifier.new({auth: this[S$._delegate$3].auth}) : null;
        try {
          let result = (yield this[S$._delegate$3].linkWithPhoneNumber(phoneNumber, verifier.delegate));
          if (mustClear) {
            verifier.clear();
          }
          return new firebase_auth.ConfirmationResult.__(this[S$._auth$1], result);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth$1], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(firebase_auth.UserCredential, (function* reauthenticateWithCredential() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth$1], yield this[S$._delegate$3].reauthenticateWithCredential(credential));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth$1], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        yield this[S$._delegate$3].reload();
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings = null) {
      return async.async(dart.void, (function* sendEmailVerification() {
        yield this[S$._delegate$3].sendEmailVerification(actionCodeSettings);
      }).bind(this));
    }
    unlink(providerId) {
      return async.async(firebase_auth.User, (function* unlink() {
        return new firebase_auth.User.__(this[S$._auth$1], yield this[S$._delegate$3].unlink(providerId));
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        yield this[S$._delegate$3].updateEmail(newEmail);
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        yield this[S$._delegate$3].updatePassword(newPassword);
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        yield this[S$._delegate$3].updatePhoneNumber(phoneCredential);
      }).bind(this));
    }
    updateDisplayName(displayName) {
      return this[S$._delegate$3].updateProfile(new (T$.IdentityMapOfString$StringN()).from(["displayName", displayName]));
    }
    updatePhotoURL(photoURL) {
      return this[S$._delegate$3].updateProfile(new (T$.IdentityMapOfString$StringN()).from(["photoURL", photoURL]));
    }
    updateProfile(opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoURL = opts && 'photoURL' in opts ? opts.photoURL : null;
      return this[S$._delegate$3].updateProfile(new (T$.IdentityMapOfString$StringN()).from(["displayName", displayName, "photoURL", photoURL]));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        yield this[S$._delegate$3].verifyBeforeUpdateEmail(newEmail, actionCodeSettings);
      }).bind(this));
    }
    get multiFactor() {
      let t71;
      if (false && (io.Platform.isMacOS || io.Platform.isWindows)) {
        dart.throw(new core.UnimplementedError.new("MultiFactor Authentication is only supported on web, Android and iOS."));
      }
      t71 = this[S$._multiFactor];
      return t71 == null ? this[S$._multiFactor] = new firebase_auth.MultiFactor.__(this[S$._delegate$3].multiFactor) : t71;
    }
    toString() {
      return dart.str(dart.wrapType(firebase_auth.User)) + "(" + "displayName: " + dart.str(this.displayName) + ", " + "email: " + dart.str(this.email) + ", " + "isEmailVerified: " + dart.str(this.emailVerified) + ", " + "isAnonymous: " + dart.str(this.isAnonymous) + ", " + "metadata: " + dart.str(this.metadata) + ", " + "phoneNumber: " + dart.str(this.phoneNumber) + ", " + "photoURL: " + dart.str(this.photoURL) + ", " + "providerData, " + dart.str(this.providerData) + ", " + "refreshToken: " + dart.str(this.refreshToken) + ", " + "tenantId: " + dart.str(this.tenantId) + ", " + "uid: " + this.uid + ")";
    }
  };
  (firebase_auth.User.__ = function(_auth, _delegate) {
    this[S$._multiFactor] = null;
    this[S$._auth$1] = _auth;
    this[S$._delegate$3] = _delegate;
    platform_interface_user.UserPlatform.verify(this[S$._delegate$3]);
  }).prototype = firebase_auth.User.prototype;
  dart.addTypeTests(firebase_auth.User);
  dart.addTypeCaches(firebase_auth.User);
  dart.setMethodSignature(firebase_auth.User, () => ({
    __proto__: dart.getMethods(firebase_auth.User.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(dart.nullable(core.String)), [], [core.bool]),
    getIdTokenResult: dart.fnType(async.Future$(id_token_result.IdTokenResult), [], [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_credential.AuthCredential]),
    linkWithProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider$.AuthProvider]),
    reauthenticateWithProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider$.AuthProvider]),
    reauthenticateWithPopup: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider$.AuthProvider]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider$.AuthProvider]),
    linkWithPopup: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider$.AuthProvider]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider$.AuthProvider]),
    linkWithPhoneNumber: dart.fnType(async.Future$(firebase_auth.ConfirmationResult), [core.String], [dart.nullable(firebase_auth.RecaptchaVerifier)]),
    reauthenticateWithCredential: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_credential.AuthCredential]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(firebase_auth.User), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [phone_auth.PhoneAuthCredential]),
    updateDisplayName: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    updatePhotoURL: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    updateProfile: dart.fnType(async.Future$(dart.void), [], {displayName: dart.nullable(core.String), photoURL: dart.nullable(core.String)}, {}),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setGetterSignature(firebase_auth.User, () => ({
    __proto__: dart.getGetters(firebase_auth.User.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    emailVerified: core.bool,
    isAnonymous: core.bool,
    metadata: user_metadata.UserMetadata,
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerData: core.List$(user_info.UserInfo),
    refreshToken: dart.nullable(core.String),
    tenantId: dart.nullable(core.String),
    uid: core.String,
    multiFactor: firebase_auth.MultiFactor
  }));
  dart.setLibraryUri(firebase_auth.User, I[34]);
  dart.setFieldSignature(firebase_auth.User, () => ({
    __proto__: dart.getFields(firebase_auth.User.__proto__),
    [S$._delegate$3]: dart.fieldType(platform_interface_user.UserPlatform),
    [S$._auth$1]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._multiFactor]: dart.fieldType(dart.nullable(firebase_auth.MultiFactor))
  }));
  dart.defineExtensionMethods(firebase_auth.User, ['toString']);
  firebase_auth.UserCredential = class UserCredential extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.UserCredential.__(_auth, _delegate);
    }
    get additionalUserInfo() {
      return this[S$._delegate$3].additionalUserInfo;
    }
    get credential() {
      return this[S$._delegate$3].credential;
    }
    get user() {
      return this[S$._delegate$3].user == null ? null : new firebase_auth.User.__(this[S$._auth$1], dart.nullCheck(this[S$._delegate$3].user));
    }
    toString() {
      return "UserCredential(" + "additionalUserInfo: " + dart.str(this.additionalUserInfo) + ", " + "credential: " + dart.str(this.credential) + ", " + "user: " + dart.str(this.user) + ")";
    }
  };
  (firebase_auth.UserCredential.__ = function(_auth, _delegate) {
    this[S$._auth$1] = _auth;
    this[S$._delegate$3] = _delegate;
    platform_interface_user_credential.UserCredentialPlatform.verify(this[S$._delegate$3]);
  }).prototype = firebase_auth.UserCredential.prototype;
  dart.addTypeTests(firebase_auth.UserCredential);
  dart.addTypeCaches(firebase_auth.UserCredential);
  dart.setGetterSignature(firebase_auth.UserCredential, () => ({
    __proto__: dart.getGetters(firebase_auth.UserCredential.__proto__),
    additionalUserInfo: dart.nullable(additional_user_info.AdditionalUserInfo),
    credential: dart.nullable(auth_credential.AuthCredential),
    user: dart.nullable(firebase_auth.User)
  }));
  dart.setLibraryUri(firebase_auth.UserCredential, I[34]);
  dart.setFieldSignature(firebase_auth.UserCredential, () => ({
    __proto__: dart.getFields(firebase_auth.UserCredential.__proto__),
    [S$._auth$1]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._delegate$3]: dart.finalFieldType(platform_interface_user_credential.UserCredentialPlatform)
  }));
  dart.defineExtensionMethods(firebase_auth.UserCredential, ['toString']);
  cloud_firestore.AggregateQuery = class AggregateQuery extends core.Object {
    get query() {
      return this[S$.query];
    }
    set query(value) {
      super.query = value;
    }
    static ['_#_#tearOff'](_delegate, query) {
      return new cloud_firestore.AggregateQuery.__(_delegate, query);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : C[20] || CT.C20;
      return async.async(cloud_firestore.AggregateQuerySnapshot, (function* get() {
        return new cloud_firestore.AggregateQuerySnapshot.__(yield this[S$._delegate$4].get({source: source}), this.query);
      }).bind(this));
    }
    count() {
      return new cloud_firestore.AggregateQuery.__(this[S$._delegate$4].count(), this.query);
    }
  };
  (cloud_firestore.AggregateQuery.__ = function(_delegate, query) {
    this[S$._delegate$4] = _delegate;
    this[S$.query] = query;
    platform_interface_aggregate_query.AggregateQueryPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore.AggregateQuery.prototype;
  dart.addTypeTests(cloud_firestore.AggregateQuery);
  dart.addTypeCaches(cloud_firestore.AggregateQuery);
  dart.setMethodSignature(cloud_firestore.AggregateQuery, () => ({
    __proto__: dart.getMethods(cloud_firestore.AggregateQuery.__proto__),
    get: dart.fnType(async.Future$(cloud_firestore.AggregateQuerySnapshot), [], {source: messages$46pigeon$.AggregateSource}, {}),
    count: dart.fnType(cloud_firestore.AggregateQuery, [])
  }));
  dart.setLibraryUri(cloud_firestore.AggregateQuery, I[39]);
  dart.setFieldSignature(cloud_firestore.AggregateQuery, () => ({
    __proto__: dart.getFields(cloud_firestore.AggregateQuery.__proto__),
    query: dart.finalFieldType(cloud_firestore.Query$(dart.nullable(core.Object))),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_aggregate_query.AggregateQueryPlatform)
  }));
  cloud_firestore.AggregateQuerySnapshot = class AggregateQuerySnapshot extends core.Object {
    get query() {
      return this[S$.query$1];
    }
    set query(value) {
      super.query = value;
    }
    static ['_#_#tearOff'](_delegate, query) {
      return new cloud_firestore.AggregateQuerySnapshot.__(_delegate, query);
    }
    get count() {
      return this[S$._delegate$4].count;
    }
    getSum(field) {
      return this[S$._delegate$4].getSum(field);
    }
    getAverage(field) {
      return this[S$._delegate$4].getAverage(field);
    }
  };
  (cloud_firestore.AggregateQuerySnapshot.__ = function(_delegate, query) {
    this[S$._delegate$4] = _delegate;
    this[S$.query$1] = query;
    platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.verifyExtends(this[S$._delegate$4]);
  }).prototype = cloud_firestore.AggregateQuerySnapshot.prototype;
  dart.addTypeTests(cloud_firestore.AggregateQuerySnapshot);
  dart.addTypeCaches(cloud_firestore.AggregateQuerySnapshot);
  dart.setMethodSignature(cloud_firestore.AggregateQuerySnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore.AggregateQuerySnapshot.__proto__),
    getSum: dart.fnType(dart.nullable(core.double), [core.String]),
    getAverage: dart.fnType(dart.nullable(core.double), [core.String])
  }));
  dart.setGetterSignature(cloud_firestore.AggregateQuerySnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore.AggregateQuerySnapshot.__proto__),
    count: dart.nullable(core.int)
  }));
  dart.setLibraryUri(cloud_firestore.AggregateQuerySnapshot, I[39]);
  dart.setFieldSignature(cloud_firestore.AggregateQuerySnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore.AggregateQuerySnapshot.__proto__),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform),
    query: dart.finalFieldType(cloud_firestore.Query$(dart.nullable(core.Object)))
  }));
  const _is_CollectionReference_default = Symbol('_is_CollectionReference_default');
  cloud_firestore.CollectionReference$ = dart.generic(T => {
    class CollectionReference extends core.Object {}
    (CollectionReference.new = function() {
      ;
    }).prototype = CollectionReference.prototype;
    dart.addTypeTests(CollectionReference);
    CollectionReference.prototype[_is_CollectionReference_default] = true;
    dart.addTypeCaches(CollectionReference);
    CollectionReference[dart.implements] = () => [cloud_firestore.Query$(T)];
    dart.setLibraryUri(CollectionReference, I[39]);
    return CollectionReference;
  });
  cloud_firestore.CollectionReference = cloud_firestore.CollectionReference$();
  dart.addTypeTests(cloud_firestore.CollectionReference, _is_CollectionReference_default);
  cloud_firestore._JsonQuery = class _JsonQuery extends core.Object {
    get [S$._delegate$4]() {
      return this[S$._delegate$5];
    }
    set [S$._delegate$4](value) {
      super[S$._delegate$4] = value;
    }
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonQuery.new(firestore, _delegate);
    }
    get parameters() {
      return this[S$._delegate$4].parameters;
    }
    [S$._hasStartCursor]() {
      return this.parameters[S$.$_get]("startAt") != null || this.parameters[S$.$_get]("startAfter") != null;
    }
    [S$._hasEndCursor]() {
      return this.parameters[S$.$_get]("endAt") != null || this.parameters[S$.$_get]("endBefore") != null;
    }
    [S$._isInequality](operator) {
      return operator === "<" || operator === "<=" || operator === ">" || operator === ">=" || operator === "!=";
    }
    isNotIn(operator) {
      return operator === "not-in";
    }
    [S$._assertQueryCursorSnapshot](documentSnapshot) {
      if (!documentSnapshot.exists) dart.assertFailed("a document snapshot must exist to be used within a query", I[41], 291, 7, "documentSnapshot.exists");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      let values = [];
      for (let order of orders) {
        let field = order[S$.$_get](0);
        if (!dart.equals(field, field_path.FieldPath.documentId)) {
          try {
            let codecValue = cloud_firestore._CodecUtility.valueEncode(documentSnapshot.get(core.Object.as(field)));
            values[S$.$add](codecValue);
          } catch (e) {
            let ex = dart.getThrown(e);
            if (core.StateError.is(ex)) {
              dart.throw("You are trying to start or end a query using a document for which the field '" + dart.str(field) + "' (used as the orderBy) does not exist.");
            } else
              throw e;
          }
        }
      }
      if (orders[S$.$isNotEmpty]) {
        let lastOrder = orders[S$.$last];
        if (!dart.equals(lastOrder[S$.$_get](0), field_path.FieldPath.documentId)) {
          orders[S$.$add]([field_path.FieldPath.documentId, lastOrder[S$.$_get](1)]);
        }
      } else {
        orders[S$.$add]([field_path.FieldPath.documentId, false]);
      }
      if (this[S$._delegate$4].isCollectionGroupQuery) {
        values[S$.$add](documentSnapshot.reference.path);
      } else {
        values[S$.$add](documentSnapshot.id);
      }
      return new (T$.IdentityMapOfString$dynamic()).from(["orders", orders, "values", values]);
    }
    [S$._assertQueryCursorValues](fields) {
      let orders = T$.ListOfListOfObjectN().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!(fields[S$.$length] <= orders[S$.$length])) dart.assertFailed("Too many arguments provided. " + "The number of arguments must be less than or equal to the number of orderBy() clauses.", I[41], 343, 7, "fields.length <= orders.length");
      return fields;
    }
    [S$._assertValidFieldType](field) {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field) || field[S$.$_equals](field_path.FieldPath.documentId) || cloud_firestore.Filter.is(field))) dart.assertFailed("Supported [field] types are [String], [FieldPath], and [Filter].", I[41], 354, 7, "field is String ||\n          field is FieldPath ||\n          field == FieldPath.documentId ||\n          field is Filter");
    }
    endAtDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].endAtDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    endAt(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].endAt(values[S$.$toList]()));
    }
    endBeforeDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].endBeforeDocument(core.Iterable.as(results[S$.$_get]("orders")), core.Iterable.as(results[S$.$_get]("values"))));
    }
    endBefore(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].endBefore(values[S$.$toList]()));
    }
    get(options = null) {
      return async.async(T$.QuerySnapshotOfMapOfString$dynamic(), (function* get() {
        let t73;
        let snapshotDelegate = (yield this[S$._delegate$4].get((t73 = options, t73 == null ? C[5] || CT.C5 : t73)));
        return new cloud_firestore._JsonQuerySnapshot.new(this.firestore, snapshotDelegate);
      }).bind(this));
    }
    limit(limit) {
      if (!(limit > 0)) dart.assertFailed("limit must be a positive number greater than 0", I[41], 444, 12, "limit > 0");
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].limit(limit));
    }
    limitToLast(limit) {
      if (!(limit > 0)) dart.assertFailed("limit must be a positive number greater than 0", I[41], 454, 12, "limit > 0");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!orders[S$.$isNotEmpty]) dart.assertFailed("limitToLast() queries require specifying at least one orderBy() clause", I[41], 457, 7, "orders.isNotEmpty");
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].limitToLast(limit));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      return this[S$._delegate$4].snapshots({includeMetadataChanges: includeMetadataChanges}).map(T$.QuerySnapshotOfMapOfString$dynamic(), dart.fn(item => new cloud_firestore._JsonQuerySnapshot.new(this.firestore, item), T$.QuerySnapshotPlatformTo_JsonQuerySnapshot()));
    }
    orderBy(field, opts) {
      let descending = opts && 'descending' in opts ? opts.descending : false;
      this[S$._assertValidFieldType](field);
      if (!!this[S$._hasStartCursor]()) dart.assertFailed("Invalid query. " + "You must not call startAt(), startAtDocument(), " + "startAfter() or startAfterDocument() before calling orderBy()", I[41], 491, 7, "!_hasStartCursor()");
      if (!!this[S$._hasEndCursor]()) dart.assertFailed("Invalid query. " + "You must not call endAt(), endAtDocument(), " + "endBefore() or endBeforeDocument() before calling orderBy()", I[41], 497, 7, "!_hasEndCursor()");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!orders[S$.$where](dart.fn(item => field[S$.$_equals](item[S$.$_get](0)), T$.ListTobool()))[S$.$isEmpty]) dart.assertFailed("OrderBy field \"" + dart.str(field) + "\" already exists in this query", I[41], 507, 7, "orders.where((List<dynamic> item) => field == item[0]).isEmpty");
      if (field[S$.$_equals](field_path.FieldPath.documentId)) {
        orders[S$.$add]([field, descending]);
      } else {
        let fieldPath = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field_path.FieldPath.as(field);
        orders[S$.$add]([fieldPath, descending]);
      }
      let conditions = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("where")));
      if (conditions[S$.$isNotEmpty]) {
        for (let condition of conditions) {
          let conditionField = dart.dsend(condition, '_get', [0]);
          let operator = core.String.as(dart.dsend(condition, '_get', [1]));
          if (this[S$._isInequality](operator) || this.isNotIn(operator)) {
            if (!dart.equals(conditionField, orders[S$.$_get](0)[S$.$_get](0))) dart.assertFailed("The initial orderBy() field \"" + dart.str(orders) + "[0][0]\" has to be the same as " + "the where() field parameter \"" + dart.str(conditionField) + "\" when an inequality operator is invoked.", I[41], 531, 13, "conditionField == orders[0][0]");
          }
          for (let order of orders) {
            let orderField = dart.dsend(order, '_get', [0]);
            if (operator === "==") {
              if (!!dart.equals(conditionField, orderField)) dart.assertFailed("The '" + dart.str(orderField) + "' cannot be the same as your where() field parameter '" + dart.str(conditionField) + "'.", I[41], 544, 15, "conditionField != orderField");
            }
            if (dart.equals(conditionField, field_path.FieldPath.documentId)) {
              if (!dart.equals(orderField, field_path.FieldPath.documentId)) dart.assertFailed("'[FieldPath.documentId]' cannot be used in conjunction with a different orderBy() parameter.", I[41], 551, 15, "orderField == FieldPath.documentId");
            }
          }
        }
      }
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].orderBy(orders));
    }
    startAfterDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].startAfterDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    startAfter(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].startAfter(values[S$.$toList]()));
    }
    startAtDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].startAtDocument(core.Iterable.as(results[S$.$_get]("orders")), core.Iterable.as(results[S$.$_get]("values"))));
    }
    startAt(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].startAt(values[S$.$toList]()));
    }
    where(fieldOrFilter, opts) {
      let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : C[8] || CT.C8;
      let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : C[8] || CT.C8;
      let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
      let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
      let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
      let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
      let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
      let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
      let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
      let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
      let isNull = opts && 'isNull' in opts ? opts.isNull : null;
      this[S$._assertValidFieldType](fieldOrFilter);
      if (cloud_firestore.Filter.is(fieldOrFilter)) {
        if (!(isEqualTo === cloud_firestore.notSetQueryParam && isNotEqualTo === cloud_firestore.notSetQueryParam && isLessThan == null && isLessThanOrEqualTo == null && isGreaterThan == null && isGreaterThanOrEqualTo == null && arrayContains == null && arrayContainsAny == null && whereIn == null && whereNotIn == null && isNull == null)) dart.assertFailed("Conditions cannot be used with a Filter. Use a single Filter instead, or use a String or a FieldPath as the first parameter.", I[41], 653, 9, "identical(isEqualTo, notSetQueryParam) &&\n            identical(isNotEqualTo, notSetQueryParam) &&\n            isLessThan == null &&\n            isLessThanOrEqualTo == null &&\n            isGreaterThan == null &&\n            isGreaterThanOrEqualTo == null &&\n            arrayContains == null &&\n            arrayContainsAny == null &&\n            whereIn == null &&\n            whereNotIn == null &&\n            isNull == null");
        return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].whereFilter(fieldOrFilter));
      }
      let field = fieldOrFilter;
      let equality = C[21] || CT.C21;
      let conditions = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("where")));
      function addCondition(field, operator, value) {
        let condition = null;
        let codecValue = cloud_firestore._CodecUtility.valueEncode(value);
        if (dart.equals(field, field_path.FieldPath.documentId)) {
          condition = [field, operator, codecValue];
        } else {
          let fieldPath = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field_path.FieldPath.as(field);
          condition = [fieldPath, operator, codecValue];
        }
        if (!conditions[S$.$where](dart.fn(item => equality.equals(condition, item), T$.ListTobool()))[S$.$isEmpty]) dart.assertFailed("Condition " + dart.str(condition) + " already exists in this query.", I[41], 689, 9, "conditions\n            .where((List<dynamic> item) => equality.equals(condition, item))\n            .isEmpty");
        conditions[S$.$add](condition);
      }
      dart.fn(addCondition, T$.dynamicAndStringAnddynamicTovoid());
      if (isEqualTo !== cloud_firestore.notSetQueryParam) {
        addCondition(field, "==", isEqualTo);
      }
      if (isNotEqualTo !== cloud_firestore.notSetQueryParam) {
        addCondition(field, "!=", isNotEqualTo);
      }
      if (isLessThan != null) addCondition(field, "<", isLessThan);
      if (isLessThanOrEqualTo != null) {
        addCondition(field, "<=", isLessThanOrEqualTo);
      }
      if (isGreaterThan != null) addCondition(field, ">", isGreaterThan);
      if (isGreaterThanOrEqualTo != null) {
        addCondition(field, ">=", isGreaterThanOrEqualTo);
      }
      if (arrayContains != null) {
        addCondition(field, "array-contains", arrayContains);
      }
      if (arrayContainsAny != null) {
        addCondition(field, "array-contains-any", arrayContainsAny);
      }
      if (whereIn != null) addCondition(field, "in", whereIn);
      if (whereNotIn != null) addCondition(field, "not-in", whereNotIn);
      if (isNull != null) {
        if (isNull === true) {
          addCondition(field, "==", null);
        } else {
          addCondition(field, "!=", null);
        }
      }
      let hasInequality = null;
      let hasIn = false;
      let hasNotIn = false;
      let hasNotEqualTo = false;
      let hasNotEqualToOperatorAndNotDocumentIdField = false;
      let hasArrayContains = false;
      let hasArrayContainsAny = false;
      let hasDocumentIdField = false;
      for (let condition of conditions) {
        let field = dart.dsend(condition, '_get', [0]);
        let operator = core.String.as(dart.dsend(condition, '_get', [1]));
        let value = dart.dsend(condition, '_get', [2]);
        let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
        if (this[S$._isInequality](operator) && orders[S$.$isNotEmpty]) {
          if (!dart.equals(field, orders[S$.$_get](0)[S$.$_get](0))) dart.assertFailed("The initial orderBy() field '" + dart.str(orders) + "[0][0]' has to be the same as " + "the where() field parameter '" + dart.str(field) + "' when an inequality operator is invoked.", I[41], 748, 11, "field == orders[0][0]");
        }
        if (!dart.equals(field, field_path.FieldPath.documentId) && hasDocumentIdField) {
          if (!(operator !== "!=")) dart.assertFailed("You cannot use '!=' filters whilst using a FieldPath.documentId field in another filter.", I[41], 756, 11, "operator != '!='");
        }
        if (dart.equals(field, field_path.FieldPath.documentId)) {
          if (!!hasNotEqualToOperatorAndNotDocumentIdField) dart.assertFailed("You cannot use FieldPath.documentId field whilst using a '!=' filter on a different field.", I[41], 763, 11, "!hasNotEqualToOperatorAndNotDocumentIdField");
          hasDocumentIdField = true;
        }
        if (operator === "in" || operator === "array-contains-any" || this.isNotIn(operator)) {
          if (!core.Iterable.is(value)) dart.assertFailed("A non-empty [Iterable] is required for '" + operator + "' filters.", I[41], 773, 11, "value is Iterable");
          if (!(operator === "in" || operator === "array-contains-any" || core.Iterable.as(value)[S$.$length] <= 10)) dart.assertFailed("'" + operator + "' filters support a maximum of 10 elements in the value [Iterable].", I[41], 778, 11, "(operator == 'in' || operator == 'array-contains-any') ||\n              (value as Iterable).length <= 10");
          if (!(operator !== "in" && operator !== "array-contains-any" || core.Iterable.as(value)[S$.$length] <= 30)) dart.assertFailed("'" + operator + "' filters support a maximum of 30 elements in the value [Iterable].", I[41], 784, 11, "(operator != 'in' && operator != 'array-contains-any') ||\n              (value as Iterable).length <= 30");
          if (!core.Iterable.as(value)[S$.$isNotEmpty]) dart.assertFailed("'" + operator + "' filters require a non-empty [Iterable].", I[41], 789, 11, "(value as Iterable).isNotEmpty");
          if (!core.Iterable.as(value)[S$.$where](dart.fn(value => value == null, T$.dynamicTobool()))[S$.$isEmpty]) dart.assertFailed("'" + operator + "' filters cannot contain 'null' in the [Iterable].", I[41], 793, 11, "(value as Iterable).where((value) => value == null).isEmpty");
        }
        if (operator === "!=") {
          if (!!hasNotEqualTo) dart.assertFailed("You cannot use '!=' filters more than once.", I[41], 799, 16, "!hasNotEqualTo");
          if (!!hasNotIn) dart.assertFailed("You cannot use '!=' filters with 'not-in' filters.", I[41], 800, 16, "!hasNotIn");
          hasNotEqualTo = true;
          if (!dart.equals(field, field_path.FieldPath.documentId)) {
            hasNotEqualToOperatorAndNotDocumentIdField = true;
          }
        }
        if (this.isNotIn(operator)) {
          if (!!hasNotIn) dart.assertFailed("You cannot use 'not-in' filters more than once.", I[41], 810, 16, "!hasNotIn");
          if (!!hasNotEqualTo) dart.assertFailed("You cannot use 'not-in' filters with '!=' filters.", I[41], 812, 11, "!hasNotEqualTo");
        }
        if (operator === "in") {
          if (!!hasIn) dart.assertFailed("You cannot use 'whereIn' filters more than once.", I[41], 818, 16, "!hasIn");
          hasIn = true;
        }
        if (operator === "array-contains") {
          if (!!hasArrayContains) dart.assertFailed("You cannot use 'array-contains' filters more than once.", I[41], 824, 11, "!hasArrayContains");
          hasArrayContains = true;
        }
        if (operator === "array-contains-any") {
          if (!!hasArrayContainsAny) dart.assertFailed("You cannot use 'array-contains-any' filters more than once.", I[41], 832, 11, "!hasArrayContainsAny");
          hasArrayContainsAny = true;
        }
        if (operator === "array-contains" || operator === "array-contains-any") {
          if (!!(hasArrayContains && hasArrayContainsAny)) dart.assertFailed("You cannot use both 'array-contains-any' or 'array-contains' filters together.", I[41], 840, 11, "!(hasArrayContains && hasArrayContainsAny)");
        }
        if (this[S$._isInequality](operator)) {
          if (hasInequality == null) {
            hasInequality = field;
          } else {
            if (!dart.equals(hasInequality, field)) dart.assertFailed("All where filters with an inequality (<, <=, >, or >=) must be " + "on the same field. But you have inequality filters on '" + dart.str(hasInequality) + "' and '" + dart.str(field) + "'.", I[41], 850, 13, "hasInequality == field");
          }
        }
      }
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate$4].where(conditions));
    }
    withConverter(R, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterQuery$(R)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && cloud_firestore._JsonQuery.is(other) && other.firestore._equals(this.firestore) && other[S$._delegate$4][S$.$_equals](this[S$._delegate$4]);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S$._delegate$4]);
    }
    count() {
      return new cloud_firestore.AggregateQuery.__(this[S$._delegate$4].count(), this);
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      return new cloud_firestore.AggregateQuery.__(this[S$._delegate$4].aggregate(aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30), this);
    }
  };
  (cloud_firestore._JsonQuery.new = function(firestore, _delegate) {
    this.firestore = firestore;
    this[S$._delegate$5] = _delegate;
    platform_interface_query.QueryPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore._JsonQuery.prototype;
  dart.addTypeTests(cloud_firestore._JsonQuery);
  dart.addTypeCaches(cloud_firestore._JsonQuery);
  cloud_firestore._JsonQuery[dart.implements] = () => [cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonQuery.__proto__),
    [S$._hasStartCursor]: dart.fnType(core.bool, []),
    [S$._hasEndCursor]: dart.fnType(core.bool, []),
    [S$._isInequality]: dart.fnType(core.bool, [core.String]),
    isNotIn: dart.fnType(core.bool, [core.String]),
    [S$._assertQueryCursorSnapshot]: dart.fnType(core.Map$(core.String, dart.dynamic), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    [S$._assertQueryCursorValues]: dart.fnType(core.Iterable, [core.Iterable$(dart.nullable(core.Object))]),
    [S$._assertValidFieldType]: dart.fnType(dart.void, [core.Object]),
    endAtDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    endAt: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    endBeforeDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    endBefore: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    get: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [], [dart.nullable(get_options.GetOptions)]),
    limit: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.int]),
    limitToLast: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.int]),
    snapshots: dart.fnType(async.Stream$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [], {includeMetadataChanges: core.bool}, {}),
    orderBy: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Object], {descending: core.bool}, {}),
    startAfterDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    startAfter: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    startAtDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    startAt: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    where: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Object], {arrayContains: dart.nullable(core.Object), arrayContainsAny: dart.nullable(core.Iterable$(dart.nullable(core.Object))), isEqualTo: dart.nullable(core.Object), isGreaterThan: dart.nullable(core.Object), isGreaterThanOrEqualTo: dart.nullable(core.Object), isLessThan: dart.nullable(core.Object), isLessThanOrEqualTo: dart.nullable(core.Object), isNotEqualTo: dart.nullable(core.Object), isNull: dart.nullable(core.bool), whereIn: dart.nullable(core.Iterable$(dart.nullable(core.Object))), whereNotIn: dart.nullable(core.Iterable$(dart.nullable(core.Object)))}, {}),
    withConverter: dart.gFnType(R => [cloud_firestore.Query$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)]),
    count: dart.fnType(cloud_firestore.AggregateQuery, []),
    aggregate: dart.fnType(cloud_firestore.AggregateQuery, [platform_interface_query.AggregateField], [dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonQuery.__proto__),
    parameters: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(cloud_firestore._JsonQuery, I[39]);
  dart.setFieldSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonQuery.__proto__),
    firestore: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_query.QueryPlatform)
  }));
  dart.defineExtensionMethods(cloud_firestore._JsonQuery, ['_equals']);
  dart.defineExtensionAccessors(cloud_firestore._JsonQuery, ['hashCode']);
  cloud_firestore._JsonCollectionReference = class _JsonCollectionReference extends cloud_firestore._JsonQuery {
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonCollectionReference.new(firestore, _delegate);
    }
    get [S$._delegate$4]() {
      return platform_interface_collection_reference.CollectionReferencePlatform.as(super[S$._delegate$4]);
    }
    get id() {
      return this[S$._delegate$4].id;
    }
    get parent() {
      let _documentReferencePlatform = this[S$._delegate$4].parent;
      if (_documentReferencePlatform == null) {
        return null;
      }
      return new cloud_firestore._JsonDocumentReference.new(this.firestore, _documentReferencePlatform);
    }
    get path() {
      return this[S$._delegate$4].path;
    }
    add(data) {
      T$.MapOfString$dynamic().as(data);
      return async.async(T$.DocumentReferenceOfMapOfString$dynamic(), (function* add() {
        let newDocument = this.doc();
        yield newDocument.set(data);
        return newDocument;
      }).bind(this));
    }
    doc(path = null) {
      if (path != null) {
        if (!path[S$.$isNotEmpty]) dart.assertFailed("a document path must be a non-empty string", I[40], 116, 14, "path.isNotEmpty");
        if (!!path[S$.$contains]("//")) dart.assertFailed("a document path must not contain \"//\"", I[40], 117, 14, "!path.contains('//')");
        if (!(path !== "/")) dart.assertFailed("a document path must point to a valid document", I[40], 118, 14, "path != '/'");
      }
      return new cloud_firestore._JsonDocumentReference.new(this.firestore, this[S$._delegate$4].doc(path));
    }
    withConverter(R, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterCollectionReference$(R)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore._JsonCollectionReference.is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return core.Object.hash(this.firestore, this.path);
    }
    toString() {
      return "CollectionReference<Map<String, dynamic>>(" + this.path + ")";
    }
  };
  (cloud_firestore._JsonCollectionReference.new = function(firestore, _delegate) {
    cloud_firestore._JsonCollectionReference.__proto__.new.call(this, firestore, _delegate);
    ;
  }).prototype = cloud_firestore._JsonCollectionReference.prototype;
  dart.addTypeTests(cloud_firestore._JsonCollectionReference);
  dart.addTypeCaches(cloud_firestore._JsonCollectionReference);
  cloud_firestore._JsonCollectionReference[dart.implements] = () => [cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonCollectionReference, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonCollectionReference.__proto__),
    add: dart.fnType(async.Future$(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))), [dart.nullable(core.Object)]),
    doc: dart.fnType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)), [], [dart.nullable(core.String)]),
    withConverter: dart.gFnType(R => [cloud_firestore.CollectionReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonCollectionReference, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonCollectionReference.__proto__),
    [S$._delegate$4]: platform_interface_collection_reference.CollectionReferencePlatform,
    id: core.String,
    parent: dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
    path: core.String
  }));
  dart.setLibraryUri(cloud_firestore._JsonCollectionReference, I[39]);
  dart.defineExtensionMethods(cloud_firestore._JsonCollectionReference, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore._JsonCollectionReference, ['hashCode']);
  const _is__WithConverterQuery_default = Symbol('_is__WithConverterQuery_default');
  cloud_firestore._WithConverterQuery$ = dart.generic(T => {
    var __t$_WithConverterQueryOfT = () => (__t$_WithConverterQueryOfT = dart.constFn(cloud_firestore._WithConverterQuery$(T)))();
    var __t$_WithConverterQuerySnapshotOfT = () => (__t$_WithConverterQuerySnapshotOfT = dart.constFn(cloud_firestore._WithConverterQuerySnapshot$(T)))();
    var __t$QuerySnapshotOfT = () => (__t$QuerySnapshotOfT = dart.constFn(cloud_firestore.QuerySnapshot$(T)))();
    var __t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT = () => (__t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT = dart.constFn(dart.fnType(__t$_WithConverterQuerySnapshotOfT(), [T$.QuerySnapshotOfMapOfString$dynamic()])))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterQuery extends core.Object {
      static ['_#new#tearOff'](T, _originalQuery, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterQuery$(T)).new(_originalQuery, _fromFirestore, _toFirestore);
      }
      get firestore() {
        return this[S$._originalQuery].firestore;
      }
      get parameters() {
        return this[S$._originalQuery].parameters;
      }
      [S$._mapQuery](newOriginalQuery) {
        return new (__t$_WithConverterQueryOfT()).new(newOriginalQuery, this[S$._fromFirestore], this[S$._toFirestore]);
      }
      get(options = null) {
        return async.async(__t$QuerySnapshotOfT(), (function* get() {
          let snapshot = (yield this[S$._originalQuery].get(options));
          return new (__t$_WithConverterQuerySnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]);
        }).bind(this));
      }
      snapshots(opts) {
        let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
        return this[S$._originalQuery].snapshots({includeMetadataChanges: includeMetadataChanges}).map(__t$QuerySnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterQuerySnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]), __t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT()));
      }
      endAt(values) {
        return this[S$._mapQuery](this[S$._originalQuery].endAt(values));
      }
      endAtDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].endAtDocument(documentSnapshot));
      }
      endBefore(values) {
        return this[S$._mapQuery](this[S$._originalQuery].endBefore(values));
      }
      endBeforeDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].endBeforeDocument(documentSnapshot));
      }
      limit(limit) {
        return this[S$._mapQuery](this[S$._originalQuery].limit(limit));
      }
      limitToLast(limit) {
        return this[S$._mapQuery](this[S$._originalQuery].limitToLast(limit));
      }
      orderBy(field, opts) {
        let descending = opts && 'descending' in opts ? opts.descending : false;
        return this[S$._mapQuery](this[S$._originalQuery].orderBy(field, {descending: descending}));
      }
      startAfter(values) {
        return this[S$._mapQuery](this[S$._originalQuery].startAfter(values));
      }
      startAfterDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].startAfterDocument(documentSnapshot));
      }
      startAt(values) {
        return this[S$._mapQuery](this[S$._originalQuery].startAt(values));
      }
      startAtDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].startAtDocument(documentSnapshot));
      }
      where(field, opts) {
        let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : C[8] || CT.C8;
        let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : C[8] || CT.C8;
        let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
        let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
        let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
        let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
        let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
        let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
        let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
        let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
        let isNull = opts && 'isNull' in opts ? opts.isNull : null;
        return this[S$._mapQuery](this[S$._originalQuery].where(field, {isEqualTo: isEqualTo, isNotEqualTo: isNotEqualTo, isLessThan: isLessThan, isLessThanOrEqualTo: isLessThanOrEqualTo, isGreaterThan: isGreaterThan, isGreaterThanOrEqualTo: isGreaterThanOrEqualTo, arrayContains: arrayContains, arrayContainsAny: arrayContainsAny, whereIn: whereIn, whereNotIn: whereNotIn, isNull: isNull}));
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterQuery$(R)).new(this[S$._originalQuery], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && __t$_WithConverterQueryOfT().is(other) && other[S$._fromFirestore][S$.$_equals](this[S$._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$._toFirestore])[S$.$_equals](this[S$._toFirestore]) && other[S$._originalQuery][S$.$_equals](this[S$._originalQuery]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$._fromFirestore], this[S$._toFirestore], this[S$._originalQuery]);
      }
      count() {
        return this[S$._originalQuery].count();
      }
      aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
        return this[S$._originalQuery].aggregate(aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30);
      }
    }
    (_WithConverterQuery.new = function(_originalQuery, _fromFirestore, _toFirestore) {
      this[S$._originalQuery] = _originalQuery;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterQuery.prototype;
    dart.addTypeTests(_WithConverterQuery);
    _WithConverterQuery.prototype[_is__WithConverterQuery_default] = true;
    dart.addTypeCaches(_WithConverterQuery);
    _WithConverterQuery[dart.implements] = () => [cloud_firestore.Query$(T)];
    dart.setMethodSignature(_WithConverterQuery, () => ({
      __proto__: dart.getMethods(_WithConverterQuery.__proto__),
      [S$._mapQuery]: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))]),
      get: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(T)), [], [dart.nullable(get_options.GetOptions)]),
      snapshots: dart.fnType(async.Stream$(cloud_firestore.QuerySnapshot$(T)), [], {includeMetadataChanges: core.bool}, {}),
      endAt: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      endAtDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      endBefore: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      endBeforeDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      limit: dart.fnType(cloud_firestore.Query$(T), [core.int]),
      limitToLast: dart.fnType(cloud_firestore.Query$(T), [core.int]),
      orderBy: dart.fnType(cloud_firestore.Query$(T), [core.Object], {descending: core.bool}, {}),
      startAfter: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      startAfterDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      startAt: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      startAtDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      where: dart.fnType(cloud_firestore.Query$(T), [core.Object], {arrayContains: dart.nullable(core.Object), arrayContainsAny: dart.nullable(core.Iterable$(dart.nullable(core.Object))), isEqualTo: dart.nullable(core.Object), isGreaterThan: dart.nullable(core.Object), isGreaterThanOrEqualTo: dart.nullable(core.Object), isLessThan: dart.nullable(core.Object), isLessThanOrEqualTo: dart.nullable(core.Object), isNotEqualTo: dart.nullable(core.Object), isNull: dart.nullable(core.bool), whereIn: dart.nullable(core.Iterable$(dart.nullable(core.Object))), whereNotIn: dart.nullable(core.Iterable$(dart.nullable(core.Object)))}, {}),
      withConverter: dart.gFnType(R => [cloud_firestore.Query$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)]),
      count: dart.fnType(cloud_firestore.AggregateQuery, []),
      aggregate: dart.fnType(cloud_firestore.AggregateQuery, [platform_interface_query.AggregateField], [dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField)])
    }));
    dart.setGetterSignature(_WithConverterQuery, () => ({
      __proto__: dart.getGetters(_WithConverterQuery.__proto__),
      firestore: cloud_firestore.FirebaseFirestore,
      parameters: core.Map$(core.String, dart.dynamic)
    }));
    dart.setLibraryUri(_WithConverterQuery, I[39]);
    dart.setFieldSignature(_WithConverterQuery, () => ({
      __proto__: dart.getFields(_WithConverterQuery.__proto__),
      [S$._originalQuery]: dart.finalFieldType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    dart.defineExtensionMethods(_WithConverterQuery, ['_equals']);
    dart.defineExtensionAccessors(_WithConverterQuery, ['hashCode']);
    return _WithConverterQuery;
  });
  cloud_firestore._WithConverterQuery = cloud_firestore._WithConverterQuery$();
  dart.addTypeTests(cloud_firestore._WithConverterQuery, _is__WithConverterQuery_default);
  const _is__WithConverterCollectionReference_default = Symbol('_is__WithConverterCollectionReference_default');
  cloud_firestore._WithConverterCollectionReference$ = dart.generic(T => {
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    var __t$DocumentReferenceOfT = () => (__t$DocumentReferenceOfT = dart.constFn(cloud_firestore.DocumentReference$(T)))();
    var __t$_WithConverterCollectionReferenceOfT = () => (__t$_WithConverterCollectionReferenceOfT = dart.constFn(cloud_firestore._WithConverterCollectionReference$(T)))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterCollectionReference extends cloud_firestore._WithConverterQuery$(T) {
      static ['_#new#tearOff'](T, collectionReference, fromFirestore, toFirestore) {
        return new (cloud_firestore._WithConverterCollectionReference$(T)).new(collectionReference, fromFirestore, toFirestore);
      }
      get [S$._originalCollectionReferenceQuery]() {
        return T$.CollectionReferenceOfMapOfString$dynamic().as(this[S$._originalQuery]);
      }
      get id() {
        return this[S$._originalCollectionReferenceQuery].id;
      }
      get parent() {
        return this[S$._originalCollectionReferenceQuery].parent;
      }
      get path() {
        return this[S$._originalCollectionReferenceQuery].path;
      }
      add(data) {
        T.as(data);
        return async.async(__t$DocumentReferenceOfT(), (function* add() {
          let t74, t73;
          let snapshot = (yield this[S$._originalCollectionReferenceQuery].add((t73 = data, t74 = null, this[S$._toFirestore](t73, t74))));
          return new (__t$_WithConverterDocumentReferenceOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]);
        }).bind(this));
      }
      doc(path = null) {
        return new (__t$_WithConverterDocumentReferenceOfT()).new(this[S$._originalCollectionReferenceQuery].doc(path), this[S$._fromFirestore], this[S$._toFirestore]);
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterCollectionReference$(R)).new(this[S$._originalCollectionReferenceQuery], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return __t$_WithConverterCollectionReferenceOfT().is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other[S$._originalCollectionReferenceQuery][S$.$_equals](this[S$._originalCollectionReferenceQuery]) && other[S$._fromFirestore][S$.$_equals](this[S$._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$._toFirestore])[S$.$_equals](this[S$._toFirestore]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$._originalCollectionReferenceQuery], this[S$._fromFirestore], this[S$._toFirestore]);
      }
      toString() {
        return "CollectionReference<" + dart.str(dart.wrapType(T)) + ">(" + this.path + ")";
      }
    }
    (_WithConverterCollectionReference.new = function(collectionReference, fromFirestore, toFirestore) {
      _WithConverterCollectionReference.__proto__.new.call(this, collectionReference, fromFirestore, toFirestore);
      ;
    }).prototype = _WithConverterCollectionReference.prototype;
    dart.addTypeTests(_WithConverterCollectionReference);
    _WithConverterCollectionReference.prototype[_is__WithConverterCollectionReference_default] = true;
    dart.addTypeCaches(_WithConverterCollectionReference);
    _WithConverterCollectionReference[dart.implements] = () => [cloud_firestore.CollectionReference$(T)];
    dart.setMethodSignature(_WithConverterCollectionReference, () => ({
      __proto__: dart.getMethods(_WithConverterCollectionReference.__proto__),
      add: dart.fnType(async.Future$(cloud_firestore.DocumentReference$(T)), [dart.nullable(core.Object)]),
      doc: dart.fnType(cloud_firestore.DocumentReference$(T), [], [dart.nullable(core.String)]),
      withConverter: dart.gFnType(R => [cloud_firestore.CollectionReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_WithConverterCollectionReference, () => ({
      __proto__: dart.getGetters(_WithConverterCollectionReference.__proto__),
      [S$._originalCollectionReferenceQuery]: cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)),
      id: core.String,
      parent: dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
      path: core.String
    }));
    dart.setLibraryUri(_WithConverterCollectionReference, I[39]);
    dart.defineExtensionMethods(_WithConverterCollectionReference, ['_equals', 'toString']);
    dart.defineExtensionAccessors(_WithConverterCollectionReference, ['hashCode']);
    return _WithConverterCollectionReference;
  });
  cloud_firestore._WithConverterCollectionReference = cloud_firestore._WithConverterCollectionReference$();
  dart.addTypeTests(cloud_firestore._WithConverterCollectionReference, _is__WithConverterCollectionReference_default);
  const _is_DocumentChange_default = Symbol('_is_DocumentChange_default');
  cloud_firestore.DocumentChange$ = dart.generic(T => {
    class DocumentChange extends core.Object {}
    (DocumentChange.new = function() {
      ;
    }).prototype = DocumentChange.prototype;
    dart.addTypeTests(DocumentChange);
    DocumentChange.prototype[_is_DocumentChange_default] = true;
    dart.addTypeCaches(DocumentChange);
    dart.setLibraryUri(DocumentChange, I[39]);
    return DocumentChange;
  });
  cloud_firestore.DocumentChange = cloud_firestore.DocumentChange$();
  dart.addTypeTests(cloud_firestore.DocumentChange, _is_DocumentChange_default);
  cloud_firestore._JsonDocumentChange = class _JsonDocumentChange extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonDocumentChange.new(_firestore, _delegate);
    }
    get type() {
      return this[S$._delegate$4].type;
    }
    get oldIndex() {
      return this[S$._delegate$4].oldIndex;
    }
    get newIndex() {
      return this[S$._delegate$4].newIndex;
    }
    get doc() {
      return new cloud_firestore._JsonDocumentSnapshot.new(this[S$._firestore], this[S$._delegate$4].document);
    }
  };
  (cloud_firestore._JsonDocumentChange.new = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate$4] = _delegate;
    platform_interface_document_change.DocumentChangePlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore._JsonDocumentChange.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentChange);
  dart.addTypeCaches(cloud_firestore._JsonDocumentChange);
  cloud_firestore._JsonDocumentChange[dart.implements] = () => [cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))];
  dart.setGetterSignature(cloud_firestore._JsonDocumentChange, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentChange.__proto__),
    type: messages$46pigeon$.DocumentChangeType,
    oldIndex: core.int,
    newIndex: core.int,
    doc: cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentChange, I[39]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentChange, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentChange.__proto__),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_document_change.DocumentChangePlatform),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore)
  }));
  const _is__WithConverterDocumentChange_default = Symbol('_is__WithConverterDocumentChange_default');
  cloud_firestore._WithConverterDocumentChange$ = dart.generic(T => {
    var __t$_WithConverterDocumentSnapshotOfT = () => (__t$_WithConverterDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterDocumentSnapshot$(T)))();
    class _WithConverterDocumentChange extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentChange, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentChange$(T)).new(_originalDocumentChange, _fromFirestore, _toFirestore);
      }
      get type() {
        return this[S$._originalDocumentChange].type;
      }
      get oldIndex() {
        return this[S$._originalDocumentChange].oldIndex;
      }
      get newIndex() {
        return this[S$._originalDocumentChange].newIndex;
      }
      get doc() {
        return new (__t$_WithConverterDocumentSnapshotOfT()).new(this[S$._originalDocumentChange].doc, this[S$._fromFirestore], this[S$._toFirestore]);
      }
    }
    (_WithConverterDocumentChange.new = function(_originalDocumentChange, _fromFirestore, _toFirestore) {
      this[S$._originalDocumentChange] = _originalDocumentChange;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentChange.prototype;
    dart.addTypeTests(_WithConverterDocumentChange);
    _WithConverterDocumentChange.prototype[_is__WithConverterDocumentChange_default] = true;
    dart.addTypeCaches(_WithConverterDocumentChange);
    _WithConverterDocumentChange[dart.implements] = () => [cloud_firestore.DocumentChange$(T)];
    dart.setGetterSignature(_WithConverterDocumentChange, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentChange.__proto__),
      type: messages$46pigeon$.DocumentChangeType,
      oldIndex: core.int,
      newIndex: core.int,
      doc: cloud_firestore.DocumentSnapshot$(T)
    }));
    dart.setLibraryUri(_WithConverterDocumentChange, I[39]);
    dart.setFieldSignature(_WithConverterDocumentChange, () => ({
      __proto__: dart.getFields(_WithConverterDocumentChange.__proto__),
      [S$._originalDocumentChange]: dart.finalFieldType(cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterDocumentChange;
  });
  cloud_firestore._WithConverterDocumentChange = cloud_firestore._WithConverterDocumentChange$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentChange, _is__WithConverterDocumentChange_default);
  const _is_DocumentReference_default = Symbol('_is_DocumentReference_default');
  cloud_firestore.DocumentReference$ = dart.generic(T => {
    class DocumentReference extends core.Object {}
    (DocumentReference.new = function() {
      ;
    }).prototype = DocumentReference.prototype;
    dart.addTypeTests(DocumentReference);
    DocumentReference.prototype[_is_DocumentReference_default] = true;
    dart.addTypeCaches(DocumentReference);
    dart.setLibraryUri(DocumentReference, I[39]);
    return DocumentReference;
  });
  cloud_firestore.DocumentReference = cloud_firestore.DocumentReference$();
  dart.addTypeTests(cloud_firestore.DocumentReference, _is_DocumentReference_default);
  cloud_firestore._JsonDocumentReference = class _JsonDocumentReference extends core.Object {
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonDocumentReference.new(firestore, _delegate);
    }
    get id() {
      return this[S$._delegate$4].id;
    }
    get parent() {
      return new cloud_firestore._JsonCollectionReference.new(this.firestore, this[S$._delegate$4].parent);
    }
    get path() {
      return this[S$._delegate$4].path;
    }
    collection(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collectionPath path must be a non-empty string", I[42], 121, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[42], 125, 7, "!collectionPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidCollectionPath(collectionPath)) dart.assertFailed("a collection path must point to a valid collection.", I[42], 129, 7, "isValidCollectionPath(collectionPath)");
      return new cloud_firestore._JsonCollectionReference.new(this.firestore, this[S$._delegate$4].collection(collectionPath));
    }
    delete() {
      return this[S$._delegate$4].delete();
    }
    get(options = null) {
      return async.async(T$.DocumentSnapshotOfMapOfString$dynamic(), (function* get() {
        let t73;
        return new cloud_firestore._JsonDocumentSnapshot.new(this.firestore, yield this[S$._delegate$4].get((t73 = options, t73 == null ? C[5] || CT.C5 : t73)));
      }).bind(this));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      return this[S$._delegate$4].snapshots({includeMetadataChanges: includeMetadataChanges}).map(T$.DocumentSnapshotOfMapOfString$dynamic(), dart.fn(delegateSnapshot => new cloud_firestore._JsonDocumentSnapshot.new(this.firestore, delegateSnapshot), T$.DocumentSnapshotPlatformTo_JsonDocumentSnapshot()));
    }
    set(data, options = null) {
      T$.MapOfString$dynamic().as(data);
      return this[S$._delegate$4].set(dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data)), options);
    }
    update(data) {
      return this[S$._delegate$4].update(dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMapFieldPath(data)));
    }
    withConverter(T, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterDocumentReference$(T)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return T$.DocumentReferenceOfObjectN().is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return core.Object.hash(this.firestore, this.path);
    }
    toString() {
      return "DocumentReference<Map<String, dynamic>>(" + this.path + ")";
    }
  };
  (cloud_firestore._JsonDocumentReference.new = function(firestore, _delegate) {
    this.firestore = firestore;
    this[S$._delegate$4] = _delegate;
    platform_interface_document_reference.DocumentReferencePlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore._JsonDocumentReference.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentReference);
  dart.addTypeCaches(cloud_firestore._JsonDocumentReference);
  cloud_firestore._JsonDocumentReference[dart.implements] = () => [cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonDocumentReference.__proto__),
    collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))), [], [dart.nullable(get_options.GetOptions)]),
    snapshots: dart.fnType(async.Stream$(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))), [], {includeMetadataChanges: core.bool}, {}),
    set: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.Object, dart.nullable(core.Object))]),
    withConverter: dart.gFnType(T => [cloud_firestore.DocumentReference$(T), [], {}, {fromFirestore: dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)])}], T => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentReference.__proto__),
    id: core.String,
    parent: cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)),
    path: core.String
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentReference, I[39]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentReference.__proto__),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_document_reference.DocumentReferencePlatform),
    firestore: dart.finalFieldType(cloud_firestore.FirebaseFirestore)
  }));
  dart.defineExtensionMethods(cloud_firestore._JsonDocumentReference, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore._JsonDocumentReference, ['hashCode']);
  const _is__WithConverterDocumentReference_default = Symbol('_is__WithConverterDocumentReference_default');
  cloud_firestore._WithConverterDocumentReference$ = dart.generic(T => {
    var __t$_WithConverterDocumentSnapshotOfT = () => (__t$_WithConverterDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterDocumentSnapshot$(T)))();
    var __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT = () => (__t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT = dart.constFn(dart.fnType(__t$_WithConverterDocumentSnapshotOfT(), [T$.DocumentSnapshotOfMapOfString$dynamic()])))();
    var __t$_WithConverterCollectionReferenceOfT = () => (__t$_WithConverterCollectionReferenceOfT = dart.constFn(cloud_firestore._WithConverterCollectionReference$(T)))();
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterDocumentReference extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentReference, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentReference$(T)).new(_originalDocumentReference, _fromFirestore, _toFirestore);
      }
      collection(collectionPath) {
        return this[S$._originalDocumentReference].collection(collectionPath);
      }
      delete() {
        return this[S$._originalDocumentReference].delete();
      }
      get(options = null) {
        return this[S$._originalDocumentReference].get(options).then(__t$_WithConverterDocumentSnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterDocumentSnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]), __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT()));
      }
      get [S$._delegate$4]() {
        return this[S$._originalDocumentReference][S$._delegate$4];
      }
      get firestore() {
        return this[S$._originalDocumentReference].firestore;
      }
      get id() {
        return this[S$._originalDocumentReference].id;
      }
      get parent() {
        return new (__t$_WithConverterCollectionReferenceOfT()).new(this[S$._originalDocumentReference].parent, this[S$._fromFirestore], this[S$._toFirestore]);
      }
      get path() {
        return this[S$._originalDocumentReference].path;
      }
      set(data, options = null) {
        let t74, t73;
        T.as(data);
        return this[S$._originalDocumentReference].set((t73 = data, t74 = options, this[S$._toFirestore](t73, t74)), options);
      }
      snapshots(opts) {
        let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
        return this[S$._originalDocumentReference].snapshots({includeMetadataChanges: includeMetadataChanges}).map(__t$_WithConverterDocumentSnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterDocumentSnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]), __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT()));
      }
      update(data) {
        return this[S$._originalDocumentReference].update(data);
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterDocumentReference$(R)).new(this[S$._originalDocumentReference], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return __t$_WithConverterDocumentReferenceOfT().is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other[S$._originalDocumentReference][S$.$_equals](this[S$._originalDocumentReference]) && other[S$._fromFirestore][S$.$_equals](this[S$._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$._toFirestore])[S$.$_equals](this[S$._toFirestore]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$._originalDocumentReference], this[S$._fromFirestore], this[S$._toFirestore]);
      }
      toString() {
        return "DocumentReference<" + dart.str(dart.wrapType(T)) + ">(" + this.path + ")";
      }
    }
    (_WithConverterDocumentReference.new = function(_originalDocumentReference, _fromFirestore, _toFirestore) {
      this[S$._originalDocumentReference] = _originalDocumentReference;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentReference.prototype;
    dart.addTypeTests(_WithConverterDocumentReference);
    _WithConverterDocumentReference.prototype[_is__WithConverterDocumentReference_default] = true;
    dart.addTypeCaches(_WithConverterDocumentReference);
    _WithConverterDocumentReference[dart.implements] = () => [cloud_firestore.DocumentReference$(T)];
    dart.setMethodSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getMethods(_WithConverterDocumentReference.__proto__),
      collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
      delete: dart.fnType(async.Future$(dart.void), []),
      get: dart.fnType(async.Future$(cloud_firestore._WithConverterDocumentSnapshot$(T)), [], [dart.nullable(get_options.GetOptions)]),
      set: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)], [dart.nullable(set_options.SetOptions)]),
      snapshots: dart.fnType(async.Stream$(cloud_firestore._WithConverterDocumentSnapshot$(T)), [], {includeMetadataChanges: core.bool}, {}),
      update: dart.fnType(async.Future$(dart.void), [core.Map$(core.Object, dart.nullable(core.Object))]),
      withConverter: dart.gFnType(R => [cloud_firestore.DocumentReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentReference.__proto__),
      [S$._delegate$4]: platform_interface_document_reference.DocumentReferencePlatform,
      firestore: cloud_firestore.FirebaseFirestore,
      id: core.String,
      parent: cloud_firestore.CollectionReference$(T),
      path: core.String
    }));
    dart.setLibraryUri(_WithConverterDocumentReference, I[39]);
    dart.setFieldSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getFields(_WithConverterDocumentReference.__proto__),
      [S$._originalDocumentReference]: dart.finalFieldType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    dart.defineExtensionMethods(_WithConverterDocumentReference, ['_equals', 'toString']);
    dart.defineExtensionAccessors(_WithConverterDocumentReference, ['hashCode']);
    return _WithConverterDocumentReference;
  });
  cloud_firestore._WithConverterDocumentReference = cloud_firestore._WithConverterDocumentReference$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentReference, _is__WithConverterDocumentReference_default);
  cloud_firestore.SnapshotOptions = class SnapshotOptions extends core.Object {
    static ['_#new#tearOff']() {
      return new cloud_firestore.SnapshotOptions.new();
    }
  };
  (cloud_firestore.SnapshotOptions.new = function() {
    ;
  }).prototype = cloud_firestore.SnapshotOptions.prototype;
  dart.addTypeTests(cloud_firestore.SnapshotOptions);
  dart.addTypeCaches(cloud_firestore.SnapshotOptions);
  dart.setLibraryUri(cloud_firestore.SnapshotOptions, I[39]);
  const _is_DocumentSnapshot_default = Symbol('_is_DocumentSnapshot_default');
  cloud_firestore.DocumentSnapshot$ = dart.generic(T => {
    class DocumentSnapshot extends core.Object {}
    (DocumentSnapshot.new = function() {
      ;
    }).prototype = DocumentSnapshot.prototype;
    dart.addTypeTests(DocumentSnapshot);
    DocumentSnapshot.prototype[_is_DocumentSnapshot_default] = true;
    dart.addTypeCaches(DocumentSnapshot);
    dart.setLibraryUri(DocumentSnapshot, I[39]);
    return DocumentSnapshot;
  });
  cloud_firestore.DocumentSnapshot = cloud_firestore.DocumentSnapshot$();
  dart.addTypeTests(cloud_firestore.DocumentSnapshot, _is_DocumentSnapshot_default);
  cloud_firestore._JsonDocumentSnapshot = class _JsonDocumentSnapshot extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonDocumentSnapshot.new(_firestore, _delegate);
    }
    get id() {
      return this[S$._delegate$4].id;
    }
    get reference() {
      let t74, t73;
      t73 = this[S$.___JsonDocumentSnapshot_reference];
      return t73 == null ? (t74 = this[S$._firestore].doc(this[S$._delegate$4].reference.path), this[S$.___JsonDocumentSnapshot_reference] == null ? this[S$.___JsonDocumentSnapshot_reference] = t74 : dart.throw(new _internal.LateError.fieldADI("reference"))) : t73;
    }
    get metadata() {
      let t74, t73;
      t73 = this[S$.___JsonDocumentSnapshot_metadata];
      return t73 == null ? (t74 = new cloud_firestore.SnapshotMetadata.__(this[S$._delegate$4].metadata), this[S$.___JsonDocumentSnapshot_metadata] == null ? this[S$.___JsonDocumentSnapshot_metadata] = t74 : dart.throw(new _internal.LateError.fieldADI("metadata"))) : t73;
    }
    get exists() {
      return this[S$._delegate$4].exists;
    }
    data() {
      return cloud_firestore._CodecUtility.replaceDelegatesWithValueInMap(this[S$._delegate$4].data(), this[S$._firestore]);
    }
    get(field) {
      return cloud_firestore._CodecUtility.valueDecode(this[S$._delegate$4].get(field), this[S$._firestore]);
    }
    _get(field) {
      return this.get(field);
    }
  };
  (cloud_firestore._JsonDocumentSnapshot.new = function(_firestore, _delegate) {
    this[S$.___JsonDocumentSnapshot_reference] = null;
    this[S$.___JsonDocumentSnapshot_metadata] = null;
    this[S$._firestore] = _firestore;
    this[S$._delegate$4] = _delegate;
    platform_interface_document_snapshot.DocumentSnapshotPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore._JsonDocumentSnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentSnapshot);
  dart.addTypeCaches(cloud_firestore._JsonDocumentSnapshot);
  cloud_firestore._JsonDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonDocumentSnapshot.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), []),
    get: dart.fnType(dart.dynamic, [core.Object]),
    _get: dart.fnType(dart.dynamic, [core.Object])
  }));
  dart.setGetterSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentSnapshot.__proto__),
    id: core.String,
    reference: cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)),
    metadata: cloud_firestore.SnapshotMetadata,
    exists: core.bool
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentSnapshot, I[39]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentSnapshot.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_document_snapshot.DocumentSnapshotPlatform),
    [S$.___JsonDocumentSnapshot_reference]: dart.fieldType(dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)))),
    [S$.___JsonDocumentSnapshot_metadata]: dart.fieldType(dart.nullable(cloud_firestore.SnapshotMetadata))
  }));
  const _is__WithConverterDocumentSnapshot_default = Symbol('_is__WithConverterDocumentSnapshot_default');
  cloud_firestore._WithConverterDocumentSnapshot$ = dart.generic(T => {
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    class _WithConverterDocumentSnapshot extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentSnapshot, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentSnapshot$(T)).new(_originalDocumentSnapshot, _fromFirestore, _toFirestore);
      }
      data() {
        let t74, t73;
        if (!this[S$._originalDocumentSnapshot].exists) return null;
        t73 = this[S$._originalDocumentSnapshot];
        t74 = null;
        return this[S$._fromFirestore](t73, t74);
      }
      get exists() {
        return this[S$._originalDocumentSnapshot].exists;
      }
      get id() {
        return this[S$._originalDocumentSnapshot].id;
      }
      get metadata() {
        return this[S$._originalDocumentSnapshot].metadata;
      }
      get reference() {
        return new (__t$_WithConverterDocumentReferenceOfT()).new(this[S$._originalDocumentSnapshot].reference, this[S$._fromFirestore], this[S$._toFirestore]);
      }
      get(field) {
        return this[S$._originalDocumentSnapshot].get(field);
      }
      _get(field) {
        return this[S$._originalDocumentSnapshot]._get(field);
      }
    }
    (_WithConverterDocumentSnapshot.new = function(_originalDocumentSnapshot, _fromFirestore, _toFirestore) {
      this[S$._originalDocumentSnapshot] = _originalDocumentSnapshot;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentSnapshot.prototype;
    dart.addTypeTests(_WithConverterDocumentSnapshot);
    _WithConverterDocumentSnapshot.prototype[_is__WithConverterDocumentSnapshot_default] = true;
    dart.addTypeCaches(_WithConverterDocumentSnapshot);
    _WithConverterDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(T)];
    dart.setMethodSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getMethods(_WithConverterDocumentSnapshot.__proto__),
      data: dart.fnType(dart.nullable(T), []),
      get: dart.fnType(dart.dynamic, [core.Object]),
      _get: dart.fnType(dart.dynamic, [core.Object])
    }));
    dart.setGetterSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentSnapshot.__proto__),
      exists: core.bool,
      id: core.String,
      metadata: cloud_firestore.SnapshotMetadata,
      reference: cloud_firestore.DocumentReference$(T)
    }));
    dart.setLibraryUri(_WithConverterDocumentSnapshot, I[39]);
    dart.setFieldSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getFields(_WithConverterDocumentSnapshot.__proto__),
      [S$._originalDocumentSnapshot]: dart.finalFieldType(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterDocumentSnapshot;
  });
  cloud_firestore._WithConverterDocumentSnapshot = cloud_firestore._WithConverterDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentSnapshot, _is__WithConverterDocumentSnapshot_default);
  platform_interface_field_value.FieldValuePlatform = class FieldValuePlatform extends core.Object {
    static ['_#new#tearOff'](_delegate) {
      return new platform_interface_field_value.FieldValuePlatform.new(_delegate);
    }
    static getDelegate(fieldValue) {
      return fieldValue[S$._delegate$6];
    }
  };
  (platform_interface_field_value.FieldValuePlatform.new = function(_delegate) {
    this[S$._delegate$6] = _delegate;
    ;
  }).prototype = platform_interface_field_value.FieldValuePlatform.prototype;
  dart.addTypeTests(platform_interface_field_value.FieldValuePlatform);
  dart.addTypeCaches(platform_interface_field_value.FieldValuePlatform);
  dart.setStaticMethodSignature(platform_interface_field_value.FieldValuePlatform, () => ['getDelegate']);
  dart.setLibraryUri(platform_interface_field_value.FieldValuePlatform, I[43]);
  dart.setFieldSignature(platform_interface_field_value.FieldValuePlatform, () => ({
    __proto__: dart.getFields(platform_interface_field_value.FieldValuePlatform.__proto__),
    [S$._delegate$6]: dart.finalFieldType(dart.dynamic)
  }));
  cloud_firestore.FieldValue = class FieldValue extends platform_interface_field_value.FieldValuePlatform {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.FieldValue.__(_delegate);
    }
    static arrayUnion(elements) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.arrayUnion(core.List.as(cloud_firestore._CodecUtility.valueEncode(elements))));
    }
    static arrayRemove(elements) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.arrayRemove(core.List.as(cloud_firestore._CodecUtility.valueEncode(elements))));
    }
    static delete() {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.delete());
    }
    static serverTimestamp() {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.serverTimestamp());
    }
    static increment(value) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.increment(value));
    }
    toString() {
      return dart.str(dart.wrapType(cloud_firestore.FieldValue)) + "(" + dart.str(this[S$._delegate$4]) + ")";
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore.FieldValue.is(other) && dart.equals(other[S$._delegate$4], this[S$._delegate$4]);
    }
    get hashCode() {
      return dart.hashCode(this[S$._delegate$4]);
    }
  };
  (cloud_firestore.FieldValue.__ = function(_delegate) {
    this[S$._delegate$4] = _delegate;
    cloud_firestore.FieldValue.__proto__.new.call(this, _delegate);
    ;
  }).prototype = cloud_firestore.FieldValue.prototype;
  dart.addTypeTests(cloud_firestore.FieldValue);
  dart.addTypeCaches(cloud_firestore.FieldValue);
  dart.setStaticMethodSignature(cloud_firestore.FieldValue, () => ['arrayUnion', 'arrayRemove', 'delete', 'serverTimestamp', 'increment']);
  dart.setLibraryUri(cloud_firestore.FieldValue, I[39]);
  dart.setFieldSignature(cloud_firestore.FieldValue, () => ({
    __proto__: dart.getFields(cloud_firestore.FieldValue.__proto__),
    [S$._delegate$4]: dart.fieldType(dart.dynamic)
  }));
  dart.setStaticFieldSignature(cloud_firestore.FieldValue, () => ['_factory']);
  dart.defineExtensionMethods(cloud_firestore.FieldValue, ['toString', '_equals']);
  dart.defineExtensionAccessors(cloud_firestore.FieldValue, ['hashCode']);
  dart.defineLazy(cloud_firestore.FieldValue, {
    /*cloud_firestore.FieldValue._factory*/get _factory() {
      return platform_interface_field_value_factory.FieldValueFactoryPlatform.instance;
    }
  }, false);
  cloud_firestore._FilterObject = class _FilterObject extends core.Object {
    build() {
      dart.throw(new core.UnimplementedError.new());
    }
    static ['_#new#tearOff']() {
      return new cloud_firestore._FilterObject.new();
    }
  };
  (cloud_firestore._FilterObject.new = function() {
    ;
  }).prototype = cloud_firestore._FilterObject.prototype;
  dart.addTypeTests(cloud_firestore._FilterObject);
  dart.addTypeCaches(cloud_firestore._FilterObject);
  dart.setMethodSignature(cloud_firestore._FilterObject, () => ({
    __proto__: dart.getMethods(cloud_firestore._FilterObject.__proto__),
    build: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setLibraryUri(cloud_firestore._FilterObject, I[39]);
  cloud_firestore._FilterQuery = class _FilterQuery extends cloud_firestore._FilterObject {
    static ['_#new#tearOff'](_field, _operator, _value) {
      return new cloud_firestore._FilterQuery.new(_field, _operator, _value);
    }
    build() {
      return new (T$.IdentityMapOfString$ObjectN()).from(["fieldPath", this[S$._field], "op", this[S$._operator], "value", this[S$._value$1]]);
    }
  };
  (cloud_firestore._FilterQuery.new = function(_field, _operator, _value) {
    this[S$._field] = _field;
    this[S$._operator] = _operator;
    this[S$._value$1] = _value;
    if (!(field_path_type.FieldPathType.is(_field) || field_path.FieldPath.is(_field))) dart.assertFailed(null, I[44], 15, 16, "_field is FieldPathType || _field is FieldPath");
    ;
  }).prototype = cloud_firestore._FilterQuery.prototype;
  dart.addTypeTests(cloud_firestore._FilterQuery);
  dart.addTypeCaches(cloud_firestore._FilterQuery);
  dart.setLibraryUri(cloud_firestore._FilterQuery, I[39]);
  dart.setFieldSignature(cloud_firestore._FilterQuery, () => ({
    __proto__: dart.getFields(cloud_firestore._FilterQuery.__proto__),
    [S$._field]: dart.finalFieldType(core.Object),
    [S$._operator]: dart.finalFieldType(core.String),
    [S$._value$1]: dart.finalFieldType(dart.nullable(core.Object))
  }));
  cloud_firestore._FilterOperator = class _FilterOperator extends cloud_firestore._FilterObject {
    static ['_#new#tearOff'](_operator, _queries) {
      return new cloud_firestore._FilterOperator.new(_operator, _queries);
    }
    build() {
      return new (T$.IdentityMapOfString$Object()).from(["op", this[S$._operator], "queries", this[S$._queries][S$.$map](T$.MapOfString$ObjectN(), dart.fn(e => e.build(), T$._FilterObjectToMapOfString$ObjectN()))[S$.$toList]()]);
    }
  };
  (cloud_firestore._FilterOperator.new = function(_operator, _queries) {
    this[S$._operator] = _operator;
    this[S$._queries] = _queries;
    ;
  }).prototype = cloud_firestore._FilterOperator.prototype;
  dart.addTypeTests(cloud_firestore._FilterOperator);
  dart.addTypeCaches(cloud_firestore._FilterOperator);
  dart.setMethodSignature(cloud_firestore._FilterOperator, () => ({
    __proto__: dart.getMethods(cloud_firestore._FilterOperator.__proto__),
    build: dart.fnType(core.Map$(core.String, core.Object), [])
  }));
  dart.setLibraryUri(cloud_firestore._FilterOperator, I[39]);
  dart.setFieldSignature(cloud_firestore._FilterOperator, () => ({
    __proto__: dart.getFields(cloud_firestore._FilterOperator.__proto__),
    [S$._operator]: dart.finalFieldType(core.String),
    [S$._queries]: dart.finalFieldType(core.List$(cloud_firestore._FilterObject))
  }));
  filters.FilterPlatformInterface = class FilterPlatformInterface extends core.Object {
    toJson() {
      dart.throw(new core.UnimplementedError.new("toJson() is not implemented"));
    }
  };
  (filters.FilterPlatformInterface.new = function() {
    ;
  }).prototype = filters.FilterPlatformInterface.prototype;
  dart.addTypeTests(filters.FilterPlatformInterface);
  dart.addTypeCaches(filters.FilterPlatformInterface);
  dart.setMethodSignature(filters.FilterPlatformInterface, () => ({
    __proto__: dart.getMethods(filters.FilterPlatformInterface.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setLibraryUri(filters.FilterPlatformInterface, I[45]);
  cloud_firestore.Filter = class Filter extends filters.FilterPlatformInterface {
    get [S$._filterQuery]() {
      return this[S$.__Filter__filterQuery_isSet] ? this[S$.__Filter__filterQuery] : dart.throw(new _internal.LateError.fieldNI("_filterQuery"));
    }
    set [S$._filterQuery](_filterQuery$35param) {
      if (this[S$.__Filter__filterQuery_isSet])
        dart.throw(new _internal.LateError.fieldAI("_filterQuery"));
      else {
        this[S$.__Filter__filterQuery_isSet] = true;
        this[S$.__Filter__filterQuery] = _filterQuery$35param;
      }
    }
    get [S$._filterOperator]() {
      return this[S$.__Filter__filterOperator_isSet] ? this[S$.__Filter__filterOperator] : dart.throw(new _internal.LateError.fieldNI("_filterOperator"));
    }
    set [S$._filterOperator](_filterOperator$35param) {
      if (this[S$.__Filter__filterOperator_isSet])
        dart.throw(new _internal.LateError.fieldAI("_filterOperator"));
      else {
        this[S$.__Filter__filterOperator_isSet] = true;
        this[S$.__Filter__filterOperator] = _filterOperator$35param;
      }
    }
    static ['_#_#tearOff'](_filterQuery, _filterOperator) {
      return new cloud_firestore.Filter.__(_filterQuery, _filterOperator);
    }
    static ['_#new#tearOff'](field, opts) {
      let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : null;
      let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : null;
      let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
      let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
      let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
      let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
      let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
      let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
      let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
      let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
      let isNull = opts && 'isNull' in opts ? opts.isNull : null;
      return new cloud_firestore.Filter.new(field, {isEqualTo: isEqualTo, isNotEqualTo: isNotEqualTo, isLessThan: isLessThan, isLessThanOrEqualTo: isLessThanOrEqualTo, isGreaterThan: isGreaterThan, isGreaterThanOrEqualTo: isGreaterThanOrEqualTo, arrayContains: arrayContains, arrayContainsAny: arrayContainsAny, whereIn: whereIn, whereNotIn: whereNotIn, isNull: isNull});
    }
    [S$._getOperator](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull) {
      if (isEqualTo != null) return "==";
      if (isNotEqualTo != null) return "!=";
      if (isLessThan != null) return "<";
      if (isLessThanOrEqualTo != null) return "<=";
      if (isGreaterThan != null) return ">";
      if (isGreaterThanOrEqualTo != null) return ">=";
      if (arrayContains != null) return "array-contains";
      if (arrayContainsAny != null) return "array-contains-any";
      if (whereIn != null) return "in";
      if (whereNotIn != null) return "not-in";
      if (isNull != null) {
        if (dart.test(isNull)) {
          return "==";
        } else {
          return "!=";
        }
      }
      dart.throw(core.Exception.new("Exactly one operator must be specified"));
    }
    [S$._getValue](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull) {
      if (isEqualTo != null) return isEqualTo;
      if (isNotEqualTo != null) return isNotEqualTo;
      if (isLessThan != null) return isLessThan;
      if (isLessThanOrEqualTo != null) return isLessThanOrEqualTo;
      if (isGreaterThan != null) return isGreaterThan;
      if (isGreaterThanOrEqualTo != null) return isGreaterThanOrEqualTo;
      if (arrayContains != null) return arrayContains;
      if (arrayContainsAny != null) return arrayContainsAny;
      if (whereIn != null) return whereIn;
      if (whereNotIn != null) return whereNotIn;
      if (isNull != null) {
        if (isNull === true) {
          return null;
        } else {
          return null;
        }
      }
      dart.throw(core.Exception.new("Exactly one operator must be specified"));
    }
    static or(filter1, filter2, filter3 = null, filter4 = null, filter5 = null, filter6 = null, filter7 = null, filter8 = null, filter9 = null, filter10 = null, filter11 = null, filter12 = null, filter13 = null, filter14 = null, filter15 = null, filter16 = null, filter17 = null, filter18 = null, filter19 = null, filter20 = null, filter21 = null, filter22 = null, filter23 = null, filter24 = null, filter25 = null, filter26 = null, filter27 = null, filter28 = null, filter29 = null, filter30 = null) {
      return cloud_firestore.Filter._generateFilter("OR", T$.JSArrayOfFilterN().of([filter1, filter2, filter3, filter4, filter5, filter6, filter7, filter8, filter9, filter10, filter11, filter12, filter13, filter14, filter15, filter16, filter17, filter18, filter19, filter20, filter21, filter22, filter23, filter24, filter25, filter26, filter27, filter28, filter29, filter30]));
    }
    static and(filter1, filter2, filter3 = null, filter4 = null, filter5 = null, filter6 = null, filter7 = null, filter8 = null, filter9 = null, filter10 = null, filter11 = null, filter12 = null, filter13 = null, filter14 = null, filter15 = null, filter16 = null, filter17 = null, filter18 = null, filter19 = null, filter20 = null, filter21 = null, filter22 = null, filter23 = null, filter24 = null, filter25 = null, filter26 = null, filter27 = null, filter28 = null, filter29 = null, filter30 = null) {
      return cloud_firestore.Filter._generateFilter("AND", T$.JSArrayOfFilterN().of([filter1, filter2, filter3, filter4, filter5, filter6, filter7, filter8, filter9, filter10, filter11, filter12, filter13, filter14, filter15, filter16, filter17, filter18, filter19, filter20, filter21, filter22, filter23, filter24, filter25, filter26, filter27, filter28, filter29, filter30]));
    }
    static _generateFilter(operator, filters) {
      if (!dart.fn(() => {
        let filtersUsed = filters[S$.$where](dart.fn(e => e != null, T$.FilterNTobool()))[S$.$length];
        return filtersUsed >= 2;
      }, T$.VoidTobool())()) dart.assertFailed("At least two filters must be specified", I[44], 375, 7, "() {\n        final filtersUsed = filters.where((e) => e != null).length;\n        return filtersUsed >= 2;\n      }()");
      return new cloud_firestore.Filter.__(null, new cloud_firestore._FilterOperator.new(operator, (() => {
        let t73 = T$.JSArrayOf_FilterObject().of([]);
        for (let filter of filters)
          if (filter != null && filter[S$._filterQuery] != null)
            t73.push(dart.nullCheck(filter[S$._filterQuery]));
          else if (filter != null && filter[S$._filterOperator] != null) t73.push(dart.nullCheck(filter[S$._filterOperator]));
        return t73;
      })()));
    }
    toJson() {
      if (this[S$._filterOperator] != null) {
        return dart.nullCheck(this[S$._filterOperator]).build();
      } else if (this[S$._filterQuery] != null) {
        return dart.nullCheck(this[S$._filterQuery]).build();
      }
      dart.throw(core.Exception.new("Exactly one operator must be specified"));
    }
  };
  (cloud_firestore.Filter.__ = function(_filterQuery, _filterOperator) {
    this[S$.__Filter__filterQuery] = null;
    this[S$.__Filter__filterQuery_isSet] = false;
    this[S$.__Filter__filterOperator] = null;
    this[S$.__Filter__filterOperator_isSet] = false;
    this[S$.__Filter__filterQuery_isSet] = true;
    this[S$.__Filter__filterQuery] = _filterQuery;
    this[S$.__Filter__filterOperator_isSet] = true;
    this[S$.__Filter__filterOperator] = _filterOperator;
    if (!(_filterQuery != null && _filterOperator == null || _filterQuery == null && _filterOperator != null)) dart.assertFailed("Exactly one operator must be specified", I[44], 54, 11, "(_filterQuery != null && _filterOperator == null) ||\n              (_filterQuery == null && _filterOperator != null)");
    ;
  }).prototype = cloud_firestore.Filter.prototype;
  (cloud_firestore.Filter.new = function(field, opts) {
    let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : null;
    let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : null;
    let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
    let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
    let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
    let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
    let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
    let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
    let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
    let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
    let isNull = opts && 'isNull' in opts ? opts.isNull : null;
    this[S$.__Filter__filterQuery] = null;
    this[S$.__Filter__filterQuery_isSet] = false;
    this[S$.__Filter__filterOperator] = null;
    this[S$.__Filter__filterOperator_isSet] = false;
    if (!dart.fn(() => {
      let operators = T$.JSArrayOfObjectN().of([isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull]);
      let operatorsUsed = operators[S$.$where](dart.fn(e => e != null, T$.ObjectNTobool()))[S$.$length];
      return operatorsUsed === 1;
    }, T$.VoidTobool())()) dart.assertFailed("Exactly one operator must be specified", I[44], 99, 11, "() {\n            final operators = [\n              isEqualTo,\n              isNotEqualTo,\n              isLessThan,\n              isLessThanOrEqualTo,\n              isGreaterThan,\n              isGreaterThanOrEqualTo,\n              arrayContains,\n              arrayContainsAny,\n              whereIn,\n              whereNotIn,\n              isNull,\n            ];\n            final operatorsUsed = operators.where((e) => e != null).length;\n            return operatorsUsed == 1;\n          }()");
    if (!(typeof field == 'string' || field_path.FieldPath.is(field) || field_path_type.FieldPathType.is(field))) dart.assertFailed(null, I[44], 119, 11, "field is String || field is FieldPath || field is FieldPathType");
    let _field = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field;
    this[S$._filterQuery] = new cloud_firestore._FilterQuery.new(_field, this[S$._getOperator](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull), cloud_firestore._CodecUtility.valueEncode(this[S$._getValue](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull)));
    this[S$._filterOperator] = null;
  }).prototype = cloud_firestore.Filter.prototype;
  dart.addTypeTests(cloud_firestore.Filter);
  dart.addTypeCaches(cloud_firestore.Filter);
  dart.setMethodSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getMethods(cloud_firestore.Filter.__proto__),
    [S$._getOperator]: dart.fnType(core.String, [dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.bool)]),
    [S$._getValue]: dart.fnType(dart.nullable(core.Object), [dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.bool)])
  }));
  dart.setStaticMethodSignature(cloud_firestore.Filter, () => ['or', 'and', '_generateFilter']);
  dart.setGetterSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getGetters(cloud_firestore.Filter.__proto__),
    [S$._filterQuery]: dart.nullable(cloud_firestore._FilterQuery),
    [S$._filterOperator]: dart.nullable(cloud_firestore._FilterOperator)
  }));
  dart.setSetterSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getSetters(cloud_firestore.Filter.__proto__),
    [S$._filterQuery]: dart.nullable(cloud_firestore._FilterQuery),
    [S$._filterOperator]: dart.nullable(cloud_firestore._FilterOperator)
  }));
  dart.setLibraryUri(cloud_firestore.Filter, I[39]);
  dart.setFieldSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getFields(cloud_firestore.Filter.__proto__),
    [S$.__Filter__filterQuery]: dart.fieldType(dart.nullable(cloud_firestore._FilterQuery)),
    [S$.__Filter__filterQuery_isSet]: dart.fieldType(core.bool),
    [S$.__Filter__filterOperator]: dart.fieldType(dart.nullable(cloud_firestore._FilterOperator)),
    [S$.__Filter__filterOperator_isSet]: dart.fieldType(core.bool)
  }));
  cloud_firestore.FirebaseFirestore = class FirebaseFirestore extends firebase_core_platform_interface.FirebasePluginPlatform {
    get app() {
      return this[S$.app$1];
    }
    set app(value) {
      this[S$.app$1] = value;
    }
    get databaseURL() {
      return this[S$.databaseURL$1];
    }
    set databaseURL(value) {
      this[S$.databaseURL$1] = value;
    }
    static ['_#_#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new cloud_firestore.FirebaseFirestore.__({app: app, databaseURL: databaseURL});
    }
    static get instance() {
      return cloud_firestore.FirebaseFirestore.instanceFor({app: firebase_core.Firebase.app()});
    }
    static instanceFor(opts) {
      let t74;
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let url = (t74 = databaseURL, t74 == null ? "(default)" : t74);
      let cacheKey = app.name + "|" + url;
      if (cloud_firestore.FirebaseFirestore._cachedInstances[S$.$containsKey](cacheKey)) {
        return dart.nullCheck(cloud_firestore.FirebaseFirestore._cachedInstances[S$.$_get](cacheKey));
      }
      let newInstance = new cloud_firestore.FirebaseFirestore.__({app: app, databaseURL: url});
      cloud_firestore.FirebaseFirestore._cachedInstances[S$.$_set](cacheKey, newInstance);
      return newInstance;
    }
    get [S$._delegate$4]() {
      let t74;
      t74 = this[S$._delegatePackingProperty$1];
      return t74 == null ? this[S$._delegatePackingProperty$1] = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: this.app, databaseURL: this.databaseURL}) : t74;
    }
    collection(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collectionPath path must be a non-empty string", I[46], 74, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[46], 78, 7, "!collectionPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidCollectionPath(collectionPath)) dart.assertFailed("a collection path must point to a valid collection.", I[46], 82, 7, "isValidCollectionPath(collectionPath)");
      return new cloud_firestore._JsonCollectionReference.new(this, this[S$._delegate$4].collection(collectionPath));
    }
    batch() {
      return new cloud_firestore.WriteBatch.__(this, this[S$._delegate$4].batch());
    }
    clearPersistence() {
      return this[S$._delegate$4].clearPersistence();
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, (function* enablePersistence() {
        return this[S$._delegate$4].enablePersistence(persistenceSettings);
      }).bind(this));
    }
    loadBundle(bundle) {
      return new cloud_firestore.LoadBundleTask.__(this[S$._delegate$4].loadBundle(bundle));
    }
    useFirestoreEmulator(host, port, opts) {
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : false;
      let automaticHostMapping = opts && 'automaticHostMapping' in opts ? opts.automaticHostMapping : true;
      {
        try {
          this[S$._delegate$4].useEmulator(host, port);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            let strError = e[S$.$toString]();
            if (!strError[S$.$contains]("failed-precondition")) {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
      }
    }
    namedQueryWithConverterGet(T, name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[5] || CT.C5;
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return async.async(cloud_firestore.QuerySnapshot$(T), (function* namedQueryWithConverterGet() {
        let snapshot = (yield this.namedQueryGet(name, {options: options}));
        return new (cloud_firestore._WithConverterQuerySnapshot$(T)).new(snapshot, fromFirestore, toFirestore);
      }).bind(this));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[5] || CT.C5;
      return async.async(T$.QuerySnapshotOfMapOfString$dynamic(), (function* namedQueryGet() {
        let snapshotDelegate = (yield this[S$._delegate$4].namedQueryGet(name, {options: options}));
        return new cloud_firestore._JsonQuerySnapshot.new(cloud_firestore.FirebaseFirestore.instance, snapshotDelegate);
      }).bind(this));
    }
    collectionGroup(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collection path must be a non-empty string", I[46], 190, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("/")) dart.assertFailed("a collection path passed to collectionGroup() cannot contain \"/\"", I[46], 194, 7, "!collectionPath.contains('/')");
      return new cloud_firestore._JsonQuery.new(this, this[S$._delegate$4].collectionGroup(collectionPath));
    }
    disableNetwork() {
      return this[S$._delegate$4].disableNetwork();
    }
    doc(documentPath) {
      if (!documentPath[S$.$isNotEmpty]) dart.assertFailed("a document path must be a non-empty string", I[46], 213, 7, "documentPath.isNotEmpty");
      if (!!documentPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[46], 217, 7, "!documentPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidDocumentPath(documentPath)) dart.assertFailed("a document path must point to a valid document.", I[46], 221, 7, "isValidDocumentPath(documentPath)");
      return new cloud_firestore._JsonDocumentReference.new(this, this[S$._delegate$4].doc(documentPath));
    }
    enableNetwork() {
      return this[S$._delegate$4].enableNetwork();
    }
    snapshotsInSync() {
      return this[S$._delegate$4].snapshotsInSync();
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(T, (function* runTransaction() {
        let output = null;
        let output$35isSet = false;
        function output$35get() {
          return output$35isSet ? output : dart.throw(new _internal.LateError.localNI("output"));
        }
        function output$35set(output$35param) {
          output$35isSet = true;
          return output = output$35param;
        }
        yield this[S$._delegate$4].runTransaction(core.Null, dart.fn(transaction => async.async(core.Null, (function*() {
          output$35set(yield transactionHandler(new cloud_firestore.Transaction.__(this, transaction)));
        }).bind(this)), T$.TransactionPlatformToFutureOfNull()), {timeout: timeout, maxAttempts: maxAttempts});
        return output$35get();
      }).bind(this));
    }
    set settings(settings) {
      this[S$._delegate$4].settings = this[S$._delegate$4].settings.copyWith({sslEnabled: settings.sslEnabled, persistenceEnabled: settings.persistenceEnabled, host: settings.host, cacheSizeBytes: settings.cacheSizeBytes});
    }
    get settings() {
      return this[S$._delegate$4].settings;
    }
    terminate() {
      return this[S$._delegate$4].terminate();
    }
    waitForPendingWrites() {
      return this[S$._delegate$4].waitForPendingWrites();
    }
    setIndexConfiguration(opts) {
      let indexes = opts && 'indexes' in opts ? opts.indexes : null;
      let fieldOverrides = opts && 'fieldOverrides' in opts ? opts.fieldOverrides : null;
      return async.async(dart.void, (function* setIndexConfiguration() {
        let t79, t79$;
        let json = convert.jsonEncode(new (T$.IdentityMapOfString$ListOfMapOfString$dynamic()).from(["indexes", indexes[S$.$map](T$.MapOfString$dynamic(), dart.fn(index => index.toMap(), T$.IndexToMapOfString$dynamic()))[S$.$toList](), "fieldOverrides", (t79$ = (t79 = fieldOverrides, t79 == null ? null : t79[S$.$map](T$.MapOfString$dynamic(), dart.fn(index => index.toMap(), T$.FieldOverridesToMapOfString$dynamic()))[S$.$toList]()), t79$ == null ? T$.JSArrayOfMapOfString$dynamic().of([]) : t79$)]));
        return this[S$._delegate$4].setIndexConfiguration(json);
      }).bind(this));
    }
    setIndexConfigurationFromJSON(json) {
      return async.async(dart.void, (function* setIndexConfigurationFromJSON() {
        return this[S$._delegate$4].setIndexConfiguration(json);
      }).bind(this));
    }
    static setLoggingEnabled(enabled) {
      return platform_interface_firestore.FirebaseFirestorePlatform.instance.setLoggingEnabled(enabled);
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore.FirebaseFirestore.is(other) && other.app.name === this.app.name;
    }
    get hashCode() {
      return core.Object.hash(this.app.name, this.app.options);
    }
    toString() {
      return dart.str(dart.wrapType(cloud_firestore.FirebaseFirestore)) + "(app: " + this.app.name + ")";
    }
  };
  (cloud_firestore.FirebaseFirestore.__ = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S$._delegatePackingProperty$1] = null;
    this[S$.app$1] = app;
    this[S$.databaseURL$1] = databaseURL;
    cloud_firestore.FirebaseFirestore.__proto__.new.call(this, app.name, "plugins.flutter.io/firebase_firestore");
    if (this.databaseURL[S$.$endsWith]("/")) {
      this.databaseURL = this.databaseURL[S$.$substring](0, this.databaseURL.length - 1);
    }
  }).prototype = cloud_firestore.FirebaseFirestore.prototype;
  dart.addTypeTests(cloud_firestore.FirebaseFirestore);
  dart.addTypeCaches(cloud_firestore.FirebaseFirestore);
  dart.setMethodSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getMethods(cloud_firestore.FirebaseFirestore.__proto__),
    collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    batch: dart.fnType(cloud_firestore.WriteBatch, []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(persistence_settings.PersistenceSettings)]),
    loadBundle: dart.fnType(cloud_firestore.LoadBundleTask, [typed_data.Uint8List]),
    useFirestoreEmulator: dart.fnType(dart.void, [core.String, core.int], {automaticHostMapping: core.bool, sslEnabled: core.bool}, {}),
    namedQueryWithConverterGet: dart.gFnType(T => [async.Future$(cloud_firestore.QuerySnapshot$(T)), [core.String], {options: get_options.GetOptions}, {fromFirestore: dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)])}], T => [dart.nullable(core.Object)]),
    namedQueryGet: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [core.String], {options: get_options.GetOptions}, {}),
    collectionGroup: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.String]),
    disableNetwork: dart.fnType(async.Future$(dart.void), []),
    doc: dart.fnType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    enableNetwork: dart.fnType(async.Future$(dart.void), []),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    runTransaction: dart.gFnType(T => [async.Future$(T), [dart.fnType(async.Future$(T), [cloud_firestore.Transaction])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)]),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), []),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [], {fieldOverrides: dart.nullable(core.List$(platform_interface_index_definitions.FieldOverrides))}, {indexes: core.List$(platform_interface_index_definitions.Index)}),
    setIndexConfigurationFromJSON: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(cloud_firestore.FirebaseFirestore, () => ['instanceFor', 'setLoggingEnabled']);
  dart.setGetterSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getGetters(cloud_firestore.FirebaseFirestore.__proto__),
    [S$._delegate$4]: platform_interface_firestore.FirebaseFirestorePlatform,
    settings: settings.Settings
  }));
  dart.setSetterSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getSetters(cloud_firestore.FirebaseFirestore.__proto__),
    settings: settings.Settings
  }));
  dart.setStaticGetterSignature(cloud_firestore.FirebaseFirestore, () => ['instance']);
  dart.setLibraryUri(cloud_firestore.FirebaseFirestore, I[39]);
  dart.setFieldSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getFields(cloud_firestore.FirebaseFirestore.__proto__),
    [S$._delegatePackingProperty$1]: dart.fieldType(dart.nullable(platform_interface_firestore.FirebaseFirestorePlatform)),
    app: dart.fieldType(firebase_core.FirebaseApp),
    databaseURL: dart.fieldType(core.String)
  }));
  dart.setStaticFieldSignature(cloud_firestore.FirebaseFirestore, () => ['_cachedInstances']);
  dart.defineExtensionMethods(cloud_firestore.FirebaseFirestore, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore.FirebaseFirestore, ['hashCode']);
  dart.defineLazy(cloud_firestore.FirebaseFirestore, {
    /*cloud_firestore.FirebaseFirestore._cachedInstances*/get _cachedInstances() {
      return new (T$.IdentityMapOfString$FirebaseFirestore()).new();
    }
  }, false);
  cloud_firestore.LoadBundleTask = class LoadBundleTask extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.LoadBundleTask.__(_delegate);
    }
    get stream() {
      let t80, t79;
      t79 = this[S$.__LoadBundleTask_stream];
      return t79 == null ? (t80 = this[S$._delegate$4].stream.map(cloud_firestore.LoadBundleTaskSnapshot, dart.fn(event => new cloud_firestore.LoadBundleTaskSnapshot.__(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.as(event)), T$.dynamicToLoadBundleTaskSnapshot())), this[S$.__LoadBundleTask_stream] == null ? this[S$.__LoadBundleTask_stream] = t80 : dart.throw(new _internal.LateError.fieldADI("stream"))) : t79;
    }
  };
  (cloud_firestore.LoadBundleTask.__ = function(_delegate) {
    this[S$.__LoadBundleTask_stream] = null;
    this[S$._delegate$4] = _delegate;
    platform_interface_load_bundle_task.LoadBundleTaskPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore.LoadBundleTask.prototype;
  dart.addTypeTests(cloud_firestore.LoadBundleTask);
  dart.addTypeCaches(cloud_firestore.LoadBundleTask);
  dart.setGetterSignature(cloud_firestore.LoadBundleTask, () => ({
    __proto__: dart.getGetters(cloud_firestore.LoadBundleTask.__proto__),
    stream: async.Stream$(cloud_firestore.LoadBundleTaskSnapshot)
  }));
  dart.setLibraryUri(cloud_firestore.LoadBundleTask, I[39]);
  dart.setFieldSignature(cloud_firestore.LoadBundleTask, () => ({
    __proto__: dart.getFields(cloud_firestore.LoadBundleTask.__proto__),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_load_bundle_task.LoadBundleTaskPlatform),
    [S$.__LoadBundleTask_stream]: dart.fieldType(dart.nullable(async.Stream$(cloud_firestore.LoadBundleTaskSnapshot)))
  }));
  cloud_firestore.LoadBundleTaskSnapshot = class LoadBundleTaskSnapshot extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.LoadBundleTaskSnapshot.__(_delegate);
    }
    get bytesLoaded() {
      return this[S$._delegate$4].bytesLoaded;
    }
    get documentsLoaded() {
      return this[S$._delegate$4].documentsLoaded;
    }
    get taskState() {
      return this[S$._delegate$4].taskState;
    }
    get totalBytes() {
      return this[S$._delegate$4].totalBytes;
    }
    get totalDocuments() {
      return this[S$._delegate$4].totalDocuments;
    }
  };
  (cloud_firestore.LoadBundleTaskSnapshot.__ = function(_delegate) {
    this[S$._delegate$4] = _delegate;
    platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore.LoadBundleTaskSnapshot.prototype;
  dart.addTypeTests(cloud_firestore.LoadBundleTaskSnapshot);
  dart.addTypeCaches(cloud_firestore.LoadBundleTaskSnapshot);
  dart.setGetterSignature(cloud_firestore.LoadBundleTaskSnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore.LoadBundleTaskSnapshot.__proto__),
    bytesLoaded: core.int,
    documentsLoaded: core.int,
    taskState: load_bundle_task_state.LoadBundleTaskState,
    totalBytes: core.int,
    totalDocuments: core.int
  }));
  dart.setLibraryUri(cloud_firestore.LoadBundleTaskSnapshot, I[39]);
  dart.setFieldSignature(cloud_firestore.LoadBundleTaskSnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore.LoadBundleTaskSnapshot.__proto__),
    [S$._delegate$4]: dart.fieldType(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  const _is_Query_default = Symbol('_is_Query_default');
  cloud_firestore.Query$ = dart.generic(T => {
    class Query extends core.Object {}
    (Query.new = function() {
      ;
    }).prototype = Query.prototype;
    dart.addTypeTests(Query);
    Query.prototype[_is_Query_default] = true;
    dart.addTypeCaches(Query);
    dart.setLibraryUri(Query, I[39]);
    return Query;
  });
  cloud_firestore.Query = cloud_firestore.Query$();
  dart.addTypeTests(cloud_firestore.Query, _is_Query_default);
  const _is_QueryDocumentSnapshot_default = Symbol('_is_QueryDocumentSnapshot_default');
  cloud_firestore.QueryDocumentSnapshot$ = dart.generic(T => {
    class QueryDocumentSnapshot extends core.Object {}
    (QueryDocumentSnapshot.new = function() {
      ;
    }).prototype = QueryDocumentSnapshot.prototype;
    dart.addTypeTests(QueryDocumentSnapshot);
    QueryDocumentSnapshot.prototype[_is_QueryDocumentSnapshot_default] = true;
    dart.addTypeCaches(QueryDocumentSnapshot);
    QueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(T)];
    dart.setLibraryUri(QueryDocumentSnapshot, I[39]);
    return QueryDocumentSnapshot;
  });
  cloud_firestore.QueryDocumentSnapshot = cloud_firestore.QueryDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore.QueryDocumentSnapshot, _is_QueryDocumentSnapshot_default);
  cloud_firestore._JsonQueryDocumentSnapshot = class _JsonQueryDocumentSnapshot extends cloud_firestore._JsonDocumentSnapshot {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonQueryDocumentSnapshot.new(_firestore, _delegate);
    }
    get exists() {
      return true;
    }
    data() {
      return dart.nullCheck(super.data());
    }
  };
  (cloud_firestore._JsonQueryDocumentSnapshot.new = function(_firestore, _delegate) {
    cloud_firestore._JsonQueryDocumentSnapshot.__proto__.new.call(this, cloud_firestore.FirebaseFirestore.as(_firestore), platform_interface_document_snapshot.DocumentSnapshotPlatform.as(_delegate));
    ;
  }).prototype = cloud_firestore._JsonQueryDocumentSnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonQueryDocumentSnapshot);
  dart.addTypeCaches(cloud_firestore._JsonQueryDocumentSnapshot);
  cloud_firestore._JsonQueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.QueryDocumentSnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonQueryDocumentSnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonQueryDocumentSnapshot.__proto__),
    data: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(cloud_firestore._JsonQueryDocumentSnapshot, I[39]);
  const _is__WithConverterQueryDocumentSnapshot_default = Symbol('_is__WithConverterQueryDocumentSnapshot_default');
  cloud_firestore._WithConverterQueryDocumentSnapshot$ = dart.generic(T => {
    class _WithConverterQueryDocumentSnapshot extends cloud_firestore._WithConverterDocumentSnapshot$(T) {
      static ['_#new#tearOff'](T, originalQueryDocumentSnapshot, fromFirestore, toFirestore) {
        return new (cloud_firestore._WithConverterQueryDocumentSnapshot$(T)).new(originalQueryDocumentSnapshot, fromFirestore, toFirestore);
      }
      get exists() {
        return true;
      }
      data() {
        return T.as(super.data());
      }
    }
    (_WithConverterQueryDocumentSnapshot.new = function(originalQueryDocumentSnapshot, fromFirestore, toFirestore) {
      _WithConverterQueryDocumentSnapshot.__proto__.new.call(this, originalQueryDocumentSnapshot, fromFirestore, toFirestore);
      ;
    }).prototype = _WithConverterQueryDocumentSnapshot.prototype;
    dart.addTypeTests(_WithConverterQueryDocumentSnapshot);
    _WithConverterQueryDocumentSnapshot.prototype[_is__WithConverterQueryDocumentSnapshot_default] = true;
    dart.addTypeCaches(_WithConverterQueryDocumentSnapshot);
    _WithConverterQueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.QueryDocumentSnapshot$(T)];
    dart.setMethodSignature(_WithConverterQueryDocumentSnapshot, () => ({
      __proto__: dart.getMethods(_WithConverterQueryDocumentSnapshot.__proto__),
      data: dart.fnType(T, [])
    }));
    dart.setLibraryUri(_WithConverterQueryDocumentSnapshot, I[39]);
    return _WithConverterQueryDocumentSnapshot;
  });
  cloud_firestore._WithConverterQueryDocumentSnapshot = cloud_firestore._WithConverterQueryDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterQueryDocumentSnapshot, _is__WithConverterQueryDocumentSnapshot_default);
  const _is_QuerySnapshot_default = Symbol('_is_QuerySnapshot_default');
  cloud_firestore.QuerySnapshot$ = dart.generic(T => {
    class QuerySnapshot extends core.Object {}
    (QuerySnapshot.new = function() {
      ;
    }).prototype = QuerySnapshot.prototype;
    dart.addTypeTests(QuerySnapshot);
    QuerySnapshot.prototype[_is_QuerySnapshot_default] = true;
    dart.addTypeCaches(QuerySnapshot);
    dart.setLibraryUri(QuerySnapshot, I[39]);
    return QuerySnapshot;
  });
  cloud_firestore.QuerySnapshot = cloud_firestore.QuerySnapshot$();
  dart.addTypeTests(cloud_firestore.QuerySnapshot, _is_QuerySnapshot_default);
  cloud_firestore._JsonQuerySnapshot = class _JsonQuerySnapshot extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonQuerySnapshot.new(_firestore, _delegate);
    }
    get docs() {
      return this[S$._delegate$4].docs[S$.$map](cloud_firestore._JsonQueryDocumentSnapshot, dart.fn(documentDelegate => new cloud_firestore._JsonQueryDocumentSnapshot.new(this[S$._firestore], documentDelegate), T$.DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot()))[S$.$toList]();
    }
    get docChanges() {
      return this[S$._delegate$4].docChanges[S$.$map](cloud_firestore._JsonDocumentChange, dart.fn(documentDelegate => new cloud_firestore._JsonDocumentChange.new(this[S$._firestore], documentDelegate), T$.DocumentChangePlatformTo_JsonDocumentChange()))[S$.$toList]();
    }
    get metadata() {
      return new cloud_firestore.SnapshotMetadata.__(this[S$._delegate$4].metadata);
    }
    get size() {
      return this[S$._delegate$4].size;
    }
  };
  (cloud_firestore._JsonQuerySnapshot.new = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate$4] = _delegate;
    platform_interface_query_snapshot.QuerySnapshotPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore._JsonQuerySnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonQuerySnapshot);
  dart.addTypeCaches(cloud_firestore._JsonQuerySnapshot);
  cloud_firestore._JsonQuerySnapshot[dart.implements] = () => [cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setGetterSignature(cloud_firestore._JsonQuerySnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonQuerySnapshot.__proto__),
    docs: core.List$(cloud_firestore.QueryDocumentSnapshot$(core.Map$(core.String, dart.dynamic))),
    docChanges: core.List$(cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))),
    metadata: cloud_firestore.SnapshotMetadata,
    size: core.int
  }));
  dart.setLibraryUri(cloud_firestore._JsonQuerySnapshot, I[39]);
  dart.setFieldSignature(cloud_firestore._JsonQuerySnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonQuerySnapshot.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_query_snapshot.QuerySnapshotPlatform)
  }));
  const _is__WithConverterQuerySnapshot_default = Symbol('_is__WithConverterQuerySnapshot_default');
  cloud_firestore._WithConverterQuerySnapshot$ = dart.generic(T => {
    var __t$QueryDocumentSnapshotOfT = () => (__t$QueryDocumentSnapshotOfT = dart.constFn(cloud_firestore.QueryDocumentSnapshot$(T)))();
    var __t$JSArrayOfQueryDocumentSnapshotOfT = () => (__t$JSArrayOfQueryDocumentSnapshotOfT = dart.constFn(_interceptors.JSArray$(__t$QueryDocumentSnapshotOfT())))();
    var __t$_WithConverterQueryDocumentSnapshotOfT = () => (__t$_WithConverterQueryDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterQueryDocumentSnapshot$(T)))();
    var __t$DocumentChangeOfT = () => (__t$DocumentChangeOfT = dart.constFn(cloud_firestore.DocumentChange$(T)))();
    var __t$JSArrayOfDocumentChangeOfT = () => (__t$JSArrayOfDocumentChangeOfT = dart.constFn(_interceptors.JSArray$(__t$DocumentChangeOfT())))();
    var __t$_WithConverterDocumentChangeOfT = () => (__t$_WithConverterDocumentChangeOfT = dart.constFn(cloud_firestore._WithConverterDocumentChange$(T)))();
    class _WithConverterQuerySnapshot extends core.Object {
      static ['_#new#tearOff'](T, _originalQuerySnapshot, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterQuerySnapshot$(T)).new(_originalQuerySnapshot, _fromFirestore, _toFirestore);
      }
      get docs() {
        return (() => {
          let t79 = __t$JSArrayOfQueryDocumentSnapshotOfT().of([]);
          for (let snapshot of this[S$._originalQuerySnapshot].docs)
            t79.push(new (__t$_WithConverterQueryDocumentSnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]));
          return t79;
        })();
      }
      get docChanges() {
        return (() => {
          let t80 = __t$JSArrayOfDocumentChangeOfT().of([]);
          for (let change of this[S$._originalQuerySnapshot].docChanges)
            t80.push(new (__t$_WithConverterDocumentChangeOfT()).new(change, this[S$._fromFirestore], this[S$._toFirestore]));
          return t80;
        })();
      }
      get metadata() {
        return this[S$._originalQuerySnapshot].metadata;
      }
      get size() {
        return this[S$._originalQuerySnapshot].size;
      }
    }
    (_WithConverterQuerySnapshot.new = function(_originalQuerySnapshot, _fromFirestore, _toFirestore) {
      this[S$._originalQuerySnapshot] = _originalQuerySnapshot;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterQuerySnapshot.prototype;
    dart.addTypeTests(_WithConverterQuerySnapshot);
    _WithConverterQuerySnapshot.prototype[_is__WithConverterQuerySnapshot_default] = true;
    dart.addTypeCaches(_WithConverterQuerySnapshot);
    _WithConverterQuerySnapshot[dart.implements] = () => [cloud_firestore.QuerySnapshot$(T)];
    dart.setGetterSignature(_WithConverterQuerySnapshot, () => ({
      __proto__: dart.getGetters(_WithConverterQuerySnapshot.__proto__),
      docs: core.List$(cloud_firestore.QueryDocumentSnapshot$(T)),
      docChanges: core.List$(cloud_firestore.DocumentChange$(T)),
      metadata: cloud_firestore.SnapshotMetadata,
      size: core.int
    }));
    dart.setLibraryUri(_WithConverterQuerySnapshot, I[39]);
    dart.setFieldSignature(_WithConverterQuerySnapshot, () => ({
      __proto__: dart.getFields(_WithConverterQuerySnapshot.__proto__),
      [S$._originalQuerySnapshot]: dart.finalFieldType(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterQuerySnapshot;
  });
  cloud_firestore._WithConverterQuerySnapshot = cloud_firestore._WithConverterQuerySnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterQuerySnapshot, _is__WithConverterQuerySnapshot_default);
  cloud_firestore.SnapshotMetadata = class SnapshotMetadata extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.SnapshotMetadata.__(_delegate);
    }
    get hasPendingWrites() {
      return this[S$._delegate$4].hasPendingWrites;
    }
    get isFromCache() {
      return this[S$._delegate$4].isFromCache;
    }
  };
  (cloud_firestore.SnapshotMetadata.__ = function(_delegate) {
    this[S$._delegate$4] = _delegate;
    ;
  }).prototype = cloud_firestore.SnapshotMetadata.prototype;
  dart.addTypeTests(cloud_firestore.SnapshotMetadata);
  dart.addTypeCaches(cloud_firestore.SnapshotMetadata);
  dart.setGetterSignature(cloud_firestore.SnapshotMetadata, () => ({
    __proto__: dart.getGetters(cloud_firestore.SnapshotMetadata.__proto__),
    hasPendingWrites: core.bool,
    isFromCache: core.bool
  }));
  dart.setLibraryUri(cloud_firestore.SnapshotMetadata, I[39]);
  dart.setFieldSignature(cloud_firestore.SnapshotMetadata, () => ({
    __proto__: dart.getFields(cloud_firestore.SnapshotMetadata.__proto__),
    [S$._delegate$4]: dart.fieldType(snapshot_metadata.SnapshotMetadataPlatform)
  }));
  cloud_firestore.Transaction = class Transaction extends core.Object {
    static ['_#_#tearOff'](_firestore, _delegate) {
      return new cloud_firestore.Transaction.__(_firestore, _delegate);
    }
    get(T, documentReference) {
      return async.async(cloud_firestore.DocumentSnapshot$(T), (function* get() {
        let documentSnapshotPlatform = (yield this[S$._delegate$4].get(documentReference.path));
        let snapshot = new cloud_firestore._JsonDocumentSnapshot.new(this[S$._firestore], documentSnapshotPlatform);
        if (cloud_firestore.DocumentSnapshot$(T).is(snapshot)) {
          return cloud_firestore.DocumentSnapshot$(T).as(snapshot);
        }
        let withConverterDocRef = cloud_firestore._WithConverterDocumentReference$(T).as(documentReference);
        return new (cloud_firestore._WithConverterDocumentSnapshot$(T)).new(snapshot, withConverterDocRef[S$._fromFirestore], dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(withConverterDocRef[S$._toFirestore]));
      }).bind(this));
    }
    delete(documentReference) {
      if (!documentReference.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[47], 50, 7, "documentReference.firestore == _firestore");
      return new cloud_firestore.Transaction.__(this[S$._firestore], this[S$._delegate$4].delete(documentReference.path));
    }
    update(documentReference, data) {
      if (!documentReference.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[47], 67, 7, "documentReference.firestore == _firestore");
      return new cloud_firestore.Transaction.__(this[S$._firestore], this[S$._delegate$4].update(documentReference.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data))));
    }
    set(T, documentReference, data, options = null) {
      let t83, t82, t81;
      if (!documentReference.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[47], 89, 7, "documentReference.firestore == _firestore");
      let firestoreData = null;
      if (cloud_firestore._JsonDocumentReference.is(documentReference)) {
        firestoreData = T$.MapOfString$dynamic().as(data);
      } else {
        let withConverterDoc = cloud_firestore._WithConverterDocumentReference$(T).as(documentReference);
        firestoreData = (t81 = withConverterDoc, t82 = data, t83 = options, dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(t81[S$._toFirestore])(t82, t83));
      }
      return new cloud_firestore.Transaction.__(this[S$._firestore], this[S$._delegate$4].set(documentReference.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(firestoreData)), options));
    }
  };
  (cloud_firestore.Transaction.__ = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate$4] = _delegate;
    platform_interface_transaction.TransactionPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore.Transaction.prototype;
  dart.addTypeTests(cloud_firestore.Transaction);
  dart.addTypeCaches(cloud_firestore.Transaction);
  dart.setMethodSignature(cloud_firestore.Transaction, () => ({
    __proto__: dart.getMethods(cloud_firestore.Transaction.__proto__),
    get: dart.gFnType(T => [async.Future$(cloud_firestore.DocumentSnapshot$(T)), [cloud_firestore.DocumentReference$(T)]], T => [dart.nullable(core.Object)]),
    delete: dart.fnType(cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(dart.nullable(core.Object))]),
    update: dart.fnType(cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(dart.nullable(core.Object)), core.Map$(core.String, dart.dynamic)]),
    set: dart.gFnType(T => [cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(T), T], [dart.nullable(set_options.SetOptions)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(cloud_firestore.Transaction, I[39]);
  dart.setFieldSignature(cloud_firestore.Transaction, () => ({
    __proto__: dart.getFields(cloud_firestore.Transaction.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_transaction.TransactionPlatform)
  }));
  cloud_firestore._CodecUtility = class _CodecUtility extends core.Object {
    static replaceValueWithDelegatesInMap(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$.$updateAll](dart.fn((_, value) => cloud_firestore._CodecUtility.valueEncode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static replaceValueWithDelegatesInMapFieldPath(data) {
      if (data == null) {
        return null;
      }
      let output = new (T$.LinkedMapOfFieldPath$dynamic()).new();
      data[S$.$forEach](dart.fn((key, value) => {
        if (field_path.FieldPath.is(key)) {
          output[S$.$_set](key, cloud_firestore._CodecUtility.valueEncode(value));
        } else if (typeof key == 'string') {
          output[S$.$_set](new field_path.FieldPath.fromString(key), cloud_firestore._CodecUtility.valueEncode(value));
        } else {
          dart.throw(new core.StateError.new("Invalid key type for map. Expected String or FieldPath, but got " + dart.str(key) + ": " + dart.str(key[S$.$runtimeType]) + "."));
        }
      }, T$.ObjectAnddynamicTovoid()));
      return output;
    }
    static replaceValueWithDelegatesInArray(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, C[22] || CT.C22)[S$.$toList]();
    }
    static replaceDelegatesWithValueInMap(data, firestore) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$.$updateAll](dart.fn((_, value) => cloud_firestore._CodecUtility.valueDecode(value, firestore), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static replaceDelegatesWithValueInArray(data, firestore) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, dart.fn(value => cloud_firestore._CodecUtility.valueDecode(value, firestore), T$.dynamicTodynamic()))[S$.$toList]();
    }
    static valueEncode(value) {
      if (T$.DocumentReferenceOfObjectN().is(value)) {
        return value[S$._delegate$4];
      } else if (core.Iterable.is(value)) {
        return cloud_firestore._CodecUtility.replaceValueWithDelegatesInArray(value);
      } else if (core.Map.is(value)) {
        return cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(value);
      }
      return value;
    }
    static valueDecode(value, firestore) {
      if (platform_interface_document_reference.DocumentReferencePlatform.is(value)) {
        return new cloud_firestore._JsonDocumentReference.new(firestore, value);
      } else if (core.List.is(value)) {
        return cloud_firestore._CodecUtility.replaceDelegatesWithValueInArray(value, firestore);
      } else if (core.Map.is(value)) {
        return cloud_firestore._CodecUtility.replaceDelegatesWithValueInMap(value, firestore);
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new cloud_firestore._CodecUtility.new();
    }
  };
  (cloud_firestore._CodecUtility.new = function() {
    ;
  }).prototype = cloud_firestore._CodecUtility.prototype;
  dart.addTypeTests(cloud_firestore._CodecUtility);
  dart.addTypeCaches(cloud_firestore._CodecUtility);
  dart.setStaticMethodSignature(cloud_firestore._CodecUtility, () => ['replaceValueWithDelegatesInMap', 'replaceValueWithDelegatesInMapFieldPath', 'replaceValueWithDelegatesInArray', 'replaceDelegatesWithValueInMap', 'replaceDelegatesWithValueInArray', 'valueEncode', 'valueDecode']);
  dart.setLibraryUri(cloud_firestore._CodecUtility, I[39]);
  cloud_firestore.WriteBatch = class WriteBatch extends core.Object {
    static ['_#_#tearOff'](_firestore, _delegate) {
      return new cloud_firestore.WriteBatch.__(_firestore, _delegate);
    }
    commit() {
      return this[S$._delegate$4].commit();
    }
    delete(document) {
      if (!document.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[48], 29, 7, "document.firestore == _firestore");
      return this[S$._delegate$4].delete(document.path);
    }
    set(T, document, data, options = null) {
      let t83, t82, t81;
      if (!document.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[48], 47, 7, "document.firestore == _firestore");
      let firestoreData = null;
      if (cloud_firestore._JsonDocumentReference.is(document)) {
        firestoreData = T$.MapOfString$dynamic().as(data);
      } else {
        let withConverterDoc = cloud_firestore._WithConverterDocumentReference$(T).as(document);
        firestoreData = (t81 = withConverterDoc, t82 = data, t83 = options, dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(t81[S$._toFirestore])(t82, t83));
      }
      return this[S$._delegate$4].set(document.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(firestoreData)), options);
    }
    update(document, data) {
      if (!document.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[48], 71, 7, "document.firestore == _firestore");
      return this[S$._delegate$4].update(document.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data)));
    }
  };
  (cloud_firestore.WriteBatch.__ = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate$4] = _delegate;
    platform_interface_write_batch.WriteBatchPlatform.verify(this[S$._delegate$4]);
  }).prototype = cloud_firestore.WriteBatch.prototype;
  dart.addTypeTests(cloud_firestore.WriteBatch);
  dart.addTypeCaches(cloud_firestore.WriteBatch);
  dart.setMethodSignature(cloud_firestore.WriteBatch, () => ({
    __proto__: dart.getMethods(cloud_firestore.WriteBatch.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(dart.void, [cloud_firestore.DocumentReference$(dart.nullable(core.Object))]),
    set: dart.gFnType(T => [dart.void, [cloud_firestore.DocumentReference$(T), T], [dart.nullable(set_options.SetOptions)]], T => [dart.nullable(core.Object)]),
    update: dart.fnType(dart.void, [cloud_firestore.DocumentReference$(dart.nullable(core.Object)), core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(cloud_firestore.WriteBatch, I[39]);
  dart.setFieldSignature(cloud_firestore.WriteBatch, () => ({
    __proto__: dart.getFields(cloud_firestore.WriteBatch.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate$4]: dart.finalFieldType(platform_interface_write_batch.WriteBatchPlatform)
  }));
  dart.defineLazy(cloud_firestore, {
    /*cloud_firestore.notSetQueryParam*/get notSetQueryParam() {
      return C[8] || CT.C8;
    }
  }, false);
  product.Product = class Product extends core.Object {
    get id() {
      return this[S$.id$1];
    }
    set id(value) {
      super.id = value;
    }
    get title() {
      return this[S$.title];
    }
    set title(value) {
      super.title = value;
    }
    get description() {
      return this[S$.description];
    }
    set description(value) {
      super.description = value;
    }
    get price() {
      return this[S$.price];
    }
    set price(value) {
      super.price = value;
    }
    get imageUrl() {
      return this[S$.imageUrl];
    }
    set imageUrl(value) {
      super.imageUrl = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let price = opts && 'price' in opts ? opts.price : null;
      let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
      return new product.Product.new({id: id, title: title, description: description, price: price, imageUrl: imageUrl});
    }
  };
  (product.Product.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let price = opts && 'price' in opts ? opts.price : null;
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    this[S$.id$1] = id;
    this[S$.title] = title;
    this[S$.description] = description;
    this[S$.price] = price;
    this[S$.imageUrl] = imageUrl;
    ;
  }).prototype = product.Product.prototype;
  dart.addTypeTests(product.Product);
  dart.addTypeCaches(product.Product);
  dart.setLibraryUri(product.Product, I[49]);
  dart.setFieldSignature(product.Product, () => ({
    __proto__: dart.getFields(product.Product.__proto__),
    id: dart.finalFieldType(core.String),
    title: dart.finalFieldType(core.String),
    description: dart.finalFieldType(core.String),
    price: dart.finalFieldType(core.double),
    imageUrl: dart.finalFieldType(core.String)
  }));
  product_details_screen.ProductDetailsScreen = class ProductDetailsScreen extends framework.StatelessWidget {
    get product() {
      return this[S$.product];
    }
    set product(value) {
      super.product = value;
    }
    static ['_#new#tearOff'](opts) {
      let product = opts && 'product' in opts ? opts.product : null;
      return new product_details_screen.ProductDetailsScreen.new({product: product});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new(core.String.as(this.product._get("name")))}), body: new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text.Text.new(core.String.as(this.product._get("name")), {style: new text_style.TextStyle.new({fontSize: 24, fontWeight: ui.FontWeight.bold})}), new basic.SizedBox.new({height: 20}), new text.Text.new("Price: $" + dart.str(this.product._get("price")), {style: new text_style.TextStyle.new({fontSize: 20})}), new basic.SizedBox.new({height: 10}), new text.Text.new("Description:", {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.w600})}), new text.Text.new(core.String.as(this.product._get("description")), {style: new text_style.TextStyle.new({fontSize: 16})}), new basic.SizedBox.new({height: 20}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  core.print("Add to Cart: " + dart.str(this.product._get("name")));
                }, T$.VoidTovoid()), child: new text.Text.new("Add to Cart")})])})})});
    }
  };
  (product_details_screen.ProductDetailsScreen.new = function(opts) {
    let product = opts && 'product' in opts ? opts.product : null;
    this[S$.product] = product;
    product_details_screen.ProductDetailsScreen.__proto__.new.call(this);
    ;
  }).prototype = product_details_screen.ProductDetailsScreen.prototype;
  dart.addTypeTests(product_details_screen.ProductDetailsScreen);
  dart.addTypeCaches(product_details_screen.ProductDetailsScreen);
  dart.setMethodSignature(product_details_screen.ProductDetailsScreen, () => ({
    __proto__: dart.getMethods(product_details_screen.ProductDetailsScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(product_details_screen.ProductDetailsScreen, I[50]);
  dart.setFieldSignature(product_details_screen.ProductDetailsScreen, () => ({
    __proto__: dart.getFields(product_details_screen.ProductDetailsScreen.__proto__),
    product: dart.finalFieldType(cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object)))
  }));
  dart.setStaticFieldSignature(product_details_screen.ProductDetailsScreen, () => ['routeName']);
  dart.defineLazy(product_details_screen.ProductDetailsScreen, {
    /*product_details_screen.ProductDetailsScreen.routeName*/get routeName() {
      return "/product-details";
    }
  }, false);
  const Object_ChangeNotifier$36$0 = class Object_ChangeNotifier extends core.Object {};
  (Object_ChangeNotifier$36$0.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36$0.prototype;
  dart.applyMixin(Object_ChangeNotifier$36$0, change_notifier.ChangeNotifier);
  cart_provider.CartProvider = class CartProvider extends Object_ChangeNotifier$36$0 {
    get items() {
      return (() => {
        let t81 = T$.LinkedHashMapOfString$CartItem().of(this[S$._items$1]);
        return t81;
      })();
    }
    get itemCount() {
      return this[S$._items$1][S$.$length];
    }
    get totalAmount() {
      let total = 0;
      this[S$._items$1][S$.$forEach](dart.fn((key, cartItem) => {
        total = total + cartItem.price * cartItem.quantity;
      }, T$.StringAndCartItemTovoid()));
      return total;
    }
    addItem(productId, price, title) {
      if (this[S$._items$1][S$.$containsKey](productId)) {
        this[S$._items$1][S$.$update](productId, dart.fn(existingCartItem => new cart_item.CartItem.new({id: existingCartItem.id, title: existingCartItem.title, quantity: existingCartItem.quantity + 1, price: existingCartItem.price}), T$.CartItemToCartItem()));
      } else {
        this[S$._items$1][S$.$putIfAbsent](productId, dart.fn(() => new cart_item.CartItem.new({id: new core.DateTime.now().toString(), title: title, quantity: 1, price: price}), T$.VoidToCartItem()));
      }
      this.notifyListeners();
    }
    removeItem(productId) {
      this[S$._items$1][S$.$remove](productId);
      this.notifyListeners();
    }
    clearCart() {
      this[S$._items$1] = new (T$.IdentityMapOfString$CartItem()).new();
      this.notifyListeners();
    }
    static ['_#new#tearOff']() {
      return new cart_provider.CartProvider.new();
    }
  };
  (cart_provider.CartProvider.new = function() {
    this[S$._items$1] = new (T$.IdentityMapOfString$CartItem()).new();
    cart_provider.CartProvider.__proto__.new.call(this);
    ;
  }).prototype = cart_provider.CartProvider.prototype;
  dart.addTypeTests(cart_provider.CartProvider);
  dart.addTypeCaches(cart_provider.CartProvider);
  dart.setMethodSignature(cart_provider.CartProvider, () => ({
    __proto__: dart.getMethods(cart_provider.CartProvider.__proto__),
    addItem: dart.fnType(dart.void, [core.String, core.double, core.String]),
    removeItem: dart.fnType(dart.void, [core.String]),
    clearCart: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(cart_provider.CartProvider, () => ({
    __proto__: dart.getGetters(cart_provider.CartProvider.__proto__),
    items: core.Map$(core.String, cart_item.CartItem),
    itemCount: core.int,
    totalAmount: core.double
  }));
  dart.setLibraryUri(cart_provider.CartProvider, I[51]);
  dart.setFieldSignature(cart_provider.CartProvider, () => ({
    __proto__: dart.getFields(cart_provider.CartProvider.__proto__),
    [S$._items$1]: dart.fieldType(core.Map$(core.String, cart_item.CartItem))
  }));
  cart_item_widget.CartItemWidget = class CartItemWidget extends framework.StatelessWidget {
    get cartItem() {
      return this[S$.cartItem];
    }
    set cartItem(value) {
      super.cartItem = value;
    }
    get productId() {
      return this[S$.productId];
    }
    set productId(value) {
      super.productId = value;
    }
    static ['_#new#tearOff'](cartItem, productId) {
      return new cart_item_widget.CartItemWidget.new(cartItem, productId);
    }
    build(context) {
      let cart = provider$.Provider.of(cart_provider.CartProvider, context, {listen: false});
      return new dismissible.Dismissible.new({key: new (T$.ValueKeyOfString()).new(this.cartItem.id), background: new container.Container.new({color: theme.Theme.of(context).colorScheme.error, child: new icon.Icon.new(icons.Icons.delete, {color: colors.Colors.white, size: 40}), alignment: alignment.Alignment.centerRight, padding: new edge_insets.EdgeInsets.only({right: 20}), margin: new edge_insets.EdgeInsets.symmetric({horizontal: 15, vertical: 4})}), direction: dismissible.DismissDirection.endToStart, onDismissed: dart.fn(direction => {
          cart.removeItem(this.productId);
        }, T$.DismissDirectionTovoid()), child: new card.Card.new({margin: new edge_insets.EdgeInsets.symmetric({horizontal: 15, vertical: 4}), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(8), child: new list_tile.ListTile.new({leading: new circle_avatar.CircleAvatar.new({child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(5), child: new basic.FittedBox.new({child: new text.Text.new("$" + dart.str(this.cartItem.price))})})}), title: new text.Text.new(this.cartItem.title), subtitle: new text.Text.new("Total: $" + dart.str(this.cartItem.price * this.cartItem.quantity)), trailing: new text.Text.new(dart.str(this.cartItem.quantity) + " x")})})})});
    }
  };
  (cart_item_widget.CartItemWidget.new = function(cartItem, productId) {
    this[S$.cartItem] = cartItem;
    this[S$.productId] = productId;
    cart_item_widget.CartItemWidget.__proto__.new.call(this);
    ;
  }).prototype = cart_item_widget.CartItemWidget.prototype;
  dart.addTypeTests(cart_item_widget.CartItemWidget);
  dart.addTypeCaches(cart_item_widget.CartItemWidget);
  dart.setMethodSignature(cart_item_widget.CartItemWidget, () => ({
    __proto__: dart.getMethods(cart_item_widget.CartItemWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(cart_item_widget.CartItemWidget, I[52]);
  dart.setFieldSignature(cart_item_widget.CartItemWidget, () => ({
    __proto__: dart.getFields(cart_item_widget.CartItemWidget.__proto__),
    cartItem: dart.finalFieldType(cart_item.CartItem),
    productId: dart.finalFieldType(core.String)
  }));
  cloud_firestore_platform_interface.isValidCollectionPath = function isValidCollectionPath(collectionPath) {
    return new pointer.Pointer.new(collectionPath).isCollection();
  };
  cloud_firestore_platform_interface.isValidDocumentPath = function isValidDocumentPath(documentPath) {
    return new pointer.Pointer.new(documentPath).isDocument();
  };
  internals.convertWebExceptions = function convertWebExceptions(R, cb) {
    return _flutterfire_internals.guardWebExceptions(R, cb, {plugin: "cloud_firestore", codeParser: dart.fn(code => code[S$.$replaceFirst]("firestore/", ""), T$.StringToString())});
  };
  const _is_LoadBundleTaskPlatform_default = Symbol('_is_LoadBundleTaskPlatform_default');
  platform_interface_load_bundle_task.LoadBundleTaskPlatform$ = dart.generic(T => {
    class LoadBundleTaskPlatform extends plugin_platform_interface.PlatformInterface {
      static verify(instance) {
        plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_load_bundle_task.LoadBundleTaskPlatform._token);
      }
    }
    (LoadBundleTaskPlatform.new = function() {
      LoadBundleTaskPlatform.__proto__.new.call(this, {token: platform_interface_load_bundle_task.LoadBundleTaskPlatform._token});
      ;
    }).prototype = LoadBundleTaskPlatform.prototype;
    dart.addTypeTests(LoadBundleTaskPlatform);
    LoadBundleTaskPlatform.prototype[_is_LoadBundleTaskPlatform_default] = true;
    dart.addTypeCaches(LoadBundleTaskPlatform);
    dart.setStaticMethodSignature(LoadBundleTaskPlatform, () => ['verify']);
    dart.setLibraryUri(LoadBundleTaskPlatform, I[53]);
    dart.setStaticFieldSignature(LoadBundleTaskPlatform, () => ['_token']);
    return LoadBundleTaskPlatform;
  });
  platform_interface_load_bundle_task.LoadBundleTaskPlatform = platform_interface_load_bundle_task.LoadBundleTaskPlatform$();
  dart.defineLazy(platform_interface_load_bundle_task.LoadBundleTaskPlatform, {
    /*platform_interface_load_bundle_task.LoadBundleTaskPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  dart.addTypeTests(platform_interface_load_bundle_task.LoadBundleTaskPlatform, _is_LoadBundleTaskPlatform_default);
  load_bundle_task_web.LoadBundleTaskWeb = class LoadBundleTaskWeb extends platform_interface_load_bundle_task.LoadBundleTaskPlatform {
    static ['_#new#tearOff'](task) {
      return new load_bundle_task_web.LoadBundleTaskWeb.new(task);
    }
    get stream() {
      let t82;
      t82 = this[S$.__LoadBundleTaskWeb_stream];
      return t82 == null ? dart.throw(new _internal.LateError.fieldNI("stream")) : t82;
    }
    set stream(stream$35param) {
      if (this[S$.__LoadBundleTaskWeb_stream] == null)
        this[S$.__LoadBundleTaskWeb_stream] = stream$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("stream"));
    }
  };
  (load_bundle_task_web.LoadBundleTaskWeb.new = function(task) {
    this[S$.__LoadBundleTaskWeb_stream] = null;
    load_bundle_task_web.LoadBundleTaskWeb.__proto__.new.call(this);
    this.stream = task.stream.asBroadcastStream({onListen: dart.fn(sub => sub.resume(), T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid()), onCancel: dart.fn(sub => sub.pause(), T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid())}).map(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, dart.fn(snapshot => {
      let data = new (T$.IdentityMapOfString$dynamic()).from(["bytesLoaded", snapshot.bytesLoaded, "documentsLoaded", snapshot.documentsLoaded, "totalBytes", snapshot.totalBytes, "totalDocuments", snapshot.totalDocuments]);
      return new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(snapshot.taskState, data);
    }, T$.LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform()));
  }).prototype = load_bundle_task_web.LoadBundleTaskWeb.prototype;
  dart.addTypeTests(load_bundle_task_web.LoadBundleTaskWeb);
  dart.addTypeCaches(load_bundle_task_web.LoadBundleTaskWeb);
  dart.setGetterSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getGetters(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setSetterSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getSetters(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setLibraryUri(load_bundle_task_web.LoadBundleTaskWeb, I[54]);
  dart.setFieldSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getFields(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    [S$.__LoadBundleTaskWeb_stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))
  }));
  web_utils.getServerTimestampBehaviorString = function getServerTimestampBehaviorString(serverTimestampBehavior) {
    switch (serverTimestampBehavior) {
      case C[6] || CT.C6:
        {
          return "none";
        }
      case C[23] || CT.C23:
        {
          return "estimate";
        }
      case C[24] || CT.C24:
        {
          return "previous";
        }
    }
  };
  web_utils.convertWebQuerySnapshot = function convertWebQuerySnapshot(firestore, webQuerySnapshot, serverTimestampBehavior) {
    return new platform_interface_query_snapshot.QuerySnapshotPlatform.new(webQuerySnapshot.docs[S$.$map](platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webDocumentSnapshot => web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentSnapshot), serverTimestampBehavior), T$.DocumentSnapshotNToDocumentSnapshotPlatform()))[S$.$toList](), webQuerySnapshot.docChanges()[S$.$map](platform_interface_document_change.DocumentChangePlatform, dart.fn(webDocumentChange => web_utils.convertWebDocumentChange(firestore, webDocumentChange, serverTimestampBehavior), T$.DocumentChangeToDocumentChangePlatform()))[S$.$toList](), web_utils.convertWebSnapshotMetadata(webQuerySnapshot.metadata));
  };
  web_utils.convertWebDocumentSnapshot = function convertWebDocumentSnapshot(firestore, webSnapshot, serverTimestampBehavior) {
    return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, dart.nullCheck(webSnapshot.ref).path, decode_utility.DecodeUtility.decodeMapData(webSnapshot.data({serverTimestamps: web_utils.getServerTimestampBehaviorString(serverTimestampBehavior)}), firestore), new messages$46pigeon$.PigeonSnapshotMetadata.new({hasPendingWrites: webSnapshot.metadata.hasPendingWrites, isFromCache: webSnapshot.metadata.fromCache}));
  };
  web_utils.convertWebDocumentChange = function convertWebDocumentChange(firestore, webDocumentChange, serverTimestampBehavior) {
    return new platform_interface_document_change.DocumentChangePlatform.new(web_utils.convertWebDocumentChangeType(webDocumentChange.type), dart.asInt(webDocumentChange.oldIndex), dart.asInt(webDocumentChange.newIndex), web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentChange.doc), serverTimestampBehavior));
  };
  web_utils.convertWebDocumentChangeType = function convertWebDocumentChangeType(changeType) {
    switch (changeType[S$.$toLowerCase]()) {
      case "added":
        {
          return messages$46pigeon$.DocumentChangeType.added;
        }
      case "modified":
        {
          return messages$46pigeon$.DocumentChangeType.modified;
        }
      case "removed":
        {
          return messages$46pigeon$.DocumentChangeType.removed;
        }
      default:
        {
          dart.throw(new core.UnsupportedError.new("Unknown DocumentChangeType: " + changeType + "."));
        }
    }
  };
  web_utils.convertWebSnapshotMetadata = function convertWebSnapshotMetadata(webSnapshotMetadata) {
    return new snapshot_metadata.SnapshotMetadataPlatform.new(webSnapshotMetadata.hasPendingWrites, webSnapshotMetadata.fromCache);
  };
  web_utils.convertGetOptions = function convertGetOptions(options) {
    if (options == null) return null;
    let source = null;
    switch (options.source) {
      case C[7] || CT.C7:
        {
          source = "default";
          break;
        }
      case C[25] || CT.C25:
        {
          source = "cache";
          break;
        }
      case C[26] || CT.C26:
        {
          source = "server";
          break;
        }
      default:
        {
          source = "default";
          break;
        }
    }
    return {source: source};
  };
  web_utils.convertSetOptions = function convertSetOptions(options) {
    if (options == null) return null;
    let parsedOptions = null;
    if (options.merge != null) {
      parsedOptions = {merge: options.merge};
    } else if (options.mergeFields != null) {
      parsedOptions = {mergeFields: dart.nullCheck(options.mergeFields)[S$.$map](core.String, dart.fn(e => e.components[S$.$toList]()[S$.$join]("."), T$.FieldPathToString()))[S$.$toList]()};
    }
    return parsedOptions;
  };
  web_utils.convertFieldPath = function convertFieldPath(fieldPath) {
    return new dart.global.firebase_firestore.FieldPath(fieldPath.components[S$.$toList]()[S$.$join]("."));
  };
  dart.defineLazy(web_utils, {
    /*web_utils._kChangeTypeAdded*/get _kChangeTypeAdded() {
      return "added";
    },
    /*web_utils._kChangeTypeModified*/get _kChangeTypeModified() {
      return "modified";
    },
    /*web_utils._kChangeTypeRemoved*/get _kChangeTypeRemoved() {
      return "removed";
    }
  }, false);
  platform_interface_query.QueryPlatform = class QueryPlatform extends plugin_platform_interface.PlatformInterface {
    get firestore() {
      return this[S$.firestore];
    }
    set firestore(value) {
      super.firestore = value;
    }
    get parameters() {
      return this[S$.parameters];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_query.QueryPlatform._token);
    }
    get isCollectionGroupQuery() {
      dart.throw(new core.UnimplementedError.new("isCollectionGroupQuery is not implemented"));
    }
    endAtDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("endAtDocument() is not implemented"));
    }
    endAt(fields) {
      dart.throw(new core.UnimplementedError.new("endAt() is not implemented"));
    }
    endBeforeDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("endBeforeDocument() is not implemented"));
    }
    endBefore(fields) {
      dart.throw(new core.UnimplementedError.new("endBefore() is not implemented"));
    }
    get(options = C[5] || CT.C5) {
      dart.throw(new core.UnimplementedError.new("get() is not implemented"));
    }
    limit(limit) {
      dart.throw(new core.UnimplementedError.new("limit() is not implemented"));
    }
    limitToLast(limit) {
      dart.throw(new core.UnimplementedError.new("limitToLast() is not implemented"));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      dart.throw(new core.UnimplementedError.new("snapshots() is not implemented"));
    }
    orderBy(orders) {
      dart.throw(new core.UnimplementedError.new("orderBy() is not implemented"));
    }
    startAfterDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("startAfterDocument() is not implemented"));
    }
    startAfter(fields) {
      dart.throw(new core.UnimplementedError.new("startAfter() is not implemented"));
    }
    startAtDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("startAtDocument() is not implemented"));
    }
    startAt(fields) {
      dart.throw(new core.UnimplementedError.new("startAt() is not implemented"));
    }
    where(conditions) {
      dart.throw(new core.UnimplementedError.new("where() is not implemented"));
    }
    whereFilter(filter) {
      dart.throw(new core.UnimplementedError.new("whereFilter() is not implemented"));
    }
    count() {
      dart.throw(new core.UnimplementedError.new("count() is not implemented"));
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      dart.throw(new core.UnimplementedError.new("aggregate() is not implemented"));
    }
    sum(field) {
      dart.throw(new core.UnimplementedError.new("sum() is not implemented"));
    }
    average(field) {
      dart.throw(new core.UnimplementedError.new("average() is not implemented"));
    }
  };
  (platform_interface_query.QueryPlatform.new = function(firestore, params) {
    let t84;
    this[S$.firestore] = firestore;
    this[S$.parameters] = (t84 = params, t84 == null ? platform_interface_query._initialParameters : t84);
    platform_interface_query.QueryPlatform.__proto__.new.call(this, {token: platform_interface_query.QueryPlatform._token});
    ;
  }).prototype = platform_interface_query.QueryPlatform.prototype;
  dart.addTypeTests(platform_interface_query.QueryPlatform);
  dart.addTypeCaches(platform_interface_query.QueryPlatform);
  dart.setMethodSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_query.QueryPlatform.__proto__),
    endAtDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    endAt: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    endBeforeDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable, core.Iterable]),
    endBefore: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    get: dart.fnType(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], [get_options.GetOptions]),
    limit: dart.fnType(platform_interface_query.QueryPlatform, [core.int]),
    limitToLast: dart.fnType(platform_interface_query.QueryPlatform, [core.int]),
    snapshots: dart.fnType(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], {includeMetadataChanges: core.bool}, {}),
    orderBy: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable$(core.List)]),
    startAfterDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    startAfter: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    startAtDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable, core.Iterable]),
    startAt: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    where: dart.fnType(platform_interface_query.QueryPlatform, [core.List$(core.List)]),
    whereFilter: dart.fnType(platform_interface_query.QueryPlatform, [filters.FilterPlatformInterface]),
    count: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, []),
    aggregate: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [platform_interface_query.AggregateField], [dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField)]),
    sum: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String]),
    average: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_query.QueryPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_query.QueryPlatform.__proto__),
    isCollectionGroupQuery: core.bool
  }));
  dart.setLibraryUri(platform_interface_query.QueryPlatform, I[55]);
  dart.setFieldSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getFields(platform_interface_query.QueryPlatform.__proto__),
    firestore: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    parameters: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.setStaticFieldSignature(platform_interface_query.QueryPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_query.QueryPlatform, {
    /*platform_interface_query.QueryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  query_web.QueryWeb = class QueryWeb extends platform_interface_query.QueryPlatform {
    get isCollectionGroupQuery() {
      return this[S$.isCollectionGroupQuery];
    }
    set isCollectionGroupQuery(value) {
      super.isCollectionGroupQuery = value;
    }
    static ['_#new#tearOff'](firestore, _path, _webQuery, opts) {
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
      return new query_web.QueryWeb.new(firestore, _path, _webQuery, {parameters: parameters, isCollectionGroupQuery: isCollectionGroupQuery});
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && query_web.QueryWeb.is(other) && other.firestore._equals(this.firestore) && other[S$._path] === this[S$._path] && other.isCollectionGroupQuery === this.isCollectionGroupQuery && (C[17] || CT.C17).equals(other.parameters, this.parameters);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S$._path], this.isCollectionGroupQuery, (C[17] || CT.C17).hash(this.parameters));
    }
    [S$._copyWithParameters](parameters) {
      let t82;
      return new query_web.QueryWeb.new(this.firestore, this[S$._path], this[S$._webQuery], {isCollectionGroupQuery: this.isCollectionGroupQuery, parameters: T$.MapOfString$dynamic().unmodifiable((t82 = T$.LinkedHashMapOfString$dynamic().from(this.parameters), (() => {
          t82[S$.$addAll](parameters);
          return t82;
        })()))});
    }
    [S$._buildWebQueryWithParameters]() {
      let query = this[S$._webQuery];
      for (let t82 of core.Iterable.as(this.parameters[S$.$_get]("orderBy"))) {
        let order = core.List.as(t82);
        query = query.orderBy(encode_utility.EncodeUtility.valueEncode(order[S$.$_get](0)), dart.dtest(order[S$.$_get](1)) ? "desc" : "asc");
      }
      if (this.parameters[S$.$_get]("startAt") != null) {
        query = query.startAt({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("startAt")))});
      }
      if (this.parameters[S$.$_get]("startAfter") != null) {
        query = query.startAfter({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("startAfter")))});
      }
      if (this.parameters[S$.$_get]("endAt") != null) {
        query = query.endAt({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("endAt")))});
      }
      if (this.parameters[S$.$_get]("endBefore") != null) {
        query = query.endBefore({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("endBefore")))});
      }
      if (this.parameters[S$.$_get]("limit") != null) {
        query = query.limit(core.num.as(this.parameters[S$.$_get]("limit")));
      }
      if (this.parameters[S$.$_get]("limitToLast") != null) {
        query = query.limitToLast(core.num.as(this.parameters[S$.$_get]("limitToLast")));
      }
      if (this.parameters[S$.$_get]("filters") != null) {
        let filter = T$.MapOfString$ObjectN().as(dart.nullCheck(this.parameters[S$.$_get]("filters")));
        query = query.filterWith(filter);
      }
      for (let t83 of core.Iterable.as(this.parameters[S$.$_get]("where"))) {
        let condition = core.List.as(t83);
        let fieldPath = encode_utility.EncodeUtility.valueEncode(condition[S$.$_get](0));
        let opStr = core.String.as(condition[S$.$_get](1));
        let value = encode_utility.EncodeUtility.valueEncode(condition[S$.$_get](2));
        query = query.where(fieldPath, opStr, value);
      }
      return query;
    }
    endAtDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", values, "endBefore", null]));
    }
    endAt(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", fields, "endBefore", null]));
    }
    endBeforeDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", null, "endBefore", values]));
    }
    endBefore(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", null, "endBefore", fields]));
    }
    get(options = C[5] || CT.C5) {
      return internals.convertWebExceptions(T$.FutureOfQuerySnapshotPlatform(), dart.fn(() => async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function*() {
        return web_utils.convertWebQuerySnapshot(this.firestore, yield this[S$._buildWebQueryWithParameters]().get(web_utils.convertGetOptions(options)), options.serverTimestampBehavior);
      }).bind(this)), T$.VoidToFutureOfQuerySnapshotPlatform()));
    }
    limit(limit) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", limit, "limitToLast", null]));
    }
    limitToLast(limit) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", null, "limitToLast", limit]));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = null;
      if (includeMetadataChanges) {
        querySnapshots = this[S$._buildWebQueryWithParameters]().onSnapshotMetadata;
      } else {
        querySnapshots = this[S$._buildWebQueryWithParameters]().onSnapshot;
      }
      return internals.convertWebExceptions(T$.StreamOfQuerySnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_query_snapshot.QuerySnapshotPlatform, dart.fn(webQuerySnapshot => web_utils.convertWebQuerySnapshot(this.firestore, webQuerySnapshot, messages$46pigeon$.ServerTimestampBehavior.none), T$.QuerySnapshotToQuerySnapshotPlatform())), T$.VoidToStreamOfQuerySnapshotPlatform()));
    }
    orderBy(orders) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders]));
    }
    startAfterDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", null, "startAfter", values]));
    }
    startAfter(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", null, "startAfter", fields]));
    }
    startAtDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", values, "startAfter", null]));
    }
    startAt(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", fields, "startAfter", null]));
    }
    where(conditions) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["where", conditions]));
    }
    whereFilter(filter) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["filters", filter.toJson()]));
    }
    count() {
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.count})]));
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      let fields = T$.JSArrayOfAggregateFieldN().of([aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30])[S$.$whereType](platform_interface_query.AggregateField);
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), fields[S$.$map](messages$46pigeon$.AggregateQuery, dart.fn(e => {
        if (platform_interface_query.count.is(e)) {
          return new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.count});
        } else if (platform_interface_query.sum.is(e)) {
          return new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.sum, field: e.field});
        } else if (platform_interface_query.average.is(e)) {
          return new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.average, field: e.field});
        } else {
          dart.throw(new core.UnsupportedError.new("Unsupported aggregate field type " + dart.str(e[S$.$runtimeType])));
        }
      }, T$.AggregateFieldToAggregateQuery()))[S$.$toList]());
    }
    sum(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.sum, field: field})]));
    }
    average(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.average, field: field})]));
    }
  };
  (query_web.QueryWeb.new = function(firestore, _path, _webQuery, opts) {
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
    this[S$._path] = _path;
    this[S$._webQuery] = _webQuery;
    this[S$.isCollectionGroupQuery] = isCollectionGroupQuery;
    query_web.QueryWeb.__proto__.new.call(this, firestore, parameters);
    ;
  }).prototype = query_web.QueryWeb.prototype;
  dart.addTypeTests(query_web.QueryWeb);
  dart.addTypeCaches(query_web.QueryWeb);
  dart.setMethodSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getMethods(query_web.QueryWeb.__proto__),
    [S$._copyWithParameters]: dart.fnType(query_web.QueryWeb, [core.Map$(core.String, dart.dynamic)]),
    [S$._buildWebQueryWithParameters]: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), []),
    where: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable$(core.List)])
  }));
  dart.setLibraryUri(query_web.QueryWeb, I[56]);
  dart.setFieldSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getFields(query_web.QueryWeb.__proto__),
    [S$._webQuery]: dart.finalFieldType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false))),
    [S$._path]: dart.finalFieldType(core.String),
    isCollectionGroupQuery: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(query_web.QueryWeb, ['_equals']);
  dart.defineExtensionAccessors(query_web.QueryWeb, ['hashCode']);
  collection_reference_web.CollectionReferenceWeb = class CollectionReferenceWeb extends query_web.QueryWeb {
    static ['_#new#tearOff'](_firestorePlatform, _webFirestore, path) {
      return new collection_reference_web.CollectionReferenceWeb.new(_firestorePlatform, _webFirestore, path);
    }
    get path() {
      return this[S$._delegate$7].path;
    }
    doc(path = null) {
      let documentReference = this[S$._delegate$7].doc(path);
      return new document_reference_web.DocumentReferenceWeb.new(this[S$._firestorePlatform], this[S$._webFirestore$1], documentReference.path);
    }
    get id() {
      return this[S$._delegate$7].id;
    }
    get parent() {
      let documentReference = this[S$._delegate$7].parent;
      if (documentReference == null) {
        return null;
      }
      return new document_reference_web.DocumentReferenceWeb.new(this[S$._firestorePlatform], this[S$._webFirestore$1], documentReference.path);
    }
    get [S$._pointer$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[27] || CT.C27)));
    }
  };
  (collection_reference_web.CollectionReferenceWeb.new = function(_firestorePlatform, _webFirestore, path) {
    this[S$._firestorePlatform] = _firestorePlatform;
    this[S$._webFirestore$1] = _webFirestore;
    this[S$._delegate$7] = _webFirestore.collection(path);
    collection_reference_web.CollectionReferenceWeb.__proto__.new.call(this, _firestorePlatform, path, _webFirestore.collection(path));
    ;
  }).prototype = collection_reference_web.CollectionReferenceWeb.prototype;
  dart.addTypeTests(collection_reference_web.CollectionReferenceWeb);
  dart.addTypeCaches(collection_reference_web.CollectionReferenceWeb);
  collection_reference_web.CollectionReferenceWeb[dart.implements] = () => [platform_interface_collection_reference.CollectionReferencePlatform];
  dart.setMethodSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getMethods(collection_reference_web.CollectionReferenceWeb.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getGetters(collection_reference_web.CollectionReferenceWeb.__proto__),
    path: core.String,
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    [S$._pointer$1]: pointer.Pointer
  }));
  dart.setLibraryUri(collection_reference_web.CollectionReferenceWeb, I[57]);
  dart.setFieldSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getFields(collection_reference_web.CollectionReferenceWeb.__proto__),
    [S$._webFirestore$1]: dart.finalFieldType(firestore$.Firestore),
    [S$._firestorePlatform]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._delegate$7]: dart.finalFieldType(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false)))
  }));
  platform_interface_document_reference.DocumentReferencePlatform = class DocumentReferencePlatform extends plugin_platform_interface.PlatformInterface {
    get firestore() {
      return this[S$.firestore$1];
    }
    set firestore(value) {
      super.firestore = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_document_reference.DocumentReferencePlatform._token);
    }
    get path() {
      return this[S$._pointer$2].path;
    }
    get id() {
      return this[S$._pointer$2].id;
    }
    get parent() {
      return this.firestore.collection(dart.nullCheck(this[S$._pointer$2].parentPath()));
    }
    collection(collectionPath) {
      return this.firestore.collection(this[S$._pointer$2].collectionPath(collectionPath));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    get(options = C[5] || CT.C5) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, function* get() {
        dart.throw(new core.UnimplementedError.new("get() is not implemented"));
      });
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      dart.throw(new core.UnimplementedError.new("snapshots() is not implemented"));
    }
    set(data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
    update(data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_document_reference.DocumentReferencePlatform.is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_document_reference.DocumentReferencePlatform)) + "(" + this.path + ")";
    }
  };
  (platform_interface_document_reference.DocumentReferencePlatform.new = function(firestore, path) {
    this[S$.firestore$1] = firestore;
    this[S$._pointer$2] = new pointer.Pointer.new(path);
    platform_interface_document_reference.DocumentReferencePlatform.__proto__.new.call(this, {token: platform_interface_document_reference.DocumentReferencePlatform._token});
    ;
  }).prototype = platform_interface_document_reference.DocumentReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_document_reference.DocumentReferencePlatform);
  dart.addTypeCaches(platform_interface_document_reference.DocumentReferencePlatform);
  dart.setMethodSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    collection: dart.fnType(platform_interface_collection_reference.CollectionReferencePlatform, [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], [get_options.GetOptions]),
    snapshots: dart.fnType(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], {includeMetadataChanges: core.bool}, {}),
    set: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(field_path.FieldPath, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    path: core.String,
    id: core.String,
    parent: platform_interface_collection_reference.CollectionReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_document_reference.DocumentReferencePlatform, I[58]);
  dart.setFieldSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    firestore: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._pointer$2]: dart.finalFieldType(pointer.Pointer)
  }));
  dart.setStaticFieldSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ['_token']);
  dart.defineExtensionMethods(platform_interface_document_reference.DocumentReferencePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_document_reference.DocumentReferencePlatform, ['hashCode']);
  dart.defineLazy(platform_interface_document_reference.DocumentReferencePlatform, {
    /*platform_interface_document_reference.DocumentReferencePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  document_reference_web.DocumentReferenceWeb = class DocumentReferenceWeb extends platform_interface_document_reference.DocumentReferencePlatform {
    get firestoreWeb() {
      return this[S$.firestoreWeb];
    }
    set firestoreWeb(value) {
      super.firestoreWeb = value;
    }
    static ['_#new#tearOff'](firestore, firestoreWeb, path) {
      return new document_reference_web.DocumentReferenceWeb.new(firestore, firestoreWeb, path);
    }
    set(data, options = null) {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$8].set(dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options)), T$.VoidToFutureOfvoid()));
    }
    update(data) {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$8].update(dart.nullCheck(encode_utility.EncodeUtility.encodeMapDataFieldPath(data))), T$.VoidToFutureOfvoid()));
    }
    get(options = C[5] || CT.C5) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        let documentSnapshot = (yield internals.convertWebExceptions(T$.FutureOrOfDocumentSnapshot(), dart.fn(() => this[S$._delegate$8].get(web_utils.convertGetOptions(options)), T$.VoidToFutureOfDocumentSnapshot())));
        return web_utils.convertWebDocumentSnapshot(this.firestore, documentSnapshot, options.serverTimestampBehavior);
      }).bind(this));
    }
    delete() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$8], 'delete'));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = this[S$._delegate$8].onSnapshot;
      if (includeMetadataChanges) {
        querySnapshots = this[S$._delegate$8].onMetadataChangesSnapshot;
      }
      return internals.convertWebExceptions(T$.StreamOfDocumentSnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webSnapshot => web_utils.convertWebDocumentSnapshot(this.firestore, webSnapshot, messages$46pigeon$.ServerTimestampBehavior.none), T$.DocumentSnapshotToDocumentSnapshotPlatform())), T$.VoidToStreamOfDocumentSnapshotPlatform()));
    }
  };
  (document_reference_web.DocumentReferenceWeb.new = function(firestore, firestoreWeb, path) {
    this[S$.firestoreWeb] = firestoreWeb;
    this[S$._delegate$8] = firestoreWeb.doc(path);
    document_reference_web.DocumentReferenceWeb.__proto__.new.call(this, firestore, path);
    ;
  }).prototype = document_reference_web.DocumentReferenceWeb.prototype;
  dart.addTypeTests(document_reference_web.DocumentReferenceWeb);
  dart.addTypeCaches(document_reference_web.DocumentReferenceWeb);
  dart.setMethodSignature(document_reference_web.DocumentReferenceWeb, () => ({
    __proto__: dart.getMethods(document_reference_web.DocumentReferenceWeb.__proto__),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.Object, dart.dynamic)])
  }));
  dart.setLibraryUri(document_reference_web.DocumentReferenceWeb, I[59]);
  dart.setFieldSignature(document_reference_web.DocumentReferenceWeb, () => ({
    __proto__: dart.getFields(document_reference_web.DocumentReferenceWeb.__proto__),
    firestoreWeb: dart.finalFieldType(firestore$.Firestore),
    [S$._delegate$8]: dart.finalFieldType(firestore$.DocumentReference)
  }));
  platform_interface_field_value_factory.FieldValueFactoryPlatform = class FieldValueFactoryPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return platform_interface_field_value_factory.FieldValueFactoryPlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_field_value_factory.FieldValueFactoryPlatform._token);
      platform_interface_field_value_factory.FieldValueFactoryPlatform._instance = instance;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_field_value_factory.FieldValueFactoryPlatform._token);
    }
    arrayUnion(elements) {
      dart.throw(new core.UnimplementedError.new("arrayUnion() is not implemented"));
    }
    arrayRemove(elements) {
      dart.throw(new core.UnimplementedError.new("arrayRemove() is not implemented"));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    serverTimestamp() {
      dart.throw(new core.UnimplementedError.new("serverTimestamp() is not implemented"));
    }
    increment(value) {
      dart.throw(new core.UnimplementedError.new("increment() is not implemented"));
    }
  };
  (platform_interface_field_value_factory.FieldValueFactoryPlatform.new = function() {
    platform_interface_field_value_factory.FieldValueFactoryPlatform.__proto__.new.call(this, {token: platform_interface_field_value_factory.FieldValueFactoryPlatform._token});
    ;
  }).prototype = platform_interface_field_value_factory.FieldValueFactoryPlatform.prototype;
  dart.addTypeTests(platform_interface_field_value_factory.FieldValueFactoryPlatform);
  dart.addTypeCaches(platform_interface_field_value_factory.FieldValueFactoryPlatform);
  dart.setMethodSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_field_value_factory.FieldValueFactoryPlatform.__proto__),
    arrayUnion: dart.fnType(dart.dynamic, [core.List]),
    arrayRemove: dart.fnType(dart.dynamic, [core.List]),
    delete: dart.fnType(dart.dynamic, []),
    serverTimestamp: dart.fnType(dart.dynamic, []),
    increment: dart.fnType(dart.dynamic, [core.num])
  }));
  dart.setStaticMethodSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['verify']);
  dart.setStaticGetterSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_field_value_factory.FieldValueFactoryPlatform, I[60]);
  dart.setStaticFieldSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_field_value_factory.FieldValueFactoryPlatform, {
    /*platform_interface_field_value_factory.FieldValueFactoryPlatform._instance*/get _instance() {
      return new method_channel_field_value_factory.MethodChannelFieldValueFactory.new();
    },
    set _instance(value) {},
    /*platform_interface_field_value_factory.FieldValueFactoryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  field_value_factory_web.FieldValueFactoryWeb = class FieldValueFactoryWeb extends platform_interface_field_value_factory.FieldValueFactoryPlatform {
    arrayRemove(elements) {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.arrayRemove(T$.ListN().as(encode_utility.EncodeUtility.valueEncode(elements))));
    }
    arrayUnion(elements) {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.arrayUnion(T$.ListN().as(encode_utility.EncodeUtility.valueEncode(elements))));
    }
    delete() {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.delete());
    }
    increment(value) {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.increment(value));
    }
    serverTimestamp() {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.serverTimestamp());
    }
    static ['_#new#tearOff']() {
      return new field_value_factory_web.FieldValueFactoryWeb.new();
    }
  };
  (field_value_factory_web.FieldValueFactoryWeb.new = function() {
    field_value_factory_web.FieldValueFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = field_value_factory_web.FieldValueFactoryWeb.prototype;
  dart.addTypeTests(field_value_factory_web.FieldValueFactoryWeb);
  dart.addTypeCaches(field_value_factory_web.FieldValueFactoryWeb);
  dart.setMethodSignature(field_value_factory_web.FieldValueFactoryWeb, () => ({
    __proto__: dart.getMethods(field_value_factory_web.FieldValueFactoryWeb.__proto__),
    arrayRemove: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    arrayUnion: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    delete: dart.fnType(field_value_web.FieldValueWeb, []),
    increment: dart.fnType(field_value_web.FieldValueWeb, [core.num]),
    serverTimestamp: dart.fnType(field_value_web.FieldValueWeb, [])
  }));
  dart.setLibraryUri(field_value_factory_web.FieldValueFactoryWeb, I[61]);
  const _is_JsObjectWrapper_default = Symbol('_is_JsObjectWrapper_default');
  js$0.JsObjectWrapper$ = dart.generic(T => {
    class JsObjectWrapper extends core.Object {
      get jsObject() {
        return this[S$.jsObject];
      }
      set jsObject(value) {
        super.jsObject = value;
      }
    }
    (JsObjectWrapper.fromJsObject = function(jsObject) {
      this[S$.jsObject] = jsObject;
      ;
    }).prototype = JsObjectWrapper.prototype;
    dart.addTypeTests(JsObjectWrapper);
    JsObjectWrapper.prototype[_is_JsObjectWrapper_default] = true;
    dart.addTypeCaches(JsObjectWrapper);
    dart.setLibraryUri(JsObjectWrapper, I[62]);
    dart.setFieldSignature(JsObjectWrapper, () => ({
      __proto__: dart.getFields(JsObjectWrapper.__proto__),
      jsObject: dart.finalFieldType(T)
    }));
    return JsObjectWrapper;
  });
  js$0.JsObjectWrapper = js$0.JsObjectWrapper$();
  dart.addTypeTests(js$0.JsObjectWrapper, _is_JsObjectWrapper_default);
  firestore$.Firestore = class Firestore extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.Firestore", false)) {
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    static getInstance(jsObject) {
      let t87, t86, t85, t84;
      t84 = firestore$.Firestore._expando;
      t85 = jsObject;
      t86 = t84._get(t85);
      return t86 == null ? (t87 = new firestore$.Firestore._fromJsObject(jsObject), t84._set(t85, t87), t87) : t86;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.Firestore._fromJsObject(jsObject);
    }
    batch() {
      return firestore$.WriteBatch.getInstance(dart.global.firebase_firestore.writeBatch(this.jsObject));
    }
    collection(collectionPath) {
      return firestore$.CollectionReference.getInstance(dart.global.firebase_firestore.collection(this.jsObject, collectionPath));
    }
    collectionGroup(collectionId) {
      return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.collectionGroup(this.jsObject, collectionId));
    }
    doc(documentPath) {
      return firestore$.DocumentReference.getInstance(dart.global.firebase_firestore.doc(this.jsObject, documentPath));
    }
    enablePersistence(settings = null) {
      if (settings != null && settings.synchronizeTabs === true) {
        return utils$.handleThenable(dart.void, dart.global.firebase_firestore.enableMultiTabIndexedDbPersistence(this.jsObject));
      }
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.enableIndexedDbPersistence(this.jsObject));
    }
    snapshotsInSync() {
      let controller = null;
      function controller$35get() {
        let t85;
        t85 = controller;
        return t85 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t85;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let onSnapshotsInSyncUnsubscribe = null;
      function onSnapshotsInSyncUnsubscribe$35get() {
        let t88;
        t88 = onSnapshotsInSyncUnsubscribe;
        return t88 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotsInSyncUnsubscribe")) : t88;
      }
      function onSnapshotsInSyncUnsubscribe$35set(onSnapshotsInSyncUnsubscribe$35param) {
        return onSnapshotsInSyncUnsubscribe = onSnapshotsInSyncUnsubscribe$35param;
      }
      let nextWrapper = js.allowInterop(T$.ObjectNToNull(), dart.fn(noValue => {
        controller$35get().add(null);
      }, T$.ObjectNToNull()));
      const startListen = () => {
        onSnapshotsInSyncUnsubscribe$35set(dart.global.firebase_firestore.onSnapshotsInSync(this.jsObject, dart.assertInterop(nextWrapper)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onSnapshotsInSyncUnsubscribe$35get()();
        controller$35get().close();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      controller$35set(T$.StreamControllerOfvoid().broadcast({onListen: startListen, onCancel: stopListen}));
      return controller$35get().stream;
    }
    clearPersistence() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.clearIndexedDbPersistence(this.jsObject));
    }
    runTransaction(updateFunction, maxAttempts) {
      let updateFunctionWrap = js.allowInterop(T$.dynamicToPromiseJsImpl(), dart.fn(transaction => utils$.handleFutureWithMapper(T$.ObjectN(), dart.dynamic, T$.FutureOfObjectN().as(updateFunction(firestore$.Transaction.getInstance(dart.packageJSType("firebase_firestore.Transaction", false).as(transaction)))), C[28] || CT.C28), T$.dynamicToPromiseJsImpl()));
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.runTransaction(this.jsObject, dart.assertInterop(updateFunctionWrap), {maxAttempts: maxAttempts})).then(dart.dynamic, dart.fn(value => utils$0.dartify(null), T$.voidTodynamic()));
    }
    useEmulator(host, port) {
      return dart.global.firebase_firestore.connectFirestoreEmulator(this.jsObject, host, port);
    }
    enableNetwork() {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_firestore.enableNetwork(this.jsObject));
    }
    disableNetwork() {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_firestore.disableNetwork(this.jsObject));
    }
    terminate() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.terminate(this.jsObject));
    }
    waitForPendingWrites() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.waitForPendingWrites(this.jsObject));
    }
    loadBundle(bundle) {
      return firestore$.LoadBundleTask.getInstance(dart.global.firebase_firestore.loadBundle(this.jsObject, bundle));
    }
    setIndexConfiguration(indexConfiguration) {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.setIndexConfiguration(this.jsObject, indexConfiguration));
    }
    namedQuery(name) {
      return async.async(T$.QueryOfQueryJsImpl(), (function* namedQuery() {
        let query = (yield utils$.handleThenable(dart.nullable(dart.packageJSType("firebase_firestore.Query", false)), dart.global.firebase_firestore.namedQuery(this.jsObject, name)));
        if (query == null) {
          dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", message: "Named query has not been found. Please check it has been loaded properly via loadBundle().", code: "non-existent-named-query"}));
        }
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(query);
      }).bind(this));
    }
    refEqual(left, right) {
      return dart.global.firebase_firestore.refEqual(left, right);
    }
    setLoggingEnabled(logLevel) {
      dart.global.firebase_firestore.setLogLevel(logLevel);
    }
  };
  (firestore$.Firestore._fromJsObject = function(jsObject) {
    firestore$.Firestore.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.Firestore.prototype;
  dart.addTypeTests(firestore$.Firestore);
  dart.addTypeCaches(firestore$.Firestore);
  dart.setMethodSignature(firestore$.Firestore, () => ({
    __proto__: dart.getMethods(firestore$.Firestore.__proto__),
    batch: dart.fnType(dart.nullable(firestore$.WriteBatch), []),
    collection: dart.fnType(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false)), [core.String]),
    collectionGroup: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.String]),
    doc: dart.fnType(firestore$.DocumentReference, [core.String]),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(dart.packageJSType("PersistenceSettings", false))]),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    runTransaction: dart.fnType(async.Future, [dart.fnType(dart.dynamic, [dart.nullable(firestore$.Transaction)]), core.int]),
    useEmulator: dart.fnType(dart.void, [core.String, core.int]),
    enableNetwork: dart.fnType(async.Future, []),
    disableNetwork: dart.fnType(async.Future, []),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), []),
    loadBundle: dart.fnType(firestore$.LoadBundleTask, [typed_data.Uint8List]),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [core.String]),
    namedQuery: dart.fnType(async.Future$(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false))), [core.String]),
    refEqual: dart.fnType(core.bool, [dart.dynamic, dart.dynamic]),
    setLoggingEnabled: dart.fnType(dart.void, [core.String])
  }));
  dart.setStaticMethodSignature(firestore$.Firestore, () => ['getInstance']);
  dart.setGetterSignature(firestore$.Firestore, () => ({
    __proto__: dart.getGetters(firestore$.Firestore.__proto__),
    app: app$.App
  }));
  dart.setLibraryUri(firestore$.Firestore, I[63]);
  dart.setStaticFieldSignature(firestore$.Firestore, () => ['_expando']);
  dart.defineLazy(firestore$.Firestore, {
    /*firestore$.Firestore._expando*/get _expando() {
      return new (T$.ExpandoOfFirestore()).new();
    }
  }, false);
  firestore$.LoadBundleTask = class LoadBundleTask extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.LoadBundleTask", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.LoadBundleTask._fromJsObject(jsObject);
    }
    static getInstance(jsObject) {
      let t93, t92, t91, t90;
      t90 = firestore$.LoadBundleTask._expando;
      t91 = jsObject;
      t92 = t90._get(t91);
      return t92 == null ? (t93 = new firestore$.LoadBundleTask._fromJsObject(jsObject), t90._set(t91, t93), t93) : t92;
    }
    get stream() {
      let controller = null;
      function controller$35get() {
        let t91;
        t91 = controller;
        return t91 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t91;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      controller$35set(T$.StreamControllerOfLoadBundleTaskProgress().new({onListen: dart.fn(() => {
          this.jsObject.onProgress(js.allowInterop(T$.LoadBundleTaskProgressJsImplTovoid(), dart.fn(data => {
            let taskProgress = new firestore$.LoadBundleTaskProgress._fromJsObject(data);
            if (load_bundle_task_state.LoadBundleTaskState.error !== taskProgress.taskState) {
              controller$35get().add(taskProgress);
            }
          }, T$.LoadBundleTaskProgressJsImplTovoid())));
          this.jsObject.then(js.allowInterop(T$.dynamicTodynamic(), dart.fn(value => {
            controller$35get().close();
          }, T$.dynamicToNull())), js.allowInterop(T$.FirestoreErrorTodynamic(), dart.fn(error => {
            controller$35get().addError(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", message: error.message, code: "load-bundle-error", stackTrace: new core._StringStackTrace.new(error.stack)}));
            controller$35get().close();
          }, T$.FirestoreErrorToNull())));
        }, T$.VoidTovoid()), onCancel: dart.fn(() => {
          controller$35get().close();
        }, T$.VoidToNull())}));
      return controller$35get().stream;
    }
  };
  (firestore$.LoadBundleTask._fromJsObject = function(jsObject) {
    firestore$.LoadBundleTask.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.LoadBundleTask.prototype;
  dart.addTypeTests(firestore$.LoadBundleTask);
  dart.addTypeCaches(firestore$.LoadBundleTask);
  dart.setStaticMethodSignature(firestore$.LoadBundleTask, () => ['getInstance']);
  dart.setGetterSignature(firestore$.LoadBundleTask, () => ({
    __proto__: dart.getGetters(firestore$.LoadBundleTask.__proto__),
    stream: async.Stream$(firestore$.LoadBundleTaskProgress)
  }));
  dart.setLibraryUri(firestore$.LoadBundleTask, I[63]);
  dart.setStaticFieldSignature(firestore$.LoadBundleTask, () => ['_expando']);
  dart.defineLazy(firestore$.LoadBundleTask, {
    /*firestore$.LoadBundleTask._expando*/get _expando() {
      return new (T$.ExpandoOfLoadBundleTask()).new();
    }
  }, false);
  firestore$.LoadBundleTaskProgress = class LoadBundleTaskProgress extends js$0.JsObjectWrapper$(dart.packageJSType("LoadBundleTaskProgressJsImpl", false)) {
    get taskState() {
      return this[S$.taskState];
    }
    set taskState(value) {
      super.taskState = value;
    }
    get bytesLoaded() {
      return this[S$.bytesLoaded];
    }
    set bytesLoaded(value) {
      super.bytesLoaded = value;
    }
    get documentsLoaded() {
      return this[S$.documentsLoaded];
    }
    set documentsLoaded(value) {
      super.documentsLoaded = value;
    }
    get totalBytes() {
      return this[S$.totalBytes];
    }
    set totalBytes(value) {
      super.totalBytes = value;
    }
    get totalDocuments() {
      return this[S$.totalDocuments];
    }
    set totalDocuments(value) {
      super.totalDocuments = value;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.LoadBundleTaskProgress._fromJsObject(jsObject);
    }
    static getInstance(jsObject) {
      let t96, t95, t94, t93;
      t93 = firestore$.LoadBundleTaskProgress._expando;
      t94 = jsObject;
      t95 = t93._get(t94);
      return t95 == null ? (t96 = new firestore$.LoadBundleTaskProgress._fromJsObject(jsObject), t93._set(t94, t96), t96) : t95;
    }
  };
  (firestore$.LoadBundleTaskProgress._fromJsObject = function(jsObject) {
    this[S$.taskState] = load_bundle_task_state$.convertToTaskState(jsObject.taskState[S$.$toLowerCase]());
    this[S$.bytesLoaded] = core.int.parse(jsObject.bytesLoaded);
    this[S$.documentsLoaded] = jsObject.documentsLoaded;
    this[S$.totalBytes] = core.int.parse(jsObject.totalBytes);
    this[S$.totalDocuments] = jsObject.totalDocuments;
    firestore$.LoadBundleTaskProgress.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.LoadBundleTaskProgress.prototype;
  dart.addTypeTests(firestore$.LoadBundleTaskProgress);
  dart.addTypeCaches(firestore$.LoadBundleTaskProgress);
  dart.setStaticMethodSignature(firestore$.LoadBundleTaskProgress, () => ['getInstance']);
  dart.setLibraryUri(firestore$.LoadBundleTaskProgress, I[63]);
  dart.setFieldSignature(firestore$.LoadBundleTaskProgress, () => ({
    __proto__: dart.getFields(firestore$.LoadBundleTaskProgress.__proto__),
    taskState: dart.finalFieldType(load_bundle_task_state.LoadBundleTaskState),
    bytesLoaded: dart.finalFieldType(core.int),
    documentsLoaded: dart.finalFieldType(core.int),
    totalBytes: dart.finalFieldType(core.int),
    totalDocuments: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(firestore$.LoadBundleTaskProgress, () => ['_expando']);
  dart.defineLazy(firestore$.LoadBundleTaskProgress, {
    /*firestore$.LoadBundleTaskProgress._expando*/get _expando() {
      return new (T$.ExpandoOfLoadBundleTaskProgress()).new();
    }
  }, false);
  firestore$._Updatable = class _Updatable extends core.Object {};
  firestore$._Updatable[dart.mixinOn] = Object => class _Updatable extends Object {
    [S$._wrapUpdateFunctionCall](T, jsObject, data, documentRef = null) {
      let args = [utils$0.jsify(data)];
      if (documentRef != null) {
        args[S$.$insert](0, documentRef.jsObject);
      }
      return dart.nullable(T).as(utils$.callMethod(core.Object.as(jsObject), "update", args));
    }
  };
  (firestore$._Updatable[dart.mixinNew] = function() {
  }).prototype = firestore$._Updatable.prototype;
  dart.addTypeTests(firestore$._Updatable);
  dart.addTypeCaches(firestore$._Updatable);
  firestore$._Updatable[dart.implements] = () => [core.Object];
  dart.setMethodSignature(firestore$._Updatable, () => ({
    __proto__: dart.getMethods(firestore$._Updatable.__proto__),
    [S$._wrapUpdateFunctionCall]: dart.gFnType(T => [dart.nullable(T), [dart.dynamic, core.Map$(core.String, dart.dynamic)], [dart.nullable(firestore$.DocumentReference)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(firestore$._Updatable, I[63]);
  const JsObjectWrapper__Updatable$36 = class JsObjectWrapper__Updatable extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.WriteBatch", false)) {};
  (JsObjectWrapper__Updatable$36.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36, firestore$._Updatable);
  firestore$.WriteBatch = class WriteBatch extends JsObjectWrapper__Updatable$36 {
    static getInstance(jsObject) {
      let t96, t95, t94, t93;
      t93 = firestore$.WriteBatch._expando;
      t94 = jsObject;
      t95 = t93._get(t94);
      return t95 == null ? (t96 = new firestore$.WriteBatch._fromJsObject(jsObject), t93._set(t94, t96), t96) : t95;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.WriteBatch._fromJsObject(jsObject);
    }
    commit() {
      return utils$.handleThenable(dart.void, this.jsObject.commit());
    }
    delete(documentRef) {
      return firestore$.WriteBatch.getInstance(this.jsObject.delete(documentRef.jsObject));
    }
    set(documentRef, data, options = null) {
      let jsObjectSet = options != null ? this.jsObject.set(documentRef.jsObject, utils$0.jsify(data), options) : this.jsObject.set(documentRef.jsObject, utils$0.jsify(data));
      return firestore$.WriteBatch.getInstance(jsObjectSet);
    }
    update(documentRef, data) {
      return firestore$.WriteBatch.getInstance(dart.packageJSType("firebase_firestore.WriteBatch", false).as(this[S$._wrapUpdateFunctionCall](dart.dynamic, this.jsObject, data, documentRef)));
    }
  };
  (firestore$.WriteBatch._fromJsObject = function(jsObject) {
    firestore$.WriteBatch.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.WriteBatch.prototype;
  dart.addTypeTests(firestore$.WriteBatch);
  dart.addTypeCaches(firestore$.WriteBatch);
  dart.setMethodSignature(firestore$.WriteBatch, () => ({
    __proto__: dart.getMethods(firestore$.WriteBatch.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(firestore$.WriteBatch, [firestore$.DocumentReference]),
    set: dart.fnType(firestore$.WriteBatch, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(firestore$.WriteBatch, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore$.WriteBatch, () => ['getInstance']);
  dart.setLibraryUri(firestore$.WriteBatch, I[63]);
  dart.setStaticFieldSignature(firestore$.WriteBatch, () => ['_expando']);
  dart.defineLazy(firestore$.WriteBatch, {
    /*firestore$.WriteBatch._expando*/get _expando() {
      return new (T$.ExpandoOfWriteBatch()).new();
    }
  }, false);
  const JsObjectWrapper__Updatable$36$ = class JsObjectWrapper__Updatable extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.DocumentReference", false)) {};
  (JsObjectWrapper__Updatable$36$.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36$.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36$.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36$, firestore$._Updatable);
  firestore$.DocumentReference = class DocumentReference extends JsObjectWrapper__Updatable$36$ {
    get firestore() {
      return firestore$.Firestore.getInstance(this.jsObject.firestore);
    }
    get id() {
      return this.jsObject.id;
    }
    get parent() {
      return firestore$.CollectionReference.getInstance(this.jsObject.parent);
    }
    get path() {
      return this.jsObject.path;
    }
    static getInstance(jsObject) {
      let t96, t95, t94, t93;
      t93 = firestore$.DocumentReference._expando;
      t94 = jsObject;
      t95 = t93._get(t94);
      return t95 == null ? (t96 = new firestore$.DocumentReference._fromJsObject(jsObject), t93._set(t94, t96), t96) : t95;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.DocumentReference._fromJsObject(jsObject);
    }
    collection(collectionPath) {
      return firestore$.CollectionReference.getInstance(dart.global.firebase_firestore.collection(this.firestore.jsObject, this.path + "/" + collectionPath));
    }
    delete() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.deleteDoc(this.jsObject));
    }
    get(options = null) {
      if (options == null || options.source === "default") {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDoc(this.jsObject)).then(firestore$.DocumentSnapshot, C[29] || CT.C29);
      } else if (options.source === "server") {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDocFromServer(this.jsObject)).then(firestore$.DocumentSnapshot, C[29] || CT.C29);
      } else {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDocFromCache(this.jsObject)).then(firestore$.DocumentSnapshot, C[29] || CT.C29);
      }
    }
    get onSnapshot() {
      return this[S$._createSnapshotStream]().stream;
    }
    get onMetadataChangesSnapshot() {
      return this[S$._createSnapshotStream]({includeMetadataChanges: true}).stream;
    }
    [S$._createSnapshotStream](options = null) {
      let onSnapshotUnsubscribe = null;
      function onSnapshotUnsubscribe$35get() {
        let t94;
        t94 = onSnapshotUnsubscribe;
        return t94 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotUnsubscribe")) : t94;
      }
      function onSnapshotUnsubscribe$35set(onSnapshotUnsubscribe$35param) {
        return onSnapshotUnsubscribe = onSnapshotUnsubscribe$35param;
      }
      let controller = null;
      function controller$35get() {
        let t97;
        t97 = controller;
        return t97 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t97;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let nextWrapper = js.allowInterop(T$.DocumentSnapshotJsImplToNull(), dart.fn(snapshot => {
        controller$35get().add(firestore$.DocumentSnapshot.getInstance(snapshot));
      }, T$.DocumentSnapshotJsImplToNull()));
      let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => controller$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
      const startListen = () => {
        onSnapshotUnsubscribe$35set(options != null ? dart.global.firebase_firestore.onSnapshot(this.jsObject, options, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)) : dart.global.firebase_firestore.onSnapshot(this.jsObject, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onSnapshotUnsubscribe$35get()();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      return controller$35set(T$.StreamControllerOfDocumentSnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
    }
    set(data, options = null) {
      let jsObjectSet = options != null ? dart.global.firebase_firestore.setDoc(this.jsObject, utils$0.jsify(data), options) : dart.global.firebase_firestore.setDoc(this.jsObject, utils$0.jsify(data));
      return utils$.handleThenable(dart.void, jsObjectSet);
    }
    update(data) {
      let alternatingFieldValues = data[S$.$keys][S$.$map](core.List, dart.fn(e => [utils$0.jsify(e), utils$0.jsify(data[S$.$_get](e))], T$.FieldPathToList()))[S$.$expand](dart.dynamic, dart.fn(e => e, T$.ListToList()))[S$.$toList]();
      return utils$.handleThenable(dart.void, dart.packageJSType("Promise", false).as(utils$.callMethod(dart.global.firebase_firestore.updateDoc, "apply", [null, (() => {
          let t99 = [this.jsObject];
          t99[S$.$addAll](alternatingFieldValues);
          return t99;
        })()])));
    }
  };
  (firestore$.DocumentReference._fromJsObject = function(jsObject) {
    firestore$.DocumentReference.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.DocumentReference.prototype;
  dart.addTypeTests(firestore$.DocumentReference);
  dart.addTypeCaches(firestore$.DocumentReference);
  dart.setMethodSignature(firestore$.DocumentReference, () => ({
    __proto__: dart.getMethods(firestore$.DocumentReference.__proto__),
    collection: dart.fnType(dart.nullable(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))), [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(firestore$.DocumentSnapshot), [], [dart.nullable(dart.packageJSType("GetOptions", false))]),
    [S$._createSnapshotStream]: dart.fnType(async.StreamController$(firestore$.DocumentSnapshot), [], [dart.nullable(dart.packageJSType("DocumentListenOptions", false))]),
    set: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(dart.packageJSType("firebase_firestore.FieldPath", false), dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore$.DocumentReference, () => ['getInstance']);
  dart.setGetterSignature(firestore$.DocumentReference, () => ({
    __proto__: dart.getGetters(firestore$.DocumentReference.__proto__),
    firestore: firestore$.Firestore,
    id: core.String,
    parent: dart.nullable(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))),
    path: core.String,
    onSnapshot: async.Stream$(firestore$.DocumentSnapshot),
    onMetadataChangesSnapshot: async.Stream$(firestore$.DocumentSnapshot)
  }));
  dart.setLibraryUri(firestore$.DocumentReference, I[63]);
  dart.setStaticFieldSignature(firestore$.DocumentReference, () => ['_expando']);
  dart.defineLazy(firestore$.DocumentReference, {
    /*firestore$.DocumentReference._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentReference()).new();
    }
  }, false);
  const _is_Query_default$ = Symbol('_is_Query_default');
  firestore$.Query$ = dart.generic(T => {
    class Query extends js$0.JsObjectWrapper$(T) {
      get firestore() {
        return firestore$.Firestore.getInstance(this.jsObject.firestore);
      }
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (firestore$.Query$(T)).fromJsObject(jsObject);
      }
      endAt(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.endAt, snapshot, fieldValues))));
      }
      endBefore(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.endBefore, snapshot, fieldValues))));
      }
      get(options = null) {
        if (options == null || options.source === "default") {
          return utils$.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocs(this.jsObject)).then(firestore$.QuerySnapshot, C[30] || CT.C30);
        } else if (options.source === "server") {
          return utils$.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocsFromServer(this.jsObject)).then(firestore$.QuerySnapshot, C[30] || CT.C30);
        } else {
          return utils$.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocsFromCache(this.jsObject)).then(firestore$.QuerySnapshot, C[30] || CT.C30);
        }
      }
      limit(limit) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.limit(limit)));
      }
      limitToLast(limit) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.limitToLast(limit)));
      }
      get onSnapshot() {
        let t101, t100;
        t100 = this[S$.__Query_onSnapshot];
        return t100 == null ? (t101 = this[S$._createSnapshotStream](false).stream, this[S$.__Query_onSnapshot] == null ? this[S$.__Query_onSnapshot] = t101 : dart.throw(new _internal.LateError.fieldADI("onSnapshot"))) : t100;
      }
      get onSnapshotMetadata() {
        let t101, t100;
        t100 = this[S$.__Query_onSnapshotMetadata];
        return t100 == null ? (t101 = this[S$._createSnapshotStream](true).stream, this[S$.__Query_onSnapshotMetadata] == null ? this[S$.__Query_onSnapshotMetadata] = t101 : dart.throw(new _internal.LateError.fieldADI("onSnapshotMetadata"))) : t100;
      }
      [S$._createSnapshotStream](includeMetadataChanges) {
        let onSnapshotUnsubscribe = null;
        function onSnapshotUnsubscribe$35get() {
          let t101;
          t101 = onSnapshotUnsubscribe;
          return t101 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotUnsubscribe")) : t101;
        }
        function onSnapshotUnsubscribe$35set(onSnapshotUnsubscribe$35param) {
          return onSnapshotUnsubscribe = onSnapshotUnsubscribe$35param;
        }
        let controller = null;
        function controller$35get() {
          let t104;
          t104 = controller;
          return t104 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t104;
        }
        function controller$35set(controller$35param) {
          return controller = controller$35param;
        }
        let nextWrapper = js.allowInterop(T$.QuerySnapshotJsImplToNull(), dart.fn(snapshot => {
          controller$35get().add(new firestore$.QuerySnapshot._fromJsObject(snapshot));
        }, T$.QuerySnapshotJsImplToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => controller$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
        let options = {includeMetadataChanges: includeMetadataChanges};
        const startListen = () => {
          onSnapshotUnsubscribe$35set(dart.global.firebase_firestore.onSnapshot(this.jsObject, options, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)));
        };
        dart.fn(startListen, T$.VoidTovoid());
        function stopListen() {
          onSnapshotUnsubscribe$35get()();
        }
        dart.fn(stopListen, T$.VoidTovoid());
        return controller$35set(T$.StreamControllerOfQuerySnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
      }
      orderBy(fieldPath, directionStr = null) {
        let jsObjectOrderBy = directionStr != null ? dart.global.firebase_firestore.orderBy(fieldPath, directionStr) : dart.global.firebase_firestore.orderBy(fieldPath);
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, jsObjectOrderBy));
      }
      startAfter(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.startAfter, snapshot, fieldValues))));
      }
      startAt(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.startAt, snapshot, fieldValues))));
      }
      where(fieldPath, opStr, value) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.where(fieldPath, opStr, utils$0.jsify(value))));
      }
      [S$._createQueryConstraint](S, method, snapshot, fieldValues) {
        if (snapshot == null && fieldValues == null) {
          dart.throw(new core.ArgumentError.new("Please provide either snapshot or fieldValues parameter."));
        }
        let args = snapshot != null ? T$.JSArrayOfDocumentSnapshotJsImpl().of([snapshot.jsObject]) : dart.nullCheck(fieldValues)[S$.$map](dart.dynamic, C[28] || CT.C28)[S$.$toList]();
        return dart.nullable(S).as(utils$.callMethod(method, "apply", [null, utils$0.jsify(args)]));
      }
      [S$._parseFilterWith](map) {
        if (map[S$.$_get]("fieldPath") != null) {
          let fieldPath = encode_utility.EncodeUtility.valueEncode(map[S$.$_get]("fieldPath"));
          let opStr = core.String.as(dart.nullCheck(map[S$.$_get]("op")));
          let value = encode_utility.EncodeUtility.valueEncode(map[S$.$_get]("value"));
          return dart.global.firebase_firestore.where(fieldPath, opStr, utils$0.jsify(value));
        }
        let opStr = core.String.as(dart.nullCheck(map[S$.$_get]("op")));
        let filters = core.List.as(dart.nullCheck(map[S$.$_get]("queries")));
        let jsFilters = [];
        for (let t106 of filters) {
          let filter = T$.MapOfString$ObjectN().as(t106);
          jsFilters[S$.$add](this[S$._parseFilterWith](filter));
        }
        if (opStr === "OR") {
          return core.Object.as(utils$.callMethod(dart.global.firebase_firestore.or, "apply", [null, jsFilters]));
        } else if (opStr === "AND") {
          return core.Object.as(utils$.callMethod(dart.global.firebase_firestore.and, "apply", [null, jsFilters]));
        }
        dart.throw(core.Exception.new("InvalidOperator"));
      }
      filterWith(map) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._parseFilterWith](map))));
      }
    }
    (Query.fromJsObject = function(jsObject) {
      this[S$.__Query_onSnapshot] = null;
      this[S$.__Query_onSnapshotMetadata] = null;
      Query.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = Query.prototype;
    dart.addTypeTests(Query);
    Query.prototype[_is_Query_default$] = true;
    dart.addTypeCaches(Query);
    dart.setMethodSignature(Query, () => ({
      __proto__: dart.getMethods(Query.__proto__),
      endAt: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      endBefore: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      get: dart.fnType(async.Future$(firestore$.QuerySnapshot), [], [dart.nullable(dart.packageJSType("GetOptions", false))]),
      limit: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.num]),
      limitToLast: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.num]),
      [S$._createSnapshotStream]: dart.fnType(async.StreamController$(firestore$.QuerySnapshot), [core.bool]),
      orderBy: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [dart.dynamic], [dart.nullable(core.String)]),
      startAfter: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      startAt: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      where: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [dart.dynamic, core.String, dart.dynamic]),
      [S$._createQueryConstraint]: dart.gFnType(S => [dart.nullable(S), [core.Object, dart.nullable(firestore$.DocumentSnapshot), dart.nullable(core.List)]], S => [dart.nullable(core.Object)]),
      [S$._parseFilterWith]: dart.fnType(core.Object, [core.Map$(core.String, dart.nullable(core.Object))]),
      filterWith: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.Map$(core.String, dart.nullable(core.Object))])
    }));
    dart.setGetterSignature(Query, () => ({
      __proto__: dart.getGetters(Query.__proto__),
      firestore: firestore$.Firestore,
      onSnapshot: async.Stream$(firestore$.QuerySnapshot),
      onSnapshotMetadata: async.Stream$(firestore$.QuerySnapshot)
    }));
    dart.setLibraryUri(Query, I[63]);
    dart.setFieldSignature(Query, () => ({
      __proto__: dart.getFields(Query.__proto__),
      [S$.__Query_onSnapshot]: dart.fieldType(dart.nullable(async.Stream$(firestore$.QuerySnapshot))),
      [S$.__Query_onSnapshotMetadata]: dart.fieldType(dart.nullable(async.Stream$(firestore$.QuerySnapshot)))
    }));
    return Query;
  });
  firestore$.Query = firestore$.Query$();
  dart.addTypeTests(firestore$.Query, _is_Query_default$);
  const _is_CollectionReference_default$ = Symbol('_is_CollectionReference_default');
  firestore$.CollectionReference$ = dart.generic(T => {
    class CollectionReference extends firestore$.Query$(T) {
      get id() {
        return this.jsObject.id;
      }
      get parent() {
        return firestore$.DocumentReference.getInstance(this.jsObject.parent);
      }
      get path() {
        return this.jsObject.path;
      }
      static getInstance(jsObject) {
        let t110, t109, t108, t107;
        t107 = firestore$.CollectionReference._expando;
        t108 = jsObject;
        t109 = t107._get(t108);
        return t109 == null ? (t110 = new (T$.CollectionReferenceOfCollectionReferenceJsImpl())._fromJsObject(jsObject), t107._set(t108, t110), t110) : t109;
      }
      static new() {
        return new (firestore$.CollectionReference$(T))._fromJsObject(new dart.global.firebase_firestore.CollectionReference());
      }
      static ['_#new#tearOff'](T) {
        return firestore$.CollectionReference$(T).new();
      }
      static ['_#_fromJsObject#tearOff'](T, jsObject) {
        return new (firestore$.CollectionReference$(T))._fromJsObject(jsObject);
      }
      add(data) {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentReference", false), dart.global.firebase_firestore.addDoc(this.jsObject, utils$0.jsify(data))).then(firestore$.DocumentReference, C[31] || CT.C31);
      }
      doc(documentPath = null) {
        let ref = documentPath != null ? dart.global.firebase_firestore.doc(this.jsObject, documentPath) : dart.global.firebase_firestore.doc(this.jsObject);
        return firestore$.DocumentReference.getInstance(ref);
      }
      isEqual(other) {
        return dart.global.firebase_firestore.queryEqual(this.jsObject, other.jsObject);
      }
    }
    (CollectionReference._fromJsObject = function(jsObject) {
      CollectionReference.__proto__.fromJsObject.call(this, T.as(jsObject));
      ;
    }).prototype = CollectionReference.prototype;
    dart.addTypeTests(CollectionReference);
    CollectionReference.prototype[_is_CollectionReference_default$] = true;
    dart.addTypeCaches(CollectionReference);
    dart.setMethodSignature(CollectionReference, () => ({
      __proto__: dart.getMethods(CollectionReference.__proto__),
      add: dart.fnType(async.Future$(firestore$.DocumentReference), [core.Map$(core.String, dart.dynamic)]),
      doc: dart.fnType(firestore$.DocumentReference, [], [dart.nullable(core.String)]),
      isEqual: dart.fnType(core.bool, [firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))])
    }));
    dart.setStaticMethodSignature(CollectionReference, () => ['getInstance', 'new']);
    dart.setGetterSignature(CollectionReference, () => ({
      __proto__: dart.getGetters(CollectionReference.__proto__),
      id: core.String,
      parent: dart.nullable(firestore$.DocumentReference),
      path: core.String
    }));
    dart.setLibraryUri(CollectionReference, I[63]);
    dart.setStaticFieldSignature(CollectionReference, () => ['_expando']);
    return CollectionReference;
  });
  firestore$.CollectionReference = firestore$.CollectionReference$();
  dart.defineLazy(firestore$.CollectionReference, {
    /*firestore$.CollectionReference._expando*/get _expando() {
      return new (T$.ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl()).new();
    }
  }, false);
  dart.addTypeTests(firestore$.CollectionReference, _is_CollectionReference_default$);
  firestore$.DocumentChange = class DocumentChange extends js$0.JsObjectWrapper$(dart.packageJSType("DocumentChangeJsImpl", false)) {
    get type() {
      return this.jsObject.type;
    }
    get doc() {
      return firestore$.DocumentSnapshot.getInstance(this.jsObject.doc);
    }
    get oldIndex() {
      return this.jsObject.oldIndex;
    }
    get newIndex() {
      return this.jsObject.newIndex;
    }
    static getInstance(jsObject) {
      let t110, t109, t108, t107;
      t107 = firestore$.DocumentChange._expando;
      t108 = jsObject;
      t109 = t107._get(t108);
      return t109 == null ? (t110 = new firestore$.DocumentChange._fromJsObject(jsObject), t107._set(t108, t110), t110) : t109;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.DocumentChange._fromJsObject(jsObject);
    }
  };
  (firestore$.DocumentChange._fromJsObject = function(jsObject) {
    firestore$.DocumentChange.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.DocumentChange.prototype;
  dart.addTypeTests(firestore$.DocumentChange);
  dart.addTypeCaches(firestore$.DocumentChange);
  dart.setStaticMethodSignature(firestore$.DocumentChange, () => ['getInstance']);
  dart.setGetterSignature(firestore$.DocumentChange, () => ({
    __proto__: dart.getGetters(firestore$.DocumentChange.__proto__),
    type: core.String,
    doc: dart.nullable(firestore$.DocumentSnapshot),
    oldIndex: core.num,
    newIndex: core.num
  }));
  dart.setLibraryUri(firestore$.DocumentChange, I[63]);
  dart.setStaticFieldSignature(firestore$.DocumentChange, () => ['_expando']);
  dart.defineLazy(firestore$.DocumentChange, {
    /*firestore$.DocumentChange._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentChange()).new();
    }
  }, false);
  firestore$.DocumentSnapshot = class DocumentSnapshot extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.DocumentSnapshot", false)) {
    get exists() {
      return this.jsObject.exists();
    }
    get id() {
      return this.jsObject.id;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get ref() {
      return firestore$.DocumentReference.getInstance(this.jsObject.ref);
    }
    static getInstance(jsObject) {
      let t110, t109, t108, t107;
      t107 = firestore$.DocumentSnapshot._expando;
      t108 = jsObject;
      t109 = t107._get(t108);
      return t109 == null ? (t110 = new firestore$.DocumentSnapshot._fromJsObject(jsObject), t107._set(t108, t110), t110) : t109;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.DocumentSnapshot._fromJsObject(jsObject);
    }
    data(options = null) {
      return T$.MapNOfString$dynamic().as(utils$0.dartify(this.jsObject.data(options)));
    }
    get(fieldPath) {
      return utils$0.dartify(this.jsObject.get(fieldPath));
    }
    isEqual(other) {
      return dart.global.firebase_firestore.snapshotEqual(this.jsObject, other.jsObject);
    }
  };
  (firestore$.DocumentSnapshot._fromJsObject = function(jsObject) {
    firestore$.DocumentSnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.DocumentSnapshot.prototype;
  dart.addTypeTests(firestore$.DocumentSnapshot);
  dart.addTypeCaches(firestore$.DocumentSnapshot);
  dart.setMethodSignature(firestore$.DocumentSnapshot, () => ({
    __proto__: dart.getMethods(firestore$.DocumentSnapshot.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), [], [dart.nullable(dart.packageJSType("SnapshotOptions", false))]),
    get: dart.fnType(dart.dynamic, [dart.dynamic]),
    isEqual: dart.fnType(core.bool, [firestore$.DocumentSnapshot])
  }));
  dart.setStaticMethodSignature(firestore$.DocumentSnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore$.DocumentSnapshot, () => ({
    __proto__: dart.getGetters(firestore$.DocumentSnapshot.__proto__),
    exists: core.bool,
    id: core.String,
    metadata: dart.packageJSType("firebase_firestore.SnapshotMetadata", false),
    ref: dart.nullable(firestore$.DocumentReference)
  }));
  dart.setLibraryUri(firestore$.DocumentSnapshot, I[63]);
  dart.setStaticFieldSignature(firestore$.DocumentSnapshot, () => ['_expando']);
  dart.defineLazy(firestore$.DocumentSnapshot, {
    /*firestore$.DocumentSnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentSnapshot()).new();
    }
  }, false);
  firestore$.QuerySnapshot = class QuerySnapshot extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.QuerySnapshot", false)) {
    docChanges(options = null) {
      let changes = options != null ? this.jsObject.docChanges(dart.nullable(dart.packageJSType("SnapshotListenOptions", false)).as(utils$0.jsify(options))) : this.jsObject.docChanges();
      return changes[S$.$map](firestore$.DocumentChange, dart.fn(e => firestore$.DocumentChange.getInstance(dart.packageJSType("DocumentChangeJsImpl", false).as(e)), T$.dynamicToDocumentChange()))[S$.$toList]();
    }
    get docs() {
      return this.jsObject.docs[S$.$map](firestore$.DocumentSnapshot, dart.fn(e => firestore$.DocumentSnapshot.getInstance(dart.packageJSType("firebase_firestore.DocumentSnapshot", false).as(e)), T$.dynamicToDocumentSnapshot()))[S$.$toList]();
    }
    get empty() {
      return this.jsObject.empty;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get query() {
      return new (T$.QueryOfQueryJsImpl()).fromJsObject(this.jsObject.query);
    }
    get size() {
      return this.jsObject.size;
    }
    static getInstance(jsObject) {
      let t110, t109, t108, t107;
      t107 = firestore$.QuerySnapshot._expando;
      t108 = jsObject;
      t109 = t107._get(t108);
      return t109 == null ? (t110 = new firestore$.QuerySnapshot._fromJsObject(jsObject), t107._set(t108, t110), t110) : t109;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.QuerySnapshot._fromJsObject(jsObject);
    }
    forEach(callback) {
      let callbackWrap = js.allowInterop(T$.dynamicTodynamic(), dart.fn(s => callback(firestore$.DocumentSnapshot.getInstance(dart.packageJSType("firebase_firestore.DocumentSnapshot", false).as(s))), T$.dynamicTodynamic()));
      return this.jsObject.forEach(dart.assertInterop(callbackWrap));
    }
    isEqual(other) {
      return dart.global.firebase_firestore.snapshotEqual(this.jsObject, other.jsObject);
    }
  };
  (firestore$.QuerySnapshot._fromJsObject = function(jsObject) {
    firestore$.QuerySnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.QuerySnapshot.prototype;
  dart.addTypeTests(firestore$.QuerySnapshot);
  dart.addTypeCaches(firestore$.QuerySnapshot);
  dart.setMethodSignature(firestore$.QuerySnapshot, () => ({
    __proto__: dart.getMethods(firestore$.QuerySnapshot.__proto__),
    docChanges: dart.fnType(core.List$(firestore$.DocumentChange), [], [dart.nullable(dart.packageJSType("SnapshotListenOptions", false))]),
    forEach: dart.fnType(dart.void, [dart.fnType(dart.dynamic, [dart.nullable(firestore$.DocumentSnapshot)])]),
    isEqual: dart.fnType(core.bool, [firestore$.QuerySnapshot])
  }));
  dart.setStaticMethodSignature(firestore$.QuerySnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore$.QuerySnapshot, () => ({
    __proto__: dart.getGetters(firestore$.QuerySnapshot.__proto__),
    docs: core.List$(dart.nullable(firestore$.DocumentSnapshot)),
    empty: core.bool,
    metadata: dart.packageJSType("firebase_firestore.SnapshotMetadata", false),
    query: firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)),
    size: core.num
  }));
  dart.setLibraryUri(firestore$.QuerySnapshot, I[63]);
  dart.setStaticFieldSignature(firestore$.QuerySnapshot, () => ['_expando']);
  dart.defineLazy(firestore$.QuerySnapshot, {
    /*firestore$.QuerySnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfQuerySnapshot()).new();
    }
  }, false);
  const JsObjectWrapper__Updatable$36$0 = class JsObjectWrapper__Updatable extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.Transaction", false)) {};
  (JsObjectWrapper__Updatable$36$0.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36$0.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36$0.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36$0, firestore$._Updatable);
  firestore$.Transaction = class Transaction extends JsObjectWrapper__Updatable$36$0 {
    static getInstance(jsObject) {
      let t110, t109, t108, t107;
      t107 = firestore$.Transaction._expando;
      t108 = jsObject;
      t109 = t107._get(t108);
      return t109 == null ? (t110 = new firestore$.Transaction._fromJsObject(jsObject), t107._set(t108, t110), t110) : t109;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.Transaction._fromJsObject(jsObject);
    }
    delete(documentRef) {
      return firestore$.Transaction.getInstance(this.jsObject.delete(documentRef.jsObject));
    }
    get(documentRef) {
      return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), this.jsObject.get(documentRef.jsObject)).then(firestore$.DocumentSnapshot, C[29] || CT.C29);
    }
    set(documentRef, data, options = null) {
      let jsObjectSet = options != null ? this.jsObject.set(documentRef.jsObject, utils$0.jsify(data), options) : this.jsObject.set(documentRef.jsObject, utils$0.jsify(data));
      return firestore$.Transaction.getInstance(jsObjectSet);
    }
    update(documentRef, data) {
      return firestore$.Transaction.getInstance(dart.packageJSType("firebase_firestore.Transaction", false).as(this[S$._wrapUpdateFunctionCall](dart.dynamic, this.jsObject, data, documentRef)));
    }
  };
  (firestore$.Transaction._fromJsObject = function(jsObject) {
    firestore$.Transaction.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.Transaction.prototype;
  dart.addTypeTests(firestore$.Transaction);
  dart.addTypeCaches(firestore$.Transaction);
  dart.setMethodSignature(firestore$.Transaction, () => ({
    __proto__: dart.getMethods(firestore$.Transaction.__proto__),
    delete: dart.fnType(firestore$.Transaction, [firestore$.DocumentReference]),
    get: dart.fnType(async.Future$(firestore$.DocumentSnapshot), [firestore$.DocumentReference]),
    set: dart.fnType(firestore$.Transaction, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(firestore$.Transaction, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore$.Transaction, () => ['getInstance']);
  dart.setLibraryUri(firestore$.Transaction, I[63]);
  dart.setStaticFieldSignature(firestore$.Transaction, () => ['_expando']);
  dart.defineLazy(firestore$.Transaction, {
    /*firestore$.Transaction._expando*/get _expando() {
      return new (T$.ExpandoOfTransaction()).new();
    }
  }, false);
  firestore$._FieldValueDelete = class _FieldValueDelete extends core.Object {
    [S$._jsify]() {
      return dart.global.firebase_firestore.deleteField();
    }
    toString() {
      return "FieldValue.delete()";
    }
    static ['_#new#tearOff']() {
      return new firestore$._FieldValueDelete.new();
    }
  };
  (firestore$._FieldValueDelete.new = function() {
    ;
  }).prototype = firestore$._FieldValueDelete.prototype;
  dart.addTypeTests(firestore$._FieldValueDelete);
  dart.addTypeCaches(firestore$._FieldValueDelete);
  firestore$._FieldValueDelete[dart.implements] = () => [firestore$.FieldValue];
  dart.setMethodSignature(firestore$._FieldValueDelete, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueDelete.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueDelete, I[63]);
  dart.defineExtensionMethods(firestore$._FieldValueDelete, ['toString']);
  firestore$._FieldValueServerTimestamp = class _FieldValueServerTimestamp extends core.Object {
    [S$._jsify]() {
      return dart.global.firebase_firestore.serverTimestamp();
    }
    toString() {
      return "FieldValue.serverTimestamp()";
    }
    static ['_#new#tearOff']() {
      return new firestore$._FieldValueServerTimestamp.new();
    }
  };
  (firestore$._FieldValueServerTimestamp.new = function() {
    ;
  }).prototype = firestore$._FieldValueServerTimestamp.prototype;
  dart.addTypeTests(firestore$._FieldValueServerTimestamp);
  dart.addTypeCaches(firestore$._FieldValueServerTimestamp);
  firestore$._FieldValueServerTimestamp[dart.implements] = () => [firestore$.FieldValue];
  dart.setMethodSignature(firestore$._FieldValueServerTimestamp, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueServerTimestamp.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueServerTimestamp, I[63]);
  dart.defineExtensionMethods(firestore$._FieldValueServerTimestamp, ['toString']);
  firestore$._FieldValueArray = class _FieldValueArray extends core.Object {};
  (firestore$._FieldValueArray.new = function(elements) {
    this.elements = elements;
    ;
  }).prototype = firestore$._FieldValueArray.prototype;
  dart.addTypeTests(firestore$._FieldValueArray);
  dart.addTypeCaches(firestore$._FieldValueArray);
  firestore$._FieldValueArray[dart.implements] = () => [firestore$.FieldValue];
  dart.setLibraryUri(firestore$._FieldValueArray, I[63]);
  dart.setFieldSignature(firestore$._FieldValueArray, () => ({
    __proto__: dart.getFields(firestore$._FieldValueArray.__proto__),
    elements: dart.finalFieldType(dart.nullable(core.List))
  }));
  firestore$._FieldValueArrayUnion = class _FieldValueArrayUnion extends firestore$._FieldValueArray {
    static ['_#new#tearOff'](elements) {
      return new firestore$._FieldValueArrayUnion.new(elements);
    }
    [S$._jsify]() {
      return dart.nullable(dart.packageJSType("FieldValue", false)).as(utils$.callMethod(dart.global.firebase_firestore.arrayUnion, "apply", [null, utils$0.jsify(this.elements)]));
    }
    toString() {
      return "FieldValue.arrayUnion(" + dart.str(this.elements) + ")";
    }
  };
  (firestore$._FieldValueArrayUnion.new = function(elements) {
    firestore$._FieldValueArrayUnion.__proto__.new.call(this, elements);
    ;
  }).prototype = firestore$._FieldValueArrayUnion.prototype;
  dart.addTypeTests(firestore$._FieldValueArrayUnion);
  dart.addTypeCaches(firestore$._FieldValueArrayUnion);
  dart.setMethodSignature(firestore$._FieldValueArrayUnion, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueArrayUnion.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueArrayUnion, I[63]);
  dart.defineExtensionMethods(firestore$._FieldValueArrayUnion, ['toString']);
  firestore$._FieldValueArrayRemove = class _FieldValueArrayRemove extends firestore$._FieldValueArray {
    static ['_#new#tearOff'](elements) {
      return new firestore$._FieldValueArrayRemove.new(elements);
    }
    [S$._jsify]() {
      return dart.nullable(dart.packageJSType("FieldValue", false)).as(utils$.callMethod(dart.global.firebase_firestore.arrayRemove, "apply", [null, utils$0.jsify(this.elements)]));
    }
    toString() {
      return "FieldValue.arrayRemove(" + dart.str(this.elements) + ")";
    }
  };
  (firestore$._FieldValueArrayRemove.new = function(elements) {
    firestore$._FieldValueArrayRemove.__proto__.new.call(this, elements);
    ;
  }).prototype = firestore$._FieldValueArrayRemove.prototype;
  dart.addTypeTests(firestore$._FieldValueArrayRemove);
  dart.addTypeCaches(firestore$._FieldValueArrayRemove);
  dart.setMethodSignature(firestore$._FieldValueArrayRemove, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueArrayRemove.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueArrayRemove, I[63]);
  dart.defineExtensionMethods(firestore$._FieldValueArrayRemove, ['toString']);
  firestore$._FieldValueIncrement = class _FieldValueIncrement extends core.Object {
    static ['_#new#tearOff'](n) {
      return new firestore$._FieldValueIncrement.new(n);
    }
    [S$._jsify]() {
      return dart.global.firebase_firestore.increment(this.n);
    }
    toString() {
      return "FieldValue.increment(" + dart.str(this.n) + ")";
    }
  };
  (firestore$._FieldValueIncrement.new = function(n) {
    this.n = n;
    ;
  }).prototype = firestore$._FieldValueIncrement.prototype;
  dart.addTypeTests(firestore$._FieldValueIncrement);
  dart.addTypeCaches(firestore$._FieldValueIncrement);
  firestore$._FieldValueIncrement[dart.implements] = () => [firestore$.FieldValue];
  dart.setMethodSignature(firestore$._FieldValueIncrement, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueIncrement.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueIncrement, I[63]);
  dart.setFieldSignature(firestore$._FieldValueIncrement, () => ({
    __proto__: dart.getFields(firestore$._FieldValueIncrement.__proto__),
    n: dart.finalFieldType(core.num)
  }));
  dart.defineExtensionMethods(firestore$._FieldValueIncrement, ['toString']);
  firestore$.FieldValue = class FieldValue extends core.Object {
    [S$._jsify]() {
      dart.throw(new core.UnimplementedError.new("_jsify() has not been implemented"));
    }
    static serverTimestamp() {
      return firestore$.FieldValue._serverTimestamp;
    }
    static delete() {
      return firestore$.FieldValue._delete;
    }
    static arrayUnion(elements) {
      return new firestore$._FieldValueArrayUnion.new(elements);
    }
    static arrayRemove(elements) {
      return new firestore$._FieldValueArrayRemove.new(elements);
    }
    static increment(n) {
      return new firestore$._FieldValueIncrement.new(n);
    }
  };
  (firestore$.FieldValue.__ = function() {
    ;
  }).prototype = firestore$.FieldValue.prototype;
  dart.addTypeTests(firestore$.FieldValue);
  dart.addTypeCaches(firestore$.FieldValue);
  dart.setMethodSignature(firestore$.FieldValue, () => ({
    __proto__: dart.getMethods(firestore$.FieldValue.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setStaticMethodSignature(firestore$.FieldValue, () => ['serverTimestamp', 'delete', 'arrayUnion', 'arrayRemove', 'increment']);
  dart.setLibraryUri(firestore$.FieldValue, I[63]);
  dart.setStaticFieldSignature(firestore$.FieldValue, () => ['_serverTimestamp', '_delete']);
  dart.defineLazy(firestore$.FieldValue, {
    /*firestore$.FieldValue._serverTimestamp*/get _serverTimestamp() {
      return new firestore$._FieldValueServerTimestamp.new();
    },
    /*firestore$.FieldValue._delete*/get _delete() {
      return new firestore$._FieldValueDelete.new();
    }
  }, false);
  firestore$.AggregateQuery = class AggregateQuery extends core.Object {
    static ['_#new#tearOff'](query) {
      return new firestore$.AggregateQuery.new(query);
    }
    static name_(query) {
      return core['EnumName|get#name'](query.type) + "_" + dart.str(query.field);
    }
    get(aggregateQueries) {
      return async.async(firestore$.AggregateQuerySnapshot, (function* get() {
        let requests = new (T$.IdentityMapOfString$Object()).new();
        for (let aggregateQuery of aggregateQueries) {
          switch (aggregateQuery.type) {
            case C[32] || CT.C32:
              {
                requests[S$.$_set]("count", dart.global.firebase_firestore.count());
                break;
              }
            case C[33] || CT.C33:
              {
                requests[S$.$_set](firestore$.AggregateQuery.name_(aggregateQuery), dart.global.firebase_firestore.sum(dart.nullCheck(aggregateQuery.field)));
                break;
              }
            case C[34] || CT.C34:
              {
                requests[S$.$_set](firestore$.AggregateQuery.name_(aggregateQuery), dart.global.firebase_firestore.average(dart.nullCheck(aggregateQuery.field)));
                break;
              }
          }
        }
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.AggregateQuerySnapshot", false), dart.global.firebase_firestore.getAggregateFromServer(this[S$._jsQuery], core.Object.as(utils$0.jsify(requests)))).then(firestore$.AggregateQuerySnapshot, C[35] || CT.C35);
      }).bind(this));
    }
  };
  (firestore$.AggregateQuery.new = function(query) {
    this[S$._jsQuery] = query.jsObject;
    ;
  }).prototype = firestore$.AggregateQuery.prototype;
  dart.addTypeTests(firestore$.AggregateQuery);
  dart.addTypeCaches(firestore$.AggregateQuery);
  dart.setMethodSignature(firestore$.AggregateQuery, () => ({
    __proto__: dart.getMethods(firestore$.AggregateQuery.__proto__),
    get: dart.fnType(async.Future$(firestore$.AggregateQuerySnapshot), [core.List$(messages$46pigeon$.AggregateQuery)])
  }));
  dart.setStaticMethodSignature(firestore$.AggregateQuery, () => ['name_']);
  dart.setLibraryUri(firestore$.AggregateQuery, I[63]);
  dart.setFieldSignature(firestore$.AggregateQuery, () => ({
    __proto__: dart.getFields(firestore$.AggregateQuery.__proto__),
    [S$._jsQuery]: dart.finalFieldType(dart.packageJSType("firebase_firestore.Query", false))
  }));
  firestore$.AggregateQuerySnapshot = class AggregateQuerySnapshot extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.AggregateQuerySnapshot", false)) {
    get [S$._data]() {
      let t107;
      t107 = this[S$.__AggregateQuerySnapshot__data];
      return t107 == null ? dart.throw(new _internal.LateError.fieldNI("_data")) : t107;
    }
    set [S$._data](_data$35param) {
      if (this[S$.__AggregateQuerySnapshot__data] == null)
        this[S$.__AggregateQuerySnapshot__data] = _data$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("_data"));
    }
    static getInstance(jsObject) {
      let t110, t109, t108, t107;
      t107 = firestore$.AggregateQuerySnapshot._expando;
      t108 = jsObject;
      t109 = t107._get(t108);
      return t109 == null ? (t110 = new firestore$.AggregateQuerySnapshot._fromJsObject(jsObject), t107._set(t108, t110), t110) : t109;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.AggregateQuerySnapshot._fromJsObject(jsObject);
    }
    get count() {
      return T$.intN().as(this[S$._data][S$.$_get]("count"));
    }
    getDataValue(query) {
      return core.double.as(dart.nullCheck(this[S$._data][S$.$_get](firestore$.AggregateQuery.name_(query))));
    }
  };
  (firestore$.AggregateQuerySnapshot._fromJsObject = function(jsObject) {
    this[S$.__AggregateQuerySnapshot__data] = null;
    this[S$.__AggregateQuerySnapshot__data] = T$.LinkedHashMapOfString$Object().from(core.Map.as(utils$0.dartify(jsObject.data())));
    firestore$.AggregateQuerySnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.AggregateQuerySnapshot.prototype;
  dart.addTypeTests(firestore$.AggregateQuerySnapshot);
  dart.addTypeCaches(firestore$.AggregateQuerySnapshot);
  dart.setMethodSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getMethods(firestore$.AggregateQuerySnapshot.__proto__),
    getDataValue: dart.fnType(core.double, [messages$46pigeon$.AggregateQuery])
  }));
  dart.setStaticMethodSignature(firestore$.AggregateQuerySnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getGetters(firestore$.AggregateQuerySnapshot.__proto__),
    [S$._data]: core.Map$(core.String, core.Object),
    count: dart.nullable(core.int)
  }));
  dart.setSetterSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getSetters(firestore$.AggregateQuerySnapshot.__proto__),
    [S$._data]: core.Map$(core.String, core.Object)
  }));
  dart.setLibraryUri(firestore$.AggregateQuerySnapshot, I[63]);
  dart.setFieldSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getFields(firestore$.AggregateQuerySnapshot.__proto__),
    [S$.__AggregateQuerySnapshot__data]: dart.fieldType(dart.nullable(core.Map$(core.String, core.Object)))
  }));
  dart.setStaticFieldSignature(firestore$.AggregateQuerySnapshot, () => ['_expando']);
  dart.defineLazy(firestore$.AggregateQuerySnapshot, {
    /*firestore$.AggregateQuerySnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfAggregateQuerySnapshot()).new();
    }
  }, false);
  firestore$.getFirestoreInstance = function getFirestoreInstance(app = null, settings = null, databaseURL = null) {
    let t107;
    let database = (t107 = databaseURL, t107 == null ? "(default)" : t107);
    if (app != null && settings != null) {
      return firestore$.Firestore.getInstance(dart.global.firebase_firestore.initializeFirestore(app.jsObject, settings, database));
    }
    return firestore$.Firestore.getInstance(app != null ? dart.global.firebase_firestore.getFirestore(app.jsObject, database) : dart.global.firebase_firestore.getFirestore());
  };
  firestore$.jsifyFieldValue = function jsifyFieldValue(fieldValue) {
    return fieldValue[S$._jsify]();
  };
  platform_interface_transaction.TransactionPlatform = class TransactionPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_transaction.TransactionPlatform._token);
    }
    get commands() {
      dart.throw(new core.UnimplementedError.new("commands is not implemented"));
    }
    get(documentPath) {
      dart.throw(new core.UnimplementedError.new("get() is not implemented"));
    }
    delete(documentPath) {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    update(documentPath, data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
    set(documentPath, data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
  };
  (platform_interface_transaction.TransactionPlatform.new = function() {
    platform_interface_transaction.TransactionPlatform.__proto__.new.call(this, {token: platform_interface_transaction.TransactionPlatform._token});
    ;
  }).prototype = platform_interface_transaction.TransactionPlatform.prototype;
  dart.addTypeTests(platform_interface_transaction.TransactionPlatform);
  dart.addTypeCaches(platform_interface_transaction.TransactionPlatform);
  dart.setMethodSignature(platform_interface_transaction.TransactionPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_transaction.TransactionPlatform.__proto__),
    get: dart.fnType(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [core.String]),
    delete: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String]),
    update: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String, core.Map$(core.String, dart.dynamic)]),
    set: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)])
  }));
  dart.setStaticMethodSignature(platform_interface_transaction.TransactionPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_transaction.TransactionPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_transaction.TransactionPlatform.__proto__),
    commands: core.List$(messages$46pigeon$.PigeonTransactionCommand)
  }));
  dart.setLibraryUri(platform_interface_transaction.TransactionPlatform, I[64]);
  dart.setStaticFieldSignature(platform_interface_transaction.TransactionPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_transaction.TransactionPlatform, {
    /*platform_interface_transaction.TransactionPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  transaction_web.TransactionWeb = class TransactionWeb extends platform_interface_transaction.TransactionPlatform {
    static ['_#new#tearOff'](_firestore, _webFirestoreDelegate, _webTransactionDelegate) {
      return new transaction_web.TransactionWeb.new(_firestore, _webFirestoreDelegate, _webTransactionDelegate);
    }
    delete(documentPath) {
      this[S$._webTransactionDelegate].delete(this[S$._webFirestoreDelegate].doc(documentPath));
      return this;
    }
    get(documentPath) {
      return internals.convertWebExceptions(T$.FutureOfDocumentSnapshotPlatform(), dart.fn(() => async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function*() {
        let webDocumentSnapshot = (yield this[S$._webTransactionDelegate].get(this[S$._webFirestoreDelegate].doc(documentPath)));
        return web_utils.convertWebDocumentSnapshot(this[S$._firestore$1], webDocumentSnapshot, messages$46pigeon$.ServerTimestampBehavior.none);
      }).bind(this)), T$.VoidToFutureOfDocumentSnapshotPlatform()));
    }
    set(documentPath, data, options = null) {
      this[S$._webTransactionDelegate].set(this[S$._webFirestoreDelegate].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
      return this;
    }
    update(documentPath, data) {
      this[S$._webTransactionDelegate].update(this[S$._webFirestoreDelegate].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)));
      return this;
    }
  };
  (transaction_web.TransactionWeb.new = function(_firestore, _webFirestoreDelegate, _webTransactionDelegate) {
    this[S$._firestore$1] = _firestore;
    this[S$._webFirestoreDelegate] = _webFirestoreDelegate;
    this[S$._webTransactionDelegate] = _webTransactionDelegate;
    transaction_web.TransactionWeb.__proto__.new.call(this);
    ;
  }).prototype = transaction_web.TransactionWeb.prototype;
  dart.addTypeTests(transaction_web.TransactionWeb);
  dart.addTypeCaches(transaction_web.TransactionWeb);
  dart.setMethodSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getMethods(transaction_web.TransactionWeb.__proto__),
    delete: dart.fnType(transaction_web.TransactionWeb, [core.String]),
    set: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(transaction_web.TransactionWeb, I[65]);
  dart.setFieldSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getFields(transaction_web.TransactionWeb.__proto__),
    [S$._webFirestoreDelegate]: dart.finalFieldType(firestore$.Firestore),
    [S$._webTransactionDelegate]: dart.finalFieldType(firestore$.Transaction),
    [S$._firestore$1]: dart.fieldType(platform_interface_firestore.FirebaseFirestorePlatform)
  }));
  platform_interface_write_batch.WriteBatchPlatform = class WriteBatchPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_write_batch.WriteBatchPlatform._token);
    }
    commit() {
      return async.async(dart.void, function* commit() {
        dart.throw(new core.UnimplementedError.new("commit() is not implemented"));
      });
    }
    delete(documentPath) {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    set(documentPath, data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
    update(documentPath, data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
  };
  (platform_interface_write_batch.WriteBatchPlatform.new = function() {
    platform_interface_write_batch.WriteBatchPlatform.__proto__.new.call(this, {token: platform_interface_write_batch.WriteBatchPlatform._token});
    ;
  }).prototype = platform_interface_write_batch.WriteBatchPlatform.prototype;
  dart.addTypeTests(platform_interface_write_batch.WriteBatchPlatform);
  dart.addTypeCaches(platform_interface_write_batch.WriteBatchPlatform);
  dart.setMethodSignature(platform_interface_write_batch.WriteBatchPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_write_batch.WriteBatchPlatform.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(dart.void, [core.String]),
    set: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(platform_interface_write_batch.WriteBatchPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_write_batch.WriteBatchPlatform, I[66]);
  dart.setStaticFieldSignature(platform_interface_write_batch.WriteBatchPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_write_batch.WriteBatchPlatform, {
    /*platform_interface_write_batch.WriteBatchPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  write_batch_web.WriteBatchWeb = class WriteBatchWeb extends platform_interface_write_batch.WriteBatchPlatform {
    static ['_#new#tearOff'](_webFirestoreDelegate) {
      return new write_batch_web.WriteBatchWeb.new(_webFirestoreDelegate);
    }
    commit() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._webWriteBatchDelegate], 'commit'));
    }
    delete(documentPath) {
      this[S$._webWriteBatchDelegate].delete(this[S$._webFirestoreDelegate$1].doc(documentPath));
    }
    set(documentPath, data, options = null) {
      this[S$._webWriteBatchDelegate].set(this[S$._webFirestoreDelegate$1].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
    }
    update(documentPath, data) {
      this[S$._webWriteBatchDelegate].update(this[S$._webFirestoreDelegate$1].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)));
    }
  };
  (write_batch_web.WriteBatchWeb.new = function(_webFirestoreDelegate) {
    this[S$._webFirestoreDelegate$1] = _webFirestoreDelegate;
    this[S$._webWriteBatchDelegate] = dart.nullCheck(_webFirestoreDelegate.batch());
    write_batch_web.WriteBatchWeb.__proto__.new.call(this);
    ;
  }).prototype = write_batch_web.WriteBatchWeb.prototype;
  dart.addTypeTests(write_batch_web.WriteBatchWeb);
  dart.addTypeCaches(write_batch_web.WriteBatchWeb);
  dart.setLibraryUri(write_batch_web.WriteBatchWeb, I[67]);
  dart.setFieldSignature(write_batch_web.WriteBatchWeb, () => ({
    __proto__: dart.getFields(write_batch_web.WriteBatchWeb.__proto__),
    [S$._webFirestoreDelegate$1]: dart.finalFieldType(firestore$.Firestore),
    [S$._webWriteBatchDelegate]: dart.fieldType(firestore$.WriteBatch)
  }));
  platform_interface_multi_factor.MultiFactorPlatform = class MultiFactorPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth];
    }
    set auth(value) {
      super.auth = value;
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      dart.throw(new core.UnimplementedError.new("enroll() is not implemented"));
    }
    getSession() {
      dart.throw(new core.UnimplementedError.new("getSession() is not implemented"));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      dart.throw(new core.UnimplementedError.new("unenroll() is not implemented"));
    }
    getEnrolledFactors() {
      dart.throw(new core.UnimplementedError.new("getEnrolledFactors() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorPlatform.new = function(auth) {
    this[S$.auth] = auth;
    platform_interface_multi_factor.MultiFactorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [platform_interface_multi_factor.MultiFactorAssertionPlatform], {displayName: dart.nullable(core.String)}, {}),
    getSession: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorSession), []),
    unenroll: dart.fnType(async.Future$(dart.void), [], {factorUid: dart.nullable(core.String), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo)}, {}),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(platform_interface_multi_factor.MultiFactorInfo)), [])
  }));
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorPlatform, I[68]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorPlatform, {
    /*platform_interface_multi_factor.MultiFactorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorWeb = class MultiFactorWeb extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth, _webMultiFactorUser) {
      return new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, _webMultiFactorUser);
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        try {
          return web_utils$.convertMultiFactorSession(yield this[S$._webMultiFactorUser].session);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        try {
          let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
          return yield this[S$._webMultiFactorUser].enroll(webAssertion.assertion, displayName);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      return async.async(dart.void, (function* unenroll() {
        let t110, t109;
        let uidToUnenroll = (t109 = factorUid, t109 == null ? (t110 = multiFactorInfo, t110 == null ? null : t110.uid) : t109);
        if (uidToUnenroll == null) {
          dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
        }
        try {
          yield this[S$._webMultiFactorUser].unenroll(uidToUnenroll);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        let data = this[S$._webMultiFactorUser].enrolledFactors;
        return data[S$.$map](platform_interface_multi_factor.MultiFactorInfo, C[36] || CT.C36)[S$.$toList]();
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorWeb.new = function(auth, _webMultiFactorUser) {
    this[S$._webMultiFactorUser] = _webMultiFactorUser;
    firebase_auth_web_multi_factor.MultiFactorWeb.__proto__.new.call(this, auth);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorWeb, I[69]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorWeb.__proto__),
    [S$._webMultiFactorUser]: dart.finalFieldType(multi_factor.MultiFactorUser)
  }));
  platform_interface_multi_factor.MultiFactorAssertionPlatform = class MultiFactorAssertionPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.MultiFactorAssertionPlatform.new();
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.MultiFactorAssertionPlatform._token);
    }
  };
  (platform_interface_multi_factor.MultiFactorAssertionPlatform.new = function() {
    platform_interface_multi_factor.MultiFactorAssertionPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorAssertionPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorAssertionPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorAssertionPlatform, I[68]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorAssertionPlatform, {
    /*platform_interface_multi_factor.MultiFactorAssertionPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorAssertionWeb = class MultiFactorAssertionWeb extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get assertion() {
      return this[S$.assertion];
    }
    set assertion(value) {
      super.assertion = value;
    }
    static ['_#new#tearOff'](assertion) {
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(assertion);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new = function(assertion) {
    this[S$.assertion] = assertion;
    firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, I[69]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__),
    assertion: dart.finalFieldType(multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)))
  }));
  platform_interface_multi_factor.MultiFactorResolverPlatform = class MultiFactorResolverPlatform extends plugin_platform_interface.PlatformInterface {
    get hints() {
      return this[S$.hints];
    }
    set hints(value) {
      super.hints = value;
    }
    get session() {
      return this[S$.session];
    }
    set session(value) {
      super.session = value;
    }
    static ['_#new#tearOff'](hints, session) {
      return new platform_interface_multi_factor.MultiFactorResolverPlatform.new(hints, session);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.MultiFactorResolverPlatform._token);
    }
    resolveSignIn(assertion) {
      dart.throw(new core.UnimplementedError.new("resolveSignIn() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorResolverPlatform.new = function(hints, session) {
    this[S$.hints] = hints;
    this[S$.session] = session;
    platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorResolverPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorResolverPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    resolveSignIn: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [platform_interface_multi_factor.MultiFactorAssertionPlatform])
  }));
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorResolverPlatform, I[68]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    hints: dart.finalFieldType(core.List$(platform_interface_multi_factor.MultiFactorInfo)),
    session: dart.finalFieldType(platform_interface_multi_factor.MultiFactorSession)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorResolverPlatform, {
    /*platform_interface_multi_factor.MultiFactorResolverPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorResolverWeb = class MultiFactorResolverWeb extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, _auth, _webMultiFactorResolver, _webAuth) {
      return new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(hints, session, _auth, _webMultiFactorResolver, _webAuth);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[S$._auth$2], yield this[S$._webMultiFactorResolver].resolveSignIn(webAssertion.assertion), this[S$._webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorResolverWeb.new = function(hints, session, _auth, _webMultiFactorResolver, _webAuth) {
    this[S$._auth$2] = _auth;
    this[S$._webMultiFactorResolver] = _webMultiFactorResolver;
    this[S$._webAuth$1] = _webAuth;
    firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__.new.call(this, hints, session);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorResolverWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorResolverWeb, I[69]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorResolverWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__),
    [S$._webMultiFactorResolver]: dart.finalFieldType(multi_factor.MultiFactorResolver),
    [S$._webAuth$1]: dart.finalFieldType(dart.nullable(auth$.Auth)),
    [S$._auth$2]: dart.finalFieldType(firebase_auth_web.FirebaseAuthWeb)
  }));
  platform_interface_multi_factor.MultiFactorSession = class MultiFactorSession extends core.Object {
    get id() {
      return this[S$.id$2];
    }
    set id(value) {
      super.id = value;
    }
    static ['_#new#tearOff'](id) {
      return new platform_interface_multi_factor.MultiFactorSession.new(id);
    }
  };
  (platform_interface_multi_factor.MultiFactorSession.new = function(id) {
    this[S$.id$2] = id;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorSession);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorSession);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorSession, I[68]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorSession, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorSession.__proto__),
    id: dart.finalFieldType(core.String)
  }));
  firebase_auth_web_multi_factor.MultiFactorSessionWeb = class MultiFactorSessionWeb extends platform_interface_multi_factor.MultiFactorSession {
    get webSession() {
      return this[S$.webSession];
    }
    set webSession(value) {
      super.webSession = value;
    }
    static ['_#new#tearOff'](id, webSession) {
      return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new(id, webSession);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorSessionWeb.new = function(id, webSession) {
    this[S$.webSession] = webSession;
    firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__.new.call(this, id);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorSessionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorSessionWeb, I[69]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorSessionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__),
    webSession: dart.finalFieldType(multi_factor.MultiFactorSession)
  }));
  platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform = class PhoneMultiFactorGeneratorPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new();
    }
    static get instance() {
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance == null ? platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new() : null;
      return dart.nullCheck(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token);
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = instance;
    }
    getAssertion(credential) {
      dart.throw(new core.UnimplementedError.new("getAssertion() is not implemented"));
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new = function() {
    platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__),
    getAssertion: dart.fnType(platform_interface_multi_factor.MultiFactorAssertionPlatform, [phone_auth.PhoneAuthCredential])
  }));
  dart.setStaticGetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, I[68]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, {
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb = class PhoneMultiFactorGeneratorWeb extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      let verificationId = credential.verificationId;
      let verificationCode = credential.smsCode;
      if (verificationCode == null) {
        dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
      }
      if (verificationId == null) {
        dart.throw(new core.ArgumentError.new("verificationId must not be null"));
      }
      let cred = auth$.PhoneAuthProvider.credential(verificationId, verificationCode);
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(multi_factor.PhoneMultiFactorGenerator.assertion(cred));
    }
    static ['_#new#tearOff']() {
      return new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
    }
  };
  (firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new = function() {
    firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb, I[69]);
  platform_interface_multi_factor.TotpSecretPlatform = class TotpSecretPlatform extends plugin_platform_interface.PlatformInterface {
    get codeIntervalSeconds() {
      return this[S$.codeIntervalSeconds$1];
    }
    set codeIntervalSeconds(value) {
      super.codeIntervalSeconds = value;
    }
    get codeLength() {
      return this[S$.codeLength$1];
    }
    set codeLength(value) {
      super.codeLength = value;
    }
    get enrollmentCompletionDeadline() {
      return this[S$.enrollmentCompletionDeadline$1];
    }
    set enrollmentCompletionDeadline(value) {
      super.enrollmentCompletionDeadline = value;
    }
    get hashingAlgorithm() {
      return this[S$.hashingAlgorithm$1];
    }
    set hashingAlgorithm(value) {
      super.hashingAlgorithm = value;
    }
    get secretKey() {
      return this[S$.secretKey$1];
    }
    set secretKey(value) {
      super.secretKey = value;
    }
    static ['_#new#tearOff'](codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
      return new platform_interface_multi_factor.TotpSecretPlatform.new(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      dart.throw(new core.UnimplementedError.new("generateQrCodeUrl() is not implemented"));
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, function* openInOtpApp() {
        dart.throw(new core.UnimplementedError.new("openInOtpApp() is not implemented"));
      });
    }
  };
  (platform_interface_multi_factor.TotpSecretPlatform.new = function(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
    this[S$.codeIntervalSeconds$1] = codeIntervalSeconds;
    this[S$.codeLength$1] = codeLength;
    this[S$.enrollmentCompletionDeadline$1] = enrollmentCompletionDeadline;
    this[S$.hashingAlgorithm$1] = hashingAlgorithm;
    this[S$.secretKey$1] = secretKey;
    platform_interface_multi_factor.TotpSecretPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.TotpSecretPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.TotpSecretPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.TotpSecretPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.TotpSecretPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.TotpSecretPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.TotpSecretPlatform.__proto__),
    generateQrCodeUrl: dart.fnType(async.Future$(core.String), [], {accountName: dart.nullable(core.String), issuer: dart.nullable(core.String)}, {}),
    openInOtpApp: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(platform_interface_multi_factor.TotpSecretPlatform, I[68]);
  dart.setFieldSignature(platform_interface_multi_factor.TotpSecretPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.TotpSecretPlatform.__proto__),
    codeIntervalSeconds: dart.finalFieldType(dart.nullable(core.int)),
    codeLength: dart.finalFieldType(dart.nullable(core.int)),
    enrollmentCompletionDeadline: dart.finalFieldType(dart.nullable(core.DateTime)),
    hashingAlgorithm: dart.finalFieldType(dart.nullable(core.String)),
    secretKey: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.TotpSecretPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.TotpSecretPlatform, {
    /*platform_interface_multi_factor.TotpSecretPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.TotpSecretWeb = class TotpSecretWeb extends platform_interface_multi_factor.TotpSecretPlatform {
    get webSecret() {
      return this[S$.webSecret];
    }
    set webSecret(value) {
      super.webSecret = value;
    }
    static ['_#new#tearOff'](webSecret, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
      return new firebase_auth_web_multi_factor.TotpSecretWeb.new(webSecret, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      return T$.FutureOfString().value(this.webSecret.generateQrCodeUrl(accountName, issuer));
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, function* openInOtpApp() {
        dart.throw(new core.UnimplementedError.new("openInOtpApp() is not available on Web"));
      });
    }
  };
  (firebase_auth_web_multi_factor.TotpSecretWeb.new = function(webSecret, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
    this[S$.webSecret] = webSecret;
    firebase_auth_web_multi_factor.TotpSecretWeb.__proto__.new.call(this, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    ;
  }).prototype = firebase_auth_web_multi_factor.TotpSecretWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.TotpSecretWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.TotpSecretWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.TotpSecretWeb, I[69]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.TotpSecretWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.TotpSecretWeb.__proto__),
    webSecret: dart.finalFieldType(multi_factor.TotpSecret)
  }));
  platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform = class TotpMultiFactorGeneratorPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.new();
    }
    static get instance() {
      platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance == null ? platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance = new method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.new() : null;
      return dart.nullCheck(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._token);
      platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance = instance;
    }
    generateSecret(session) {
      dart.throw(new core.UnimplementedError.new("generateSecret() is not implemented"));
    }
    getAssertionForEnrollment(secret, oneTimePassword) {
      dart.throw(new core.UnimplementedError.new("getAssertionForEnrollment() is not implemented"));
    }
    getAssertionForSignIn(enrollmentId, oneTimePassword) {
      dart.throw(new core.UnimplementedError.new("getAssertionForSignIn() is not implemented"));
    }
  };
  (platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.new = function() {
    platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.__proto__),
    generateSecret: dart.fnType(async.Future$(platform_interface_multi_factor.TotpSecretPlatform), [platform_interface_multi_factor.MultiFactorSession]),
    getAssertionForEnrollment: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorAssertionPlatform), [platform_interface_multi_factor.TotpSecretPlatform, core.String]),
    getAssertionForSignIn: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorAssertionPlatform), [core.String, core.String])
  }));
  dart.setStaticGetterSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, I[68]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, {
    /*platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb = class TotpMultiFactorGeneratorWeb extends platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform {
    generateSecret(session) {
      return async.async(platform_interface_multi_factor.TotpSecretPlatform, function* generateSecret() {
        let _webMultiFactorSession = firebase_auth_web_multi_factor.MultiFactorSessionWeb.as(session);
        let _webSecret = (yield multi_factor.TotpMultiFactorGenerator.generateSecret(_webMultiFactorSession.webSession));
        return new firebase_auth_web_multi_factor.TotpSecretWeb.new(_webSecret, _webSecret.codeInterval, _webSecret.codeLength, _webSecret.enrollmentCompletionDeadline, _webSecret.hashingAlgorithm, _webSecret.secretKey);
      });
    }
    getAssertionForEnrollment(secret, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, function* getAssertionForEnrollment() {
        let _webSecret = firebase_auth_web_multi_factor.TotpSecretWeb.as(secret);
        let totpAssertion = multi_factor.TotpMultiFactorGenerator.assertionForEnrollment(_webSecret.webSecret, oneTimePassword);
        return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(totpAssertion);
      });
    }
    getAssertionForSignIn(enrollmentId, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, function* getAssertionForSignIn() {
        let totpAssertion = multi_factor.TotpMultiFactorGenerator.assertionForSignIn(enrollmentId, oneTimePassword);
        return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(totpAssertion);
      });
    }
    static ['_#new#tearOff']() {
      return new firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.new();
    }
  };
  (firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.new = function() {
    firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb, I[69]);
  utils.dartify = function dartify(jsObject) {
    return utils$.dartify(jsObject);
  };
  utils.jsify = function jsify(dartObject, customJsify = null) {
    return utils$.jsify(dartObject, customJsify);
  };
  web_utils$._isFirebaseAuthError = function _isFirebaseAuthError(e) {
    return js_util.instanceof(e, dart.global.Error) && js_util.hasProperty(e, "customData");
  };
  web_utils$._hasFirebaseAuthErrorCodeAndMessage = function _hasFirebaseAuthErrorCodeAndMessage(e) {
    if (web_utils$._isFirebaseAuthError(e)) {
      let code = js_util.getProperty(T$.StringN(), e, "code");
      let message = js_util.getProperty(T$.StringN(), e, "message");
      if (code == null || !code[S$.$startsWith]("auth/")) return false;
      if (message == null || !message[S$.$contains]("Firebase")) return false;
      return true;
    } else {
      return false;
    }
  };
  web_utils$.getFirebaseAuthException = function getFirebaseAuthException(exception, auth = null) {
    if (!web_utils$._hasFirebaseAuthErrorCodeAndMessage(exception)) {
      return new firebase_auth_exception.FirebaseAuthException.new({code: "unknown", message: "An unknown error occurred: " + dart.str(exception)});
    }
    let firebaseError = dart.packageJSType("firebase_auth.AuthError", true).as(exception);
    let code = auth_interop['AuthErrorExtension|get#code'](firebaseError)[S$.$replaceFirst]("auth/", "");
    let message = auth_interop['AuthErrorExtension|get#message'](firebaseError)[S$.$replaceFirst](" (" + auth_interop['AuthErrorExtension|get#code'](firebaseError) + ").", "")[S$.$replaceFirst]("Firebase: ", "");
    let customData = dart.packageJSType("firebase_auth.AuthErrorCustomData", true).as(js_util.getProperty(dart.dynamic, exception, "customData"));
    if (code === "multi-factor-auth-required") {
      let _auth = auth;
      if (_auth == null) {
        dart.throw(new core.ArgumentError.new("Multi-factor authentication is required, but the auth instance is null. " + "Please ensure that the auth instance is not null before calling " + "`getFirebaseAuthException()`."));
      }
      let resolverWeb = multi_factor.getMultiFactorResolver(_auth, exception);
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: code, message: message, email: auth_interop['AuthErrorCustomDataExtension|get#email'](customData), phoneNumber: auth_interop['AuthErrorCustomDataExtension|get#phoneNumber'](customData), tenantId: auth_interop['AuthErrorCustomDataExtension|get#tenantId'](customData), resolver: new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(resolverWeb.hints[S$.$map](platform_interface_multi_factor.MultiFactorInfo, C[36] || CT.C36)[S$.$toList](), new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", resolverWeb.session), firebase_auth_web.FirebaseAuthWeb.instance, resolverWeb, auth)});
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: auth_interop['AuthErrorCustomDataExtension|get#email'](customData), phoneNumber: auth_interop['AuthErrorCustomDataExtension|get#phoneNumber'](customData), tenantId: auth_interop['AuthErrorCustomDataExtension|get#tenantId'](customData)});
  };
  web_utils$.fromInteropMultiFactorInfo = function fromInteropMultiFactorInfo(e) {
    if (multi_factor.PhoneMultiFactorInfo.is(e)) {
      return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid, phoneNumber: e.phoneNumber});
    } else if (multi_factor.TotpMultiFactorInfo.is(e)) {
      return new platform_interface_multi_factor.TotpMultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid});
    }
    return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid});
  };
  web_utils$.convertWebActionCodeInfo = function convertWebActionCodeInfo(webActionCodeInfo) {
    if (webActionCodeInfo == null) {
      return null;
    }
    return new action_code_info.ActionCodeInfo.new({operation: messages$46pigeon$0.ActionCodeInfoOperation.passwordReset, data: new action_code_info.ActionCodeInfoData.new({email: webActionCodeInfo.data.email, previousEmail: webActionCodeInfo.data.previousEmail})});
  };
  web_utils$.convertWebAdditionalUserInfo = function convertWebAdditionalUserInfo(webAdditionalUserInfo) {
    if (webAdditionalUserInfo == null) {
      return null;
    }
    return new additional_user_info.AdditionalUserInfo.new({isNewUser: webAdditionalUserInfo.isNewUser, profile: webAdditionalUserInfo.profile, providerId: webAdditionalUserInfo.providerId, username: webAdditionalUserInfo.username});
  };
  web_utils$.convertWebIdTokenResult = function convertWebIdTokenResult(webIdTokenResult) {
    return new id_token_result.IdTokenResult.new(new messages$46pigeon$0.PigeonIdTokenResult.new({claims: webIdTokenResult.claims, token: webIdTokenResult.token, authTimestamp: webIdTokenResult.authTime.millisecondsSinceEpoch, issuedAtTimestamp: webIdTokenResult.issuedAtTime.millisecondsSinceEpoch, expirationTimestamp: webIdTokenResult.expirationTime.millisecondsSinceEpoch, signInProvider: webIdTokenResult.signInProvider}));
  };
  web_utils$.convertPlatformActionCodeSettings = function convertPlatformActionCodeSettings(actionCodeSettings) {
    if (actionCodeSettings == null) {
      return null;
    }
    let actionCodeSettingsMap = actionCodeSettings.asMap();
    let webActionCodeSettings = null;
    if (actionCodeSettings.dynamicLinkDomain != null) {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain};
    } else {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp};
    }
    if (actionCodeSettingsMap[S$.$_get]("android") != null) {
      webActionCodeSettings.android = {packageName: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["packageName"])), minimumVersion: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["minimumVersion"])), installApp: T$.boolN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["installApp"]))};
    }
    if (actionCodeSettingsMap[S$.$_get]("iOS") != null) {
      webActionCodeSettings.iOS = {bundleId: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("iOS"), '_get', ["bundleId"]))};
    }
    return webActionCodeSettings;
  };
  web_utils$.convertPlatformAuthProvider = function convertPlatformAuthProvider(authProvider) {
    if (email_auth.EmailAuthProvider.is(authProvider)) {
      return auth$.EmailAuthProvider.new();
    }
    if (facebook_auth.FacebookAuthProvider.is(authProvider)) {
      let facebookAuthProvider = auth$.FacebookAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(facebookAuthProvider, 'addScope'));
      facebookAuthProvider.setCustomParameters(authProvider.parameters);
      return facebookAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let githubAuthProvider = auth$.GithubAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(githubAuthProvider, 'addScope'));
      githubAuthProvider.setCustomParameters(authProvider.parameters);
      return githubAuthProvider;
    }
    if (google_auth.GoogleAuthProvider.is(authProvider)) {
      let googleAuthProvider = auth$.GoogleAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(googleAuthProvider, 'addScope'));
      googleAuthProvider.setCustomParameters(authProvider.parameters);
      return googleAuthProvider;
    }
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (yahoo_auth.YahooAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let twitterAuthProvider = auth$.TwitterAuthProvider.new();
      twitterAuthProvider.setCustomParameters(authProvider.parameters);
      return twitterAuthProvider;
    }
    if (phone_auth.PhoneAuthProvider.is(authProvider)) {
      return auth$.PhoneAuthProvider.new();
    }
    if (oauth.OAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (saml_auth.SAMLAuthProvider.is(authProvider)) {
      return auth$.SAMLAuthProvider.new(authProvider.providerId);
    }
    dart.throw(new core.UnsupportedError.new("Unknown AuthProvider: " + dart.str(authProvider) + "."));
  };
  web_utils$.convertWebAuthCredential = function convertWebAuthCredential(authCredential) {
    if (authCredential == null) {
      return null;
    }
    return new auth_credential.AuthCredential.new({providerId: authCredential.providerId, signInMethod: authCredential.signInMethod});
  };
  web_utils$.convertWebOAuthCredential = function convertWebOAuthCredential(userCredential) {
    if (userCredential == null) {
      return null;
    }
    let authCredential = auth$.OAuthProvider.credentialFromResult(userCredential.jsObject);
    if (authCredential == null) {
      return null;
    }
    return new oauth.OAuthProvider.new(authCredential.providerId).credential({signInMethod: authCredential.signInMethod, accessToken: authCredential.accessToken, secret: authCredential.secret, idToken: authCredential.idToken});
  };
  web_utils$.convertPlatformCredential = function convertPlatformCredential(credential) {
    if (email_auth.EmailAuthCredential.is(credential)) {
      if (credential.emailLink != null) {
        return auth$.EmailAuthProvider.credentialWithLink(credential.email, dart.nullCheck(credential.emailLink));
      }
      return auth$.EmailAuthProvider.credential(credential.email, dart.nullCheck(credential.password));
    }
    if (facebook_auth.FacebookAuthCredential.is(credential)) {
      return auth$.FacebookAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (github_auth.GithubAuthCredential.is(credential)) {
      return auth$.GithubAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (google_auth.GoogleAuthCredential.is(credential)) {
      return auth$.GoogleAuthProvider.credential(credential.idToken, credential.accessToken);
    }
    if (twitter_auth.TwitterAuthCredential.is(credential)) {
      return auth$.TwitterAuthProvider.credential(dart.nullCheck(credential.accessToken), dart.nullCheck(credential.secret));
    }
    if (phone_auth.PhoneAuthCredential.is(credential)) {
      return dart.packageJSType("OAuthCredential", false).as(auth$.PhoneAuthProvider.credential(dart.nullCheck(credential.verificationId), dart.nullCheck(credential.smsCode)));
    }
    if (oauth.OAuthCredential.is(credential)) {
      let credentialOptions = {accessToken: credential.accessToken, rawNonce: credential.rawNonce, idToken: credential.idToken};
      return auth$.OAuthProvider.new(credential.providerId).credential(credentialOptions);
    }
    return null;
  };
  web_utils$.convertRecaptchaVerifierSize = function convertRecaptchaVerifierSize(size) {
    switch (size) {
      case C[37] || CT.C37:
        {
          return "compact";
        }
      case C[18] || CT.C18:
      default:
        {
          return "normal";
        }
    }
  };
  web_utils$.convertRecaptchaVerifierTheme = function convertRecaptchaVerifierTheme(theme) {
    switch (theme) {
      case C[38] || CT.C38:
        {
          return "dark";
        }
      case C[19] || CT.C19:
      default:
        {
          return "light";
        }
    }
  };
  web_utils$.convertMultiFactorSession = function convertMultiFactorSession(multiFactorSession) {
    return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", multiFactorSession);
  };
  platform_interface_confirmation_result.ConfirmationResultPlatform = class ConfirmationResultPlatform extends plugin_platform_interface.PlatformInterface {
    get verificationId() {
      return this[S$.verificationId];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_confirmation_result.ConfirmationResultPlatform._token);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* confirm() {
        dart.throw(new core.UnimplementedError.new("confirm() is not implemented"));
      });
    }
  };
  (platform_interface_confirmation_result.ConfirmationResultPlatform.new = function(verificationId) {
    this[S$.verificationId] = verificationId;
    platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__.new.call(this, {token: platform_interface_confirmation_result.ConfirmationResultPlatform._token});
    ;
  }).prototype = platform_interface_confirmation_result.ConfirmationResultPlatform.prototype;
  dart.addTypeTests(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.addTypeCaches(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.setMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    confirm: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_confirmation_result.ConfirmationResultPlatform, I[70]);
  dart.setFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getFields(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    verificationId: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_confirmation_result.ConfirmationResultPlatform, {
    /*platform_interface_confirmation_result.ConfirmationResultPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_confirmation_result.ConfirmationResultWeb = class ConfirmationResultWeb extends platform_interface_confirmation_result.ConfirmationResultPlatform {
    static ['_#new#tearOff'](_auth, _webConfirmationResult, _webAuth) {
      return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(_auth, _webConfirmationResult, _webAuth);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* confirm() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[S$._auth$3], yield this[S$._webConfirmationResult].confirm(verificationCode), this[S$._webAuth$2]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_confirmation_result.ConfirmationResultWeb.new = function(_auth, _webConfirmationResult, _webAuth) {
    this[S$._auth$3] = _auth;
    this[S$._webConfirmationResult] = _webConfirmationResult;
    this[S$._webAuth$2] = _webAuth;
    firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__.new.call(this, _webConfirmationResult.verificationId);
    ;
  }).prototype = firebase_auth_web_confirmation_result.ConfirmationResultWeb.prototype;
  dart.addTypeTests(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.addTypeCaches(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.setLibraryUri(firebase_auth_web_confirmation_result.ConfirmationResultWeb, I[71]);
  dart.setFieldSignature(firebase_auth_web_confirmation_result.ConfirmationResultWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__),
    [S$._auth$3]: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    [S$._webConfirmationResult]: dart.finalFieldType(auth$.ConfirmationResult),
    [S$._webAuth$2]: dart.finalFieldType(dart.nullable(auth$.Auth))
  }));
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform = class RecaptchaVerifierFactoryPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      if (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance == null) {
        dart.throw(new core.UnimplementedError.new("RecaptchaVerifier is not implemented"));
      }
      return dart.nullCheck(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance = instance;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
    }
    get delegate() {
      dart.throw(new core.UnimplementedError.new("delegate is not implemented"));
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[18] || CT.C18;
      let theme = opts && 'theme' in opts ? opts.theme : C[19] || CT.C19;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    get type() {
      dart.throw(new core.UnimplementedError.new("type is not implemented"));
    }
    clear() {
      dart.throw(new core.UnimplementedError.new("clear() is not implemented"));
    }
    render() {
      return async.async(core.int, function* render() {
        dart.throw(new core.UnimplementedError.new("render() is not implemented"));
      });
    }
    verify() {
      return async.async(core.String, function* verify() {
        dart.throw(new core.UnimplementedError.new("verify() is not implemented"));
      });
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.new = function() {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__.new.call(this, {token: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token});
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, [], {container: dart.nullable(core.String), onError: dart.nullable(dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])), onExpired: dart.nullable(dart.fnType(dart.void, [])), onSuccess: dart.nullable(dart.fnType(dart.void, [])), size: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, theme: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme}, {auth: platform_interface_firebase_auth.FirebaseAuthPlatform}),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.int), []),
    verify: dart.fnType(async.Future$(core.String), [])
  }));
  dart.setStaticMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegate: dart.dynamic,
    type: core.String
  }));
  dart.setStaticGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, I[73]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb = class RecaptchaVerifierFactoryWeb extends platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform {
    get [S$._delegate$9]() {
      let t112;
      t112 = this[S$.__RecaptchaVerifierFactoryWeb__delegate];
      return t112 == null ? dart.throw(new _internal.LateError.fieldNI("_delegate")) : t112;
    }
    set [S$._delegate$9](_delegate$35param) {
      this[S$.__RecaptchaVerifierFactoryWeb__delegate] = _delegate$35param;
    }
    static get instance() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#_#tearOff']() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[18] || CT.C18;
      let theme = opts && 'theme' in opts ? opts.theme : C[19] || CT.C19;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[18] || CT.C18;
      let theme = opts && 'theme' in opts ? opts.theme : C[19] || CT.C19;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      let _webAuth = firebase_auth_web.FirebaseAuthWeb.as(auth);
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: _webAuth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    get delegate() {
      return this[S$._delegate$9];
    }
    get type() {
      return this[S$._delegate$9].type;
    }
    clear() {
      let t112;
      this[S$._delegate$9].clear();
      t112 = html.window[S$.$document].getElementById("__ff-recaptcha-container");
      t112 == null ? null : t112[S$.$remove]();
    }
    verify() {
      try {
        return this[S$._delegate$9].verify();
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils$.getFirebaseAuthException(e));
        } else
          throw e$;
      }
    }
    render() {
      return async.async(core.int, (function* render() {
        try {
          return dart.asInt(yield this[S$._delegate$9].render());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__ = function() {
    this[S$.__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new = function(opts) {
    let t112;
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let container = opts && 'container' in opts ? opts.container : null;
    let size = opts && 'size' in opts ? opts.size : C[18] || CT.C18;
    let theme = opts && 'theme' in opts ? opts.theme : C[19] || CT.C19;
    let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
    this[S$.__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    let element = null;
    let parameters = new (T$.IdentityMapOfString$dynamic()).new();
    if (onSuccess != null) {
      parameters[S$.$_set]("callback", dart.fn(resp => {
        onSuccess();
      }, T$.dynamicToNull()));
    }
    if (onExpired != null) {
      parameters[S$.$_set]("expired-callback", dart.fn(() => {
        onExpired();
      }, T$.VoidToNull()));
    }
    if (onError != null) {
      parameters[S$.$_set]("error-callback", dart.fn(error => {
        onError(web_utils$.getFirebaseAuthException(error));
      }, T$.ObjectToNull()));
    }
    if (container == null || container[S$.$isEmpty]) {
      parameters[S$.$_set]("size", "invisible");
      let el = html.window[S$.$document].getElementById("__ff-recaptcha-container");
      if (el != null) {
        el[S$.$remove]();
      }
      dart.nullCheck(html.window[S$.$document].documentElement)[S$.$children][S$.$add]((t112 = html.DivElement.new(), (() => {
        t112[S$.$id] = "__ff-recaptcha-container";
        return t112;
      })()));
      element = "__ff-recaptcha-container";
    } else {
      parameters[S$.$_set]("size", web_utils$.convertRecaptchaVerifierSize(size));
      parameters[S$.$_set]("theme", web_utils$.convertRecaptchaVerifierTheme(theme));
      if (!(html.window[S$.$document].getElementById(container) != null)) dart.assertFailed("An exception was thrown whilst creating a RecaptchaVerifier instance. No DOM element with an ID of " + dart.str(container) + " could be found.", I[72], 84, 9, "window.document.getElementById(container) != null");
      element = container;
    }
    this[S$._delegate$9] = auth$.RecaptchaVerifier.new(element, parameters, auth.delegate);
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  dart.addTypeTests(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.addTypeCaches(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.setGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$._delegate$9]: auth$.RecaptchaVerifier,
    delegate: auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))
  }));
  dart.setSetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$._delegate$9]: auth$.RecaptchaVerifier
  }));
  dart.setStaticGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, I[74]);
  dart.setFieldSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$.__RecaptchaVerifierFactoryWeb__delegate]: dart.fieldType(dart.nullable(auth$.RecaptchaVerifier))
  }));
  dart.defineLazy(firebase_auth_web_recaptcha_verifier_factory, {
    /*firebase_auth_web_recaptcha_verifier_factory._kInvisibleElementId*/get _kInvisibleElementId() {
      return "__ff-recaptcha-container";
    }
  }, false);
  platform_interface_user.UserPlatform = class UserPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth$1];
    }
    set auth(value) {
      super.auth = value;
    }
    get multiFactor() {
      return this[S$.multiFactor];
    }
    set multiFactor(value) {
      super.multiFactor = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_user.UserPlatform._token);
    }
    get displayName() {
      return this[S$._user$1].userInfo.displayName;
    }
    get email() {
      return this[S$._user$1].userInfo.email;
    }
    get isEmailVerified() {
      return this[S$._user$1].userInfo.isEmailVerified;
    }
    get isAnonymous() {
      return this[S$._user$1].userInfo.isAnonymous;
    }
    get metadata() {
      return new user_metadata.UserMetadata.new(this[S$._user$1].userInfo.creationTimestamp, this[S$._user$1].userInfo.lastSignInTimestamp);
    }
    get phoneNumber() {
      return this[S$._user$1].userInfo.phoneNumber;
    }
    get photoURL() {
      return this[S$._user$1].userInfo.photoUrl;
    }
    get providerData() {
      let inputData = iterable_extensions['IterableNullableExtension|whereNotNull'](T$.MapOfObjectN$ObjectN(), this[S$._user$1].providerData);
      let providerData = T$.JSArrayOfUserInfo().of([]);
      for (let info of inputData) {
        providerData[S$.$add](new user_info.UserInfo.fromJson(info));
      }
      return providerData;
    }
    get refreshToken() {
      return this[S$._user$1].userInfo.refreshToken;
    }
    get tenantId() {
      return this[S$._user$1].userInfo.tenantId;
    }
    get uid() {
      return this[S$._user$1].userInfo.uid;
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
      });
    }
    getIdToken(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdToken() is not implemented"));
    }
    getIdTokenResult(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdTokenResult() is not implemented"));
    }
    linkWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("linkWithCredential() is not implemented"));
    }
    linkWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithProvider() is not implemented"));
    }
    reauthenticateWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithProvider() is not implemented"));
    }
    reauthenticateWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithPopup() is not implemented"));
    }
    reauthenticateWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithRedirect() is not implemented"));
    }
    linkWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithPopup() is not implemented"));
    }
    linkWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithRedirect() is not implemented"));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      dart.throw(new core.UnimplementedError.new("linkWithPhoneNumber() is not implemented"));
    }
    reauthenticateWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithCredential() is not implemented"));
    }
    reload() {
      return async.async(dart.void, function* reload() {
        dart.throw(new core.UnimplementedError.new("reload() is not implemented"));
      });
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, function* sendEmailVerification() {
        dart.throw(new core.UnimplementedError.new("sendEmailVerification() is not implemented"));
      });
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, function* unlink() {
        dart.throw(new core.UnimplementedError.new("unlink() is not implemented"));
      });
    }
    updateEmail(newEmail) {
      return async.async(dart.void, function* updateEmail() {
        dart.throw(new core.UnimplementedError.new("updateEmail() is not implemented"));
      });
    }
    updatePassword(newPassword) {
      return async.async(dart.void, function* updatePassword() {
        dart.throw(new core.UnimplementedError.new("updatePassword() is not implemented"));
      });
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, function* updatePhoneNumber() {
        dart.throw(new core.UnimplementedError.new("updatePhoneNumber() is not implemented"));
      });
    }
    updateProfile(profile) {
      return async.async(dart.void, function* updateProfile() {
        dart.throw(new core.UnimplementedError.new("updateProfile() is not implemented"));
      });
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, function* verifyBeforeUpdateEmail() {
        dart.throw(new core.UnimplementedError.new("verifyBeforeUpdateEmail() is not implemented"));
      });
    }
  };
  (platform_interface_user.UserPlatform.new = function(auth, multiFactor, user) {
    this[S$.auth$1] = auth;
    this[S$.multiFactor] = multiFactor;
    this[S$._user$1] = user;
    platform_interface_user.UserPlatform.__proto__.new.call(this, {token: platform_interface_user.UserPlatform._token});
    ;
  }).prototype = platform_interface_user.UserPlatform.prototype;
  dart.addTypeTests(platform_interface_user.UserPlatform);
  dart.addTypeCaches(platform_interface_user.UserPlatform);
  dart.setMethodSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_user.UserPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(dart.nullable(core.String)), [core.bool]),
    getIdTokenResult: dart.fnType(async.Future$(id_token_result.IdTokenResult), [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    linkWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider$.AuthProvider]),
    reauthenticateWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider$.AuthProvider]),
    reauthenticateWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider$.AuthProvider]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider$.AuthProvider]),
    linkWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider$.AuthProvider]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider$.AuthProvider]),
    linkWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    reauthenticateWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [dart.nullable(action_code_settings.ActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(platform_interface_user.UserPlatform), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [phone_auth.PhoneAuthCredential]),
    updateProfile: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.nullable(core.String))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setStaticMethodSignature(platform_interface_user.UserPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_user.UserPlatform.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    isEmailVerified: core.bool,
    isAnonymous: core.bool,
    metadata: user_metadata.UserMetadata,
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerData: core.List$(user_info.UserInfo),
    refreshToken: dart.nullable(core.String),
    tenantId: dart.nullable(core.String),
    uid: core.String
  }));
  dart.setLibraryUri(platform_interface_user.UserPlatform, I[75]);
  dart.setFieldSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user.UserPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    multiFactor: dart.finalFieldType(platform_interface_multi_factor.MultiFactorPlatform),
    [S$._user$1]: dart.finalFieldType(messages$46pigeon$0.PigeonUserDetails)
  }));
  dart.setStaticFieldSignature(platform_interface_user.UserPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user.UserPlatform, {
    /*platform_interface_user.UserPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user.UserWeb = class UserWeb extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, _webUser, _webAuth) {
      return new firebase_auth_web_user.UserWeb.new(auth, multiFactor, _webUser, _webAuth);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].delete();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(core.String, (function* getIdToken() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return yield this[S$._webUser].getIdToken(forceRefresh);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        return web_utils$.convertWebIdTokenResult(yield this[S$._webUser].getIdTokenResult(forceRefresh));
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[S$._webUser].linkWithCredential(web_utils$.convertPlatformCredential(credential)), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[S$._webUser].linkWithPopup(web_utils$.convertPlatformAuthProvider(provider)), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithRedirect(provider) {
      return async.async(dart.void, (function* linkWithRedirect() {
        try {
          return this[S$._webUser].linkWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* linkWithPhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this.auth, yield this[S$._webUser].linkWithPhoneNumber(phoneNumber, verifier), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[S$._webUser].reauthenticateWithCredential(dart.nullCheck(web_utils$.convertPlatformCredential(credential))));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential, this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[S$._webUser].reauthenticateWithPopup(web_utils$.convertPlatformAuthProvider(provider)));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential, this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithRedirect(provider) {
      return async.async(dart.void, (function* reauthenticateWithRedirect() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return this[S$._webUser].reauthenticateWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      firebase_auth_web_user._assertIsSignedOut(this.auth);
      try {
        return this[S$._webUser].sendEmailVerification(web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
        } else
          throw e$;
      }
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user.UserWeb.new(this.auth, this.multiFactor, yield this[S$._webUser].unlink(providerId), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updateEmail(newEmail);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updatePassword(newPassword);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updatePhoneNumber(web_utils$.convertPlatformCredential(phoneCredential));
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let newProfile = null;
          if (profile[S$.$containsKey]("displayName") && profile[S$.$containsKey]("photoURL")) {
            newProfile = {displayName: profile[S$.$_get]("displayName"), photoURL: profile[S$.$_get]("photoURL")};
          } else if (profile[S$.$containsKey]("displayName")) {
            newProfile = {displayName: profile[S$.$_get]("displayName")};
          } else {
            newProfile = {photoURL: profile[S$.$_get]("photoURL")};
          }
          yield this[S$._webUser].updateProfile(newProfile);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].verifyBeforeUpdateEmail(newEmail, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_user.UserWeb.new = function(auth, multiFactor, _webUser, _webAuth) {
    this[S$._webUser] = _webUser;
    this[S$._webAuth$3] = _webAuth;
    firebase_auth_web_user.UserWeb.__proto__.new.call(this, auth, multiFactor, new messages$46pigeon$0.PigeonUserDetails.new({userInfo: new messages$46pigeon$0.PigeonUserInfo.new({displayName: _webUser.displayName, email: _webUser.email, isEmailVerified: _webUser.emailVerified, isAnonymous: _webUser.isAnonymous, creationTimestamp: T$.intN().as(_webUser.metadata.creationTime != null ? dart.dsend(js.context._get("Date"), 'callMethod', ["parse", T$.JSArrayOfStringN().of([_webUser.metadata.creationTime])]) : null), lastSignInTimestamp: T$.intN().as(_webUser.metadata.lastSignInTime != null ? dart.dsend(js.context._get("Date"), 'callMethod', ["parse", T$.JSArrayOfStringN().of([_webUser.metadata.lastSignInTime])]) : null), phoneNumber: _webUser.phoneNumber, photoUrl: _webUser.photoURL, refreshToken: _webUser.refreshToken, tenantId: _webUser.tenantId, uid: _webUser.uid}), providerData: _webUser.providerData[S$.$map](T$.MapOfString$dynamic(), dart.fn(webUserInfo => new (T$.IdentityMapOfString$dynamic()).from(["displayName", webUserInfo.displayName, "email", webUserInfo.email, "isAnonymous", false, "isEmailVerified", true, "phoneNumber", webUserInfo.phoneNumber, "providerId", webUserInfo.providerId, "photoUrl", webUserInfo.photoURL, "uid", webUserInfo.uid]), T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic()))[S$.$toList]()}));
    ;
  }).prototype = firebase_auth_web_user.UserWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user.UserWeb);
  dart.addTypeCaches(firebase_auth_web_user.UserWeb);
  dart.setMethodSignature(firebase_auth_web_user.UserWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web_user.UserWeb.__proto__),
    getIdToken: dart.fnType(async.Future$(core.String), [core.bool])
  }));
  dart.setLibraryUri(firebase_auth_web_user.UserWeb, I[76]);
  dart.setFieldSignature(firebase_auth_web_user.UserWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_user.UserWeb.__proto__),
    [S$._webUser]: dart.finalFieldType(auth$.User),
    [S$._webAuth$3]: dart.finalFieldType(dart.nullable(auth$.Auth))
  }));
  firebase_auth_web_user._assertIsSignedOut = function _assertIsSignedOut(instance) {
    if (instance.currentUser == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "no-current-user", message: "No user currently signed in."}));
    }
  };
  platform_interface_user_credential.UserCredentialPlatform = class UserCredentialPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth$2];
    }
    set auth(value) {
      super.auth = value;
    }
    get additionalUserInfo() {
      return this[S$.additionalUserInfo];
    }
    set additionalUserInfo(value) {
      super.additionalUserInfo = value;
    }
    get credential() {
      return this[S$.credential$1];
    }
    set credential(value) {
      super.credential = value;
    }
    get user() {
      return this[S$.user];
    }
    set user(value) {
      super.user = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_user_credential.UserCredentialPlatform._token);
    }
  };
  (platform_interface_user_credential.UserCredentialPlatform.new = function(opts) {
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let user = opts && 'user' in opts ? opts.user : null;
    this[S$.auth$2] = auth;
    this[S$.additionalUserInfo] = additionalUserInfo;
    this[S$.credential$1] = credential;
    this[S$.user] = user;
    platform_interface_user_credential.UserCredentialPlatform.__proto__.new.call(this, {token: platform_interface_user_credential.UserCredentialPlatform._token});
    ;
  }).prototype = platform_interface_user_credential.UserCredentialPlatform.prototype;
  dart.addTypeTests(platform_interface_user_credential.UserCredentialPlatform);
  dart.addTypeCaches(platform_interface_user_credential.UserCredentialPlatform);
  dart.setStaticMethodSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_user_credential.UserCredentialPlatform, I[77]);
  dart.setFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user_credential.UserCredentialPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    additionalUserInfo: dart.finalFieldType(dart.nullable(additional_user_info.AdditionalUserInfo)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    user: dart.finalFieldType(dart.nullable(platform_interface_user.UserPlatform))
  }));
  dart.setStaticFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user_credential.UserCredentialPlatform, {
    /*platform_interface_user_credential.UserCredentialPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user_credential.UserCredentialWeb = class UserCredentialWeb extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, webUserCredential, webAuth) {
      return new firebase_auth_web_user_credential.UserCredentialWeb.new(auth, webUserCredential, webAuth);
    }
  };
  (firebase_auth_web_user_credential.UserCredentialWeb.new = function(auth, webUserCredential, webAuth) {
    let t131;
    firebase_auth_web_user_credential.UserCredentialWeb.__proto__.new.call(this, {auth: auth, additionalUserInfo: web_utils$.convertWebAdditionalUserInfo((t131 = webUserCredential, t131 == null ? null : t131.additionalUserInfo)), credential: web_utils$.convertWebOAuthCredential(webUserCredential), user: webUserCredential == null ? null : new firebase_auth_web_user.UserWeb.new(auth, new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, multi_factor.multiFactor(dart.nullCheck(webUserCredential.user))), dart.nullCheck(webUserCredential.user), webAuth)});
    ;
  }).prototype = firebase_auth_web_user_credential.UserCredentialWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.addTypeCaches(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.setLibraryUri(firebase_auth_web_user_credential.UserCredentialWeb, I[78]);
  const _is_UserInfo_default = Symbol('_is_UserInfo_default');
  auth$.UserInfo$ = dart.generic(T => {
    class UserInfo extends js$0.JsObjectWrapper$(T) {
      get displayName() {
        return this.jsObject.displayName;
      }
      get email() {
        return this.jsObject.email;
      }
      get phoneNumber() {
        return this.jsObject.phoneNumber;
      }
      get photoURL() {
        return this.jsObject.photoURL;
      }
      get providerId() {
        return this.jsObject.providerId;
      }
      get uid() {
        return this.jsObject.uid;
      }
      static ['_#_fromJsObject#tearOff'](T, jsObject) {
        return new (auth$.UserInfo$(T))._fromJsObject(jsObject);
      }
    }
    (UserInfo._fromJsObject = function(jsObject) {
      UserInfo.__proto__.fromJsObject.call(this, T.as(jsObject));
      ;
    }).prototype = UserInfo.prototype;
    dart.addTypeTests(UserInfo);
    UserInfo.prototype[_is_UserInfo_default] = true;
    dart.addTypeCaches(UserInfo);
    dart.setGetterSignature(UserInfo, () => ({
      __proto__: dart.getGetters(UserInfo.__proto__),
      displayName: dart.nullable(core.String),
      email: dart.nullable(core.String),
      phoneNumber: dart.nullable(core.String),
      photoURL: dart.nullable(core.String),
      providerId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(UserInfo, I[79]);
    return UserInfo;
  });
  auth$.UserInfo = auth$.UserInfo$();
  dart.addTypeTests(auth$.UserInfo, _is_UserInfo_default);
  auth$.User = class User extends auth$.UserInfo$(dart.packageJSType("UserJsImpl", false)) {
    get uid() {
      return this.jsObject.uid;
    }
    get emailVerified() {
      return this.jsObject.emailVerified;
    }
    get isAnonymous() {
      return this.jsObject.isAnonymous;
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get providerData() {
      return this.jsObject.providerData[S$.$map](T$.UserInfoOfUserInfoJsImpl(), dart.fn(data => new (T$.UserInfoOfUserInfoJsImpl())._fromJsObject(dart.packageJSType("UserInfoJsImpl", false).as(data)), T$.dynamicToUserInfoOfUserInfoJsImpl()))[S$.$toList]();
    }
    get refreshToken() {
      return this.jsObject.refreshToken;
    }
    static getInstance(jsObject) {
      let t134, t133, t132, t131;
      if (jsObject == null) {
        return null;
      }
      t131 = auth$.User._expando;
      t132 = jsObject;
      t133 = t131._get(t132);
      return t133 == null ? (t134 = new auth$.User._fromJsObject(jsObject), t131._set(t132, t134), t134) : t133;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.User._fromJsObject(jsObject);
    }
    delete() {
      return utils$.handleThenable(dart.void, this.jsObject.delete());
    }
    getIdToken(forceRefresh = false) {
      return utils$.handleThenable(core.String, this.jsObject.getIdToken(forceRefresh));
    }
    linkWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.linkWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[40] || CT.C40);
    }
    linkWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    linkWithRedirect(provider) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.linkWithRedirect(this.jsObject, provider.jsObject));
    }
    reauthenticateWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.reauthenticateWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[40] || CT.C40);
    }
    reauthenticateWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    reauthenticateWithRedirect(provider) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.reauthenticateWithRedirect(this.jsObject, provider.jsObject));
    }
    reload() {
      return utils$.handleThenable(dart.void, this.jsObject.reload());
    }
    sendEmailVerification(actionCodeSettings = null) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.sendEmailVerification(this.jsObject, actionCodeSettings));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.verifyBeforeUpdateEmail(this.jsObject, newEmail, actionCodeSettings));
    }
    unlink(providerId) {
      return utils$.handleThenable(dart.packageJSType("UserJsImpl", false), dart.global.firebase_auth.unlink(this.jsObject, providerId)).then(auth$.User, dart.fn(user => dart.nullCheck(auth$.User.getInstance(user)), T$.UserJsImplToUser()));
    }
    updateEmail(newEmail) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updateEmail(this.jsObject, newEmail));
    }
    updatePassword(newPassword) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updatePassword(this.jsObject, newPassword));
    }
    updatePhoneNumber(phoneCredential) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updatePhoneNumber(this.jsObject, phoneCredential));
    }
    updateProfile(profile) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updateProfile(this.jsObject, profile));
    }
    getIdTokenResult(forceRefresh = null) {
      let promise = forceRefresh == null ? this.jsObject.getIdTokenResult() : this.jsObject.getIdTokenResult(forceRefresh);
      return utils$.handleThenable(dart.packageJSType("IdTokenResultImpl", false), promise).then(auth$.IdTokenResult, C[41] || CT.C41);
    }
    toJson() {
      return T$.MapOfString$dynamic().as(utils.dartify(this.jsObject.toJSON()));
    }
    toString() {
      return "User: " + this.uid;
    }
  };
  (auth$.User._fromJsObject = function(jsObject) {
    auth$.User.__proto__._fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.User.prototype;
  dart.addTypeTests(auth$.User);
  dart.addTypeCaches(auth$.User);
  dart.setMethodSignature(auth$.User, () => ({
    __proto__: dart.getMethods(auth$.User.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(core.String), [], [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    linkWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    linkWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    reauthenticateWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    reauthenticateWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    unlink: dart.fnType(async.Future$(auth$.User), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    updateProfile: dart.fnType(async.Future$(dart.void), [dart.packageJSType("UserProfile", false)]),
    getIdTokenResult: dart.fnType(async.Future$(auth$.IdTokenResult), [], [dart.nullable(core.bool)]),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(auth$.User, () => ['getInstance']);
  dart.setGetterSignature(auth$.User, () => ({
    __proto__: dart.getGetters(auth$.User.__proto__),
    emailVerified: core.bool,
    isAnonymous: core.bool,
    tenantId: dart.nullable(core.String),
    metadata: dart.packageJSType("firebase_auth.UserMetadata", false),
    providerData: core.List$(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))),
    refreshToken: core.String
  }));
  dart.setLibraryUri(auth$.User, I[79]);
  dart.setStaticFieldSignature(auth$.User, () => ['_expando']);
  dart.defineExtensionMethods(auth$.User, ['toString']);
  dart.defineLazy(auth$.User, {
    /*auth$.User._expando*/get _expando() {
      return new (T$.ExpandoOfUser()).new();
    }
  }, false);
  auth$.IdTokenResult = class IdTokenResult extends js$0.JsObjectWrapper$(dart.packageJSType("IdTokenResultImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.IdTokenResult._fromJsObject(jsObject);
    }
    get authTime() {
      return http_date.parseHttpDate(this.jsObject.authTime);
    }
    get claims() {
      return T$.MapNOfString$dynamic().as(utils.dartify(this.jsObject.claims));
    }
    get expirationTime() {
      return http_date.parseHttpDate(this.jsObject.expirationTime);
    }
    get issuedAtTime() {
      return http_date.parseHttpDate(this.jsObject.issuedAtTime);
    }
    get signInProvider() {
      return this.jsObject.signInProvider;
    }
    get token() {
      return this.jsObject.token;
    }
  };
  (auth$.IdTokenResult._fromJsObject = function(jsObject) {
    auth$.IdTokenResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.IdTokenResult.prototype;
  dart.addTypeTests(auth$.IdTokenResult);
  dart.addTypeCaches(auth$.IdTokenResult);
  dart.setGetterSignature(auth$.IdTokenResult, () => ({
    __proto__: dart.getGetters(auth$.IdTokenResult.__proto__),
    authTime: core.DateTime,
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: core.DateTime,
    issuedAtTime: core.DateTime,
    signInProvider: core.String,
    token: core.String
  }));
  dart.setLibraryUri(auth$.IdTokenResult, I[79]);
  auth$.Auth = class Auth extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.Auth", false)) {
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    get currentUser() {
      return auth$.User.getInstance(this.jsObject.currentUser);
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    set tenantId(tenantId) {
      this.jsObject.tenantId = tenantId;
    }
    get languageCode() {
      return this.jsObject.languageCode;
    }
    set languageCode(s) {
      this.jsObject.languageCode = s;
    }
    get settings() {
      return this.jsObject.settings;
    }
    onWaitInitState() {
      return async.async(dart.void, (function* onWaitInitState() {
        let completer = async.Completer.new();
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          this[S$._initUser] = auth$.User.getInstance(user);
          completer.complete();
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._changeController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        let unsubscribe = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        yield completer.future;
        unsubscribe();
      }).bind(this));
    }
    get onAuthStateChanged() {
      if (this[S$._changeController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[S$._changeController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._changeController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[S$._onAuthUnsubscribe] == null)) dart.assertFailed(null, I[80], 383, 16, "_onAuthUnsubscribe == null");
          this[S$._onAuthUnsubscribe] = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[S$._onAuthUnsubscribe])();
          this[S$._onAuthUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[S$._changeController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
        dart.nullCheck(this[S$._changeController]).add(this[S$._initUser]);
      }
      return dart.nullCheck(this[S$._changeController]).stream;
    }
    get onIdTokenChanged() {
      if (this[S$._idTokenChangedController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[S$._idTokenChangedController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._idTokenChangedController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[S$._onIdTokenChangedUnsubscribe] == null)) dart.assertFailed(null, I[80], 425, 16, "_onIdTokenChangedUnsubscribe == null");
          this[S$._onIdTokenChangedUnsubscribe] = this.jsObject.onIdTokenChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[S$._onIdTokenChangedUnsubscribe])();
          this[S$._onIdTokenChangedUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[S$._idTokenChangedController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
      }
      return dart.nullCheck(this[S$._idTokenChangedController]).stream;
    }
    static getInstance(jsObject) {
      let t134, t133, t132, t131;
      t131 = auth$.Auth._expando;
      t132 = jsObject;
      t133 = t131._get(t132);
      return t133 == null ? (t134 = new auth$.Auth._fromJsObject(jsObject), t131._set(t132, t134), t134) : t133;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.Auth._fromJsObject(jsObject);
    }
    applyActionCode(oobCode) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.applyActionCode(this.jsObject, oobCode));
    }
    checkActionCode(code) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ActionCodeInfo", false), dart.global.firebase_auth.checkActionCode(this.jsObject, code));
    }
    confirmPasswordReset(code, newPassword) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.confirmPasswordReset(this.jsObject, code, newPassword));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(auth$.UserCredential, (function* createUserWithEmailAndPassword() {
        let u = (yield utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.createUserWithEmailAndPassword(this.jsObject, email, password)));
        return new auth$.UserCredential.fromJsObject(u);
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return utils$.handleThenable(core.List, dart.global.firebase_auth.fetchSignInMethodsForEmail(this.jsObject, email)).then(T$.ListOfString(), C[42] || CT.C42);
    }
    isSignInWithEmailLink(emailLink) {
      return dart.global.firebase_auth.isSignInWithEmailLink(emailLink);
    }
    getRedirectResult() {
      return utils$.handleThenable(dart.nullable(dart.packageJSType("UserCredentialJsImpl", false)), dart.global.firebase_auth.getRedirectResult(this.jsObject)).then(T$.UserCredentialN(), dart.fn(value => value == null ? null : new auth$.UserCredential.fromJsObject(value), T$.UserCredentialJsImplNToUserCredentialN()));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.sendSignInLinkToEmail(this.jsObject, email, actionCodeSettings));
    }
    setPersistence(persistence) {
      let instance = null;
      switch (persistence) {
        case C[44] || CT.C44:
          {
            instance = dart.global.firebase_auth.browserLocalPersistence;
            break;
          }
        case C[45] || CT.C45:
          {
            instance = dart.global.firebase_auth.indexedDBLocalPersistence;
            break;
          }
        case C[46] || CT.C46:
          {
            instance = dart.global.firebase_auth.browserSessionPersistence;
            break;
          }
        case C[47] || CT.C47:
          {
            instance = dart.global.firebase_auth.inMemoryPersistence;
            break;
          }
      }
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.setPersistence(this.jsObject, instance));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.sendPasswordResetEmail(this.jsObject, email, actionCodeSettings));
    }
    signInWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    signInAnonymously() {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInAnonymously(this.jsObject)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    signInWithCustomToken(token) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCustomToken(this.jsObject, token)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    signInAndRetrieveDataWithCustomToken(token) {
      return this.signInWithCustomToken(token);
    }
    signInWithEmailAndPassword(email, password) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailAndPassword(this.jsObject, email, password)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    signInWithEmailLink(email, emailLink) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailLink(this.jsObject, email, emailLink)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.signInWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[40] || CT.C40);
    }
    signInWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[39] || CT.C39);
    }
    signInWithRedirect(provider) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.signInWithRedirect(this.jsObject, provider.jsObject));
    }
    signOut() {
      return utils$.handleThenable(dart.dynamic, this.jsObject.signOut());
    }
    useAuthEmulator(origin) {
      return dart.global.firebase_auth.connectAuthEmulator(this.jsObject, origin);
    }
    useDeviceLanguage() {
      return dart.global.firebase_auth.useDeviceLanguage(this.jsObject);
    }
    verifyPasswordResetCode(code) {
      return utils$.handleThenable(core.String, dart.global.firebase_auth.verifyPasswordResetCode(this.jsObject, code));
    }
  };
  (auth$.Auth._fromJsObject = function(jsObject) {
    this[S$._initUser] = null;
    this[S$._onAuthUnsubscribe] = null;
    this[S$._changeController] = null;
    this[S$._onIdTokenChangedUnsubscribe] = null;
    this[S$._idTokenChangedController] = null;
    auth$.Auth.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.Auth.prototype;
  dart.addTypeTests(auth$.Auth);
  dart.addTypeCaches(auth$.Auth);
  dart.setMethodSignature(auth$.Auth, () => ({
    __proto__: dart.getMethods(auth$.Auth.__proto__),
    onWaitInitState: dart.fnType(async.Future$(dart.void), []),
    applyActionCode: dart.fnType(async.Future, [core.String]),
    checkActionCode: dart.fnType(async.Future$(dart.packageJSType("firebase_auth.ActionCodeInfo", false)), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future, [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    getRedirectResult: dart.fnType(async.Future$(dart.nullable(auth$.UserCredential)), []),
    sendSignInLinkToEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    setPersistence: dart.fnType(async.Future, [types.Persistence]),
    sendPasswordResetEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    signInWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    signInAnonymously: dart.fnType(async.Future$(auth$.UserCredential), []),
    signInWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInAndRetrieveDataWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    signInWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signInWithRedirect: dart.fnType(async.Future, [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signOut: dart.fnType(async.Future, []),
    useAuthEmulator: dart.fnType(dart.void, [core.String]),
    useDeviceLanguage: dart.fnType(dart.void, []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String])
  }));
  dart.setStaticMethodSignature(auth$.Auth, () => ['getInstance']);
  dart.setGetterSignature(auth$.Auth, () => ({
    __proto__: dart.getGetters(auth$.Auth.__proto__),
    app: app$.App,
    currentUser: dart.nullable(auth$.User),
    tenantId: dart.nullable(core.String),
    languageCode: core.String,
    settings: dart.packageJSType("AuthSettings", false),
    onAuthStateChanged: async.Stream$(dart.nullable(auth$.User)),
    onIdTokenChanged: async.Stream$(dart.nullable(auth$.User))
  }));
  dart.setSetterSignature(auth$.Auth, () => ({
    __proto__: dart.getSetters(auth$.Auth.__proto__),
    tenantId: dart.nullable(core.String),
    languageCode: dart.nullable(core.String)
  }));
  dart.setLibraryUri(auth$.Auth, I[79]);
  dart.setFieldSignature(auth$.Auth, () => ({
    __proto__: dart.getFields(auth$.Auth.__proto__),
    [S$._initUser]: dart.fieldType(dart.nullable(auth$.User)),
    [S$._onAuthUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [S$._changeController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User)))),
    [S$._onIdTokenChangedUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [S$._idTokenChangedController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User))))
  }));
  dart.setStaticFieldSignature(auth$.Auth, () => ['_expando']);
  dart.defineLazy(auth$.Auth, {
    /*auth$.Auth._expando*/get _expando() {
      return new (T$.ExpandoOfAuth()).new();
    }
  }, false);
  const _is_AuthProvider_default = Symbol('_is_AuthProvider_default');
  auth$.AuthProvider$ = dart.generic(T => {
    class AuthProvider extends js$0.JsObjectWrapper$(T) {
      get providerId() {
        return this.jsObject.providerId;
      }
    }
    (AuthProvider.fromJsObject = function(jsObject) {
      AuthProvider.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = AuthProvider.prototype;
    dart.addTypeTests(AuthProvider);
    AuthProvider.prototype[_is_AuthProvider_default] = true;
    dart.addTypeCaches(AuthProvider);
    dart.setGetterSignature(AuthProvider, () => ({
      __proto__: dart.getGetters(AuthProvider.__proto__),
      providerId: core.String
    }));
    dart.setLibraryUri(AuthProvider, I[79]);
    return AuthProvider;
  });
  auth$.AuthProvider = auth$.AuthProvider$();
  dart.addTypeTests(auth$.AuthProvider, _is_AuthProvider_default);
  auth$.EmailAuthProvider = class EmailAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.EmailAuthProvider", false)) {
    static new() {
      return new auth$.EmailAuthProvider.fromJsObject(new dart.global.firebase_auth.EmailAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.EmailAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.EmailAuthProvider.fromJsObject(jsObject);
    }
    static credential(email, password) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credential(email, password));
    }
    static credentialWithLink(email, emailLink) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credentialWithLink(email, emailLink));
    }
  };
  (auth$.EmailAuthProvider.fromJsObject = function(jsObject) {
    auth$.EmailAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.EmailAuthProvider.prototype;
  dart.addTypeTests(auth$.EmailAuthProvider);
  dart.addTypeCaches(auth$.EmailAuthProvider);
  dart.setStaticMethodSignature(auth$.EmailAuthProvider, () => ['new', 'credential', 'credentialWithLink']);
  dart.setLibraryUri(auth$.EmailAuthProvider, I[79]);
  dart.setStaticFieldSignature(auth$.EmailAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.EmailAuthProvider, {
    /*auth$.EmailAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.EmailAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.FacebookAuthProvider = class FacebookAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.FacebookAuthProvider", false)) {
    static new() {
      return new auth$.FacebookAuthProvider.fromJsObject(new dart.global.firebase_auth.FacebookAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.FacebookAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.FacebookAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.FacebookAuthProvider.credential(token);
    }
  };
  (auth$.FacebookAuthProvider.fromJsObject = function(jsObject) {
    auth$.FacebookAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.FacebookAuthProvider.prototype;
  dart.addTypeTests(auth$.FacebookAuthProvider);
  dart.addTypeCaches(auth$.FacebookAuthProvider);
  dart.setMethodSignature(auth$.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(auth$.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.FacebookAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.FacebookAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.FacebookAuthProvider, I[79]);
  dart.setStaticFieldSignature(auth$.FacebookAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.FacebookAuthProvider, {
    /*auth$.FacebookAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.FacebookAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GithubAuthProvider = class GithubAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GithubAuthProvider", false)) {
    static new() {
      return new auth$.GithubAuthProvider.fromJsObject(new dart.global.firebase_auth.GithubAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GithubAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GithubAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.GithubAuthProvider.credential(token);
    }
  };
  (auth$.GithubAuthProvider.fromJsObject = function(jsObject) {
    auth$.GithubAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GithubAuthProvider.prototype;
  dart.addTypeTests(auth$.GithubAuthProvider);
  dart.addTypeCaches(auth$.GithubAuthProvider);
  dart.setMethodSignature(auth$.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GithubAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GithubAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GithubAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GithubAuthProvider, I[79]);
  dart.setStaticFieldSignature(auth$.GithubAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GithubAuthProvider, {
    /*auth$.GithubAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GithubAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GoogleAuthProvider = class GoogleAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GoogleAuthProvider", false)) {
    static new() {
      return new auth$.GoogleAuthProvider.fromJsObject(new dart.global.firebase_auth.GoogleAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GoogleAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GoogleAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(idToken = null, accessToken = null) {
      return dart.global.firebase_auth.GoogleAuthProvider.credential(idToken, accessToken);
    }
  };
  (auth$.GoogleAuthProvider.fromJsObject = function(jsObject) {
    auth$.GoogleAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GoogleAuthProvider.prototype;
  dart.addTypeTests(auth$.GoogleAuthProvider);
  dart.addTypeCaches(auth$.GoogleAuthProvider);
  dart.setMethodSignature(auth$.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GoogleAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GoogleAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GoogleAuthProvider, I[79]);
  dart.setStaticFieldSignature(auth$.GoogleAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GoogleAuthProvider, {
    /*auth$.GoogleAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GoogleAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.OAuthProvider = class OAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.OAuthProvider", false)) {
    static new(providerId) {
      return new auth$.OAuthProvider.fromJsObject(new dart.global.firebase_auth.OAuthProvider(providerId));
    }
    static ['_#new#tearOff'](providerId) {
      return auth$.OAuthProvider.new(providerId);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.OAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    credential(credentialOptions) {
      return this.jsObject.credential(credentialOptions);
    }
    static credentialFromResult(userCredential) {
      return dart.global.firebase_auth.OAuthProvider.credentialFromResult(userCredential);
    }
  };
  (auth$.OAuthProvider.fromJsObject = function(jsObject) {
    auth$.OAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.OAuthProvider.prototype;
  dart.addTypeTests(auth$.OAuthProvider);
  dart.addTypeCaches(auth$.OAuthProvider);
  dart.setMethodSignature(auth$.OAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.OAuthProvider.__proto__),
    addScope: dart.fnType(auth$.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.OAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))]),
    credential: dart.fnType(dart.packageJSType("OAuthCredential", false), [dart.packageJSType("OAuthCredentialOptions", false)])
  }));
  dart.setStaticMethodSignature(auth$.OAuthProvider, () => ['new', 'credentialFromResult']);
  dart.setLibraryUri(auth$.OAuthProvider, I[79]);
  auth$.TwitterAuthProvider = class TwitterAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.TwitterAuthProvider", false)) {
    static new() {
      return new auth$.TwitterAuthProvider.fromJsObject(new dart.global.firebase_auth.TwitterAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.TwitterAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.TwitterAuthProvider.fromJsObject(jsObject);
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.TwitterAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token, secret) {
      return dart.global.firebase_auth.TwitterAuthProvider.credential(token, secret);
    }
  };
  (auth$.TwitterAuthProvider.fromJsObject = function(jsObject) {
    auth$.TwitterAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.TwitterAuthProvider.prototype;
  dart.addTypeTests(auth$.TwitterAuthProvider);
  dart.addTypeCaches(auth$.TwitterAuthProvider);
  dart.setMethodSignature(auth$.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(auth$.TwitterAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.TwitterAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.TwitterAuthProvider, I[79]);
  dart.setStaticFieldSignature(auth$.TwitterAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.TwitterAuthProvider, {
    /*auth$.TwitterAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.TwitterAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.SAMLAuthProvider = class SAMLAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.SAMLAuthProvider", false)) {
    static new(providerId) {
      return new auth$.SAMLAuthProvider.fromJsObject(new dart.global.firebase_auth.SAMLAuthProvider(providerId));
    }
    static ['_#new#tearOff'](providerId) {
      return auth$.SAMLAuthProvider.new(providerId);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.SAMLAuthProvider.fromJsObject(jsObject);
    }
    static credentialFromResult(userCredential) {
      return dart.global.firebase_auth.SAMLAuthProvider.credentialFromResult(userCredential);
    }
  };
  (auth$.SAMLAuthProvider.fromJsObject = function(jsObject) {
    auth$.SAMLAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.SAMLAuthProvider.prototype;
  dart.addTypeTests(auth$.SAMLAuthProvider);
  dart.addTypeCaches(auth$.SAMLAuthProvider);
  dart.setStaticMethodSignature(auth$.SAMLAuthProvider, () => ['new', 'credentialFromResult']);
  dart.setLibraryUri(auth$.SAMLAuthProvider, I[79]);
  auth$.PhoneAuthProvider = class PhoneAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.PhoneAuthProvider", false)) {
    static get PROVIDER_ID() {
      return dart.global.firebase_auth.PhoneAuthProvider.PROVIDER_ID;
    }
    static new(auth = null) {
      return new auth$.PhoneAuthProvider.fromJsObject(auth != null ? new dart.global.firebase_auth.PhoneAuthProvider(auth.jsObject) : new dart.global.firebase_auth.PhoneAuthProvider());
    }
    static ['_#new#tearOff'](auth = null) {
      return auth$.PhoneAuthProvider.new(auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.PhoneAuthProvider.fromJsObject(jsObject);
    }
    verifyPhoneNumber(phoneOptions, applicationVerifier) {
      return utils$.handleThenable(core.String, this.jsObject.verifyPhoneNumber(phoneOptions, applicationVerifier.jsObject));
    }
    static credential(verificationId, verificationCode) {
      return dart.global.firebase_auth.PhoneAuthProvider.credential(verificationId, verificationCode);
    }
  };
  (auth$.PhoneAuthProvider.fromJsObject = function(jsObject) {
    auth$.PhoneAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.PhoneAuthProvider.prototype;
  dart.addTypeTests(auth$.PhoneAuthProvider);
  dart.addTypeCaches(auth$.PhoneAuthProvider);
  dart.setMethodSignature(auth$.PhoneAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.PhoneAuthProvider.__proto__),
    verifyPhoneNumber: dart.fnType(async.Future$(core.String), [dart.dynamic, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))])
  }));
  dart.setStaticMethodSignature(auth$.PhoneAuthProvider, () => ['new', 'credential']);
  dart.setStaticGetterSignature(auth$.PhoneAuthProvider, () => ['PROVIDER_ID']);
  dart.setLibraryUri(auth$.PhoneAuthProvider, I[79]);
  const _is_ApplicationVerifier_default = Symbol('_is_ApplicationVerifier_default');
  auth$.ApplicationVerifier$ = dart.generic(T => {
    class ApplicationVerifier extends js$0.JsObjectWrapper$(T) {
      get type() {
        return this.jsObject.type;
      }
      verify() {
        return utils$.handleThenable(core.String, this.jsObject.verify());
      }
    }
    (ApplicationVerifier.fromJsObject = function(jsObject) {
      ApplicationVerifier.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = ApplicationVerifier.prototype;
    dart.addTypeTests(ApplicationVerifier);
    ApplicationVerifier.prototype[_is_ApplicationVerifier_default] = true;
    dart.addTypeCaches(ApplicationVerifier);
    dart.setMethodSignature(ApplicationVerifier, () => ({
      __proto__: dart.getMethods(ApplicationVerifier.__proto__),
      verify: dart.fnType(async.Future$(core.String), [])
    }));
    dart.setGetterSignature(ApplicationVerifier, () => ({
      __proto__: dart.getGetters(ApplicationVerifier.__proto__),
      type: core.String
    }));
    dart.setLibraryUri(ApplicationVerifier, I[79]);
    return ApplicationVerifier;
  });
  auth$.ApplicationVerifier = auth$.ApplicationVerifier$();
  dart.addTypeTests(auth$.ApplicationVerifier, _is_ApplicationVerifier_default);
  auth$.RecaptchaVerifier = class RecaptchaVerifier extends auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.RecaptchaVerifier", false)) {
    static new(container, parameters, auth) {
      return new auth$.RecaptchaVerifier.fromJsObject(new dart.global.firebase_auth.RecaptchaVerifier(auth.jsObject, container, core.Object.as(utils.jsify(parameters))));
    }
    static ['_#new#tearOff'](container, parameters, auth) {
      return auth$.RecaptchaVerifier.new(container, parameters, auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.RecaptchaVerifier.fromJsObject(jsObject);
    }
    clear() {
      return this.jsObject.clear();
    }
    render() {
      return utils$.handleThenable(core.num, this.jsObject.render());
    }
  };
  (auth$.RecaptchaVerifier.fromJsObject = function(jsObject) {
    auth$.RecaptchaVerifier.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.RecaptchaVerifier.prototype;
  dart.addTypeTests(auth$.RecaptchaVerifier);
  dart.addTypeCaches(auth$.RecaptchaVerifier);
  dart.setMethodSignature(auth$.RecaptchaVerifier, () => ({
    __proto__: dart.getMethods(auth$.RecaptchaVerifier.__proto__),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.num), [])
  }));
  dart.setStaticMethodSignature(auth$.RecaptchaVerifier, () => ['new']);
  dart.setLibraryUri(auth$.RecaptchaVerifier, I[79]);
  auth$.ConfirmationResult = class ConfirmationResult extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.ConfirmationResult", false)) {
    get verificationId() {
      return this.jsObject.verificationId;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.ConfirmationResult.fromJsObject(jsObject);
    }
    confirm(verificationCode) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.confirm(verificationCode)).then(auth$.UserCredential, C[39] || CT.C39);
    }
  };
  (auth$.ConfirmationResult.fromJsObject = function(jsObject) {
    auth$.ConfirmationResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.ConfirmationResult.prototype;
  dart.addTypeTests(auth$.ConfirmationResult);
  dart.addTypeCaches(auth$.ConfirmationResult);
  dart.setMethodSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getMethods(auth$.ConfirmationResult.__proto__),
    confirm: dart.fnType(async.Future$(auth$.UserCredential), [core.String])
  }));
  dart.setGetterSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getGetters(auth$.ConfirmationResult.__proto__),
    verificationId: core.String
  }));
  dart.setLibraryUri(auth$.ConfirmationResult, I[79]);
  auth$.UserCredential = class UserCredential extends js$0.JsObjectWrapper$(dart.packageJSType("UserCredentialJsImpl", false)) {
    get user() {
      return auth$.User.getInstance(this.jsObject.user);
    }
    get operationType() {
      return this.jsObject.operationType;
    }
    get additionalUserInfo() {
      return new auth$.AdditionalUserInfo.fromJsObject(dart.global.firebase_auth.getAdditionalUserInfo(this.jsObject));
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.UserCredential.fromJsObject(jsObject);
    }
  };
  (auth$.UserCredential.fromJsObject = function(jsObject) {
    auth$.UserCredential.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.UserCredential.prototype;
  dart.addTypeTests(auth$.UserCredential);
  dart.addTypeCaches(auth$.UserCredential);
  dart.setGetterSignature(auth$.UserCredential, () => ({
    __proto__: dart.getGetters(auth$.UserCredential.__proto__),
    user: dart.nullable(auth$.User),
    operationType: core.String,
    additionalUserInfo: dart.nullable(auth$.AdditionalUserInfo)
  }));
  dart.setLibraryUri(auth$.UserCredential, I[79]);
  auth$.AdditionalUserInfo = class AdditionalUserInfo extends js$0.JsObjectWrapper$(dart.packageJSType("AdditionalUserInfoJsImpl", false)) {
    get providerId() {
      return this.jsObject.providerId;
    }
    get profile() {
      return T$.MapNOfString$dynamic().as(utils.dartify(this.jsObject.profile));
    }
    get username() {
      return this.jsObject.username;
    }
    get isNewUser() {
      return this.jsObject.isNewUser;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.AdditionalUserInfo.fromJsObject(jsObject);
    }
  };
  (auth$.AdditionalUserInfo.fromJsObject = function(jsObject) {
    auth$.AdditionalUserInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.AdditionalUserInfo.prototype;
  dart.addTypeTests(auth$.AdditionalUserInfo);
  dart.addTypeCaches(auth$.AdditionalUserInfo);
  dart.setGetterSignature(auth$.AdditionalUserInfo, () => ({
    __proto__: dart.getGetters(auth$.AdditionalUserInfo.__proto__),
    providerId: core.String,
    profile: dart.nullable(core.Map$(core.String, dart.dynamic)),
    username: core.String,
    isNewUser: core.bool
  }));
  dart.setLibraryUri(auth$.AdditionalUserInfo, I[79]);
  auth$.getAuthInstance = function getAuthInstance(app) {
    return auth$.Auth.getInstance(dart.global.firebase_auth.initializeAuth(app.jsObject, utils.jsify(new (T$.IdentityMapOfString$dynamic()).from(["errorMap", dart.global.firebase_auth.debugErrorMap, "persistence", T$.JSArrayOfPersistence().of([dart.global.firebase_auth.indexedDBLocalPersistence, dart.global.firebase_auth.browserLocalPersistence, dart.global.firebase_auth.browserSessionPersistence]), "popupRedirectResolver", dart.global.firebase_auth.browserPopupRedirectResolver]))));
  };
  multi_factor.MultiFactorUser = class MultiFactorUser extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorUserJsImpl", false)) {
    static getInstance(jsObject) {
      let t134, t133, t132, t131;
      t131 = multi_factor.MultiFactorUser._expando;
      t132 = jsObject;
      t133 = t131._get(t132);
      return t133 == null ? (t134 = new multi_factor.MultiFactorUser._fromJsObject(jsObject), t131._set(t132, t134), t134) : t133;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorUser._fromJsObject(jsObject);
    }
    get enrolledFactors() {
      return this.jsObject.enrolledFactors[S$.$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), C[48] || CT.C48)[S$.$toList]();
    }
    get session() {
      return utils$.handleThenable(dart.packageJSType("MultiFactorSessionJsImpl", false), this.jsObject.getSession()).then(multi_factor.MultiFactorSession, C[49] || CT.C49);
    }
    enroll(assertion, displayName) {
      return utils$.handleThenable(dart.void, this.jsObject.enroll(assertion.jsObject, displayName));
    }
    unenroll(multiFactorInfoId) {
      return utils$.handleThenable(dart.void, this.jsObject.unenroll(multiFactorInfoId));
    }
  };
  (multi_factor.MultiFactorUser._fromJsObject = function(jsObject) {
    multi_factor.MultiFactorUser.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorUser.prototype;
  dart.addTypeTests(multi_factor.MultiFactorUser);
  dart.addTypeCaches(multi_factor.MultiFactorUser);
  dart.setMethodSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorUser.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)), dart.nullable(core.String)]),
    unenroll: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(multi_factor.MultiFactorUser, () => ['getInstance']);
  dart.setGetterSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorUser.__proto__),
    enrolledFactors: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: async.Future$(multi_factor.MultiFactorSession)
  }));
  dart.setLibraryUri(multi_factor.MultiFactorUser, I[81]);
  dart.setStaticFieldSignature(multi_factor.MultiFactorUser, () => ['_expando']);
  dart.defineLazy(multi_factor.MultiFactorUser, {
    /*multi_factor.MultiFactorUser._expando*/get _expando() {
      return new (T$.ExpandoOfMultiFactorUser()).new();
    }
  }, false);
  const _is_MultiFactorInfo_default = Symbol('_is_MultiFactorInfo_default');
  multi_factor.MultiFactorInfo$ = dart.generic(T => {
    class MultiFactorInfo extends js$0.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorInfo$(T)).fromJsObject(jsObject);
      }
      get displayName() {
        return this.jsObject.displayName;
      }
      get enrollmentTime() {
        return this.jsObject.enrollmentTime;
      }
      get factorId() {
        return this.jsObject.factorId;
      }
      get uid() {
        return this.jsObject.uid;
      }
    }
    (MultiFactorInfo.fromJsObject = function(jsObject) {
      MultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorInfo.prototype;
    dart.addTypeTests(MultiFactorInfo);
    MultiFactorInfo.prototype[_is_MultiFactorInfo_default] = true;
    dart.addTypeCaches(MultiFactorInfo);
    dart.setGetterSignature(MultiFactorInfo, () => ({
      __proto__: dart.getGetters(MultiFactorInfo.__proto__),
      displayName: dart.nullable(core.String),
      enrollmentTime: core.String,
      factorId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(MultiFactorInfo, I[81]);
    return MultiFactorInfo;
  });
  multi_factor.MultiFactorInfo = multi_factor.MultiFactorInfo$();
  dart.addTypeTests(multi_factor.MultiFactorInfo, _is_MultiFactorInfo_default);
  multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends multi_factor.MultiFactorInfo$(dart.packageJSType("firebase_auth.PhoneMultiFactorInfo", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorInfo.fromJsObject(jsObject);
    }
    get phoneNumber() {
      return this.jsObject.phoneNumber;
    }
  };
  (multi_factor.PhoneMultiFactorInfo.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorInfo);
  dart.setGetterSignature(multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getGetters(multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: core.String
  }));
  dart.setLibraryUri(multi_factor.PhoneMultiFactorInfo, I[81]);
  multi_factor.TotpMultiFactorInfo = class TotpMultiFactorInfo extends multi_factor.MultiFactorInfo$(dart.packageJSType("firebase_auth.TotpMultiFactorInfo", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpMultiFactorInfo.fromJsObject(jsObject);
    }
  };
  (multi_factor.TotpMultiFactorInfo.fromJsObject = function(jsObject) {
    multi_factor.TotpMultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpMultiFactorInfo.prototype;
  dart.addTypeTests(multi_factor.TotpMultiFactorInfo);
  dart.addTypeCaches(multi_factor.TotpMultiFactorInfo);
  dart.setLibraryUri(multi_factor.TotpMultiFactorInfo, I[81]);
  multi_factor.MultiFactorSession = class MultiFactorSession extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorSessionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorSession.fromJsObject(jsObject);
    }
  };
  (multi_factor.MultiFactorSession.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorSession.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(multi_factor.MultiFactorSession);
  dart.addTypeCaches(multi_factor.MultiFactorSession);
  dart.setLibraryUri(multi_factor.MultiFactorSession, I[81]);
  const _is_MultiFactorAssertion_default = Symbol('_is_MultiFactorAssertion_default');
  multi_factor.MultiFactorAssertion$ = dart.generic(T => {
    class MultiFactorAssertion extends js$0.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorAssertion$(T)).fromJsObject(jsObject);
      }
      get factorId() {
        return this.jsObject.factorId;
      }
    }
    (MultiFactorAssertion.fromJsObject = function(jsObject) {
      MultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorAssertion.prototype;
    dart.addTypeTests(MultiFactorAssertion);
    MultiFactorAssertion.prototype[_is_MultiFactorAssertion_default] = true;
    dart.addTypeCaches(MultiFactorAssertion);
    dart.setGetterSignature(MultiFactorAssertion, () => ({
      __proto__: dart.getGetters(MultiFactorAssertion.__proto__),
      factorId: core.String
    }));
    dart.setLibraryUri(MultiFactorAssertion, I[81]);
    return MultiFactorAssertion;
  });
  multi_factor.MultiFactorAssertion = multi_factor.MultiFactorAssertion$();
  dart.addTypeTests(multi_factor.MultiFactorAssertion, _is_MultiFactorAssertion_default);
  multi_factor.PhoneMultiFactorAssertion = class PhoneMultiFactorAssertion extends multi_factor.MultiFactorAssertion$(dart.packageJSType("PhoneMultiFactorAssertionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(jsObject);
    }
  };
  (multi_factor.PhoneMultiFactorAssertion.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorAssertion);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorAssertion);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorAssertion, I[81]);
  multi_factor.MultiFactorResolver = class MultiFactorResolver extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorResolverJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorResolver.fromJsObject(jsObject);
    }
    get hints() {
      return this.jsObject.hints[S$.$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), C[48] || CT.C48)[S$.$toList]();
    }
    get session() {
      return new multi_factor.MultiFactorSession.fromJsObject(this.jsObject.session);
    }
    resolveSignIn(assertion) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.resolveSignIn(assertion.jsObject)).then(auth$.UserCredential, C[39] || CT.C39);
    }
  };
  (multi_factor.MultiFactorResolver.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorResolver.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorResolver.prototype;
  dart.addTypeTests(multi_factor.MultiFactorResolver);
  dart.addTypeCaches(multi_factor.MultiFactorResolver);
  dart.setMethodSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorResolver.__proto__),
    resolveSignIn: dart.fnType(async.Future$(auth$.UserCredential), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false))])
  }));
  dart.setGetterSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorResolver.__proto__),
    hints: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: multi_factor.MultiFactorSession
  }));
  dart.setLibraryUri(multi_factor.MultiFactorResolver, I[81]);
  multi_factor.PhoneMultiFactorGenerator = class PhoneMultiFactorGenerator extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.PhoneMultiFactorGenerator", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorGenerator.fromJsObject(jsObject);
    }
    static assertion(credential) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.PhoneMultiFactorGenerator.assertion(credential)));
    }
  };
  (multi_factor.PhoneMultiFactorGenerator.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorGenerator.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorGenerator);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorGenerator);
  dart.setStaticMethodSignature(multi_factor.PhoneMultiFactorGenerator, () => ['assertion']);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorGenerator, I[81]);
  multi_factor.TotpMultiFactorAssertion = class TotpMultiFactorAssertion extends multi_factor.MultiFactorAssertion$(dart.packageJSType("TotpMultiFactorAssertionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpMultiFactorAssertion.fromJsObject(jsObject);
    }
  };
  (multi_factor.TotpMultiFactorAssertion.fromJsObject = function(jsObject) {
    multi_factor.TotpMultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpMultiFactorAssertion.prototype;
  dart.addTypeTests(multi_factor.TotpMultiFactorAssertion);
  dart.addTypeCaches(multi_factor.TotpMultiFactorAssertion);
  dart.setLibraryUri(multi_factor.TotpMultiFactorAssertion, I[81]);
  multi_factor.TotpSecret = class TotpSecret extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.TotpSecret", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpSecret.fromJsObject(jsObject);
    }
    get codeInterval() {
      return this.jsObject.codeIntervalSeconds[S$.$toInt]();
    }
    get codeLength() {
      return this.jsObject.codeLength[S$.$toInt]();
    }
    get enrollmentCompletionDeadline() {
      return http_date.parseHttpDate(this.jsObject.enrollmentCompletionDeadline);
    }
    get hashingAlgorithm() {
      return this.jsObject.hashingAlgorithm;
    }
    get secretKey() {
      return this.jsObject.secretKey;
    }
    generateQrCodeUrl(accountName, issuer) {
      return this.jsObject.generateQrCodeUrl(accountName, issuer);
    }
  };
  (multi_factor.TotpSecret.fromJsObject = function(jsObject) {
    multi_factor.TotpSecret.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpSecret.prototype;
  dart.addTypeTests(multi_factor.TotpSecret);
  dart.addTypeCaches(multi_factor.TotpSecret);
  dart.setMethodSignature(multi_factor.TotpSecret, () => ({
    __proto__: dart.getMethods(multi_factor.TotpSecret.__proto__),
    generateQrCodeUrl: dart.fnType(core.String, [dart.nullable(core.String), dart.nullable(core.String)])
  }));
  dart.setGetterSignature(multi_factor.TotpSecret, () => ({
    __proto__: dart.getGetters(multi_factor.TotpSecret.__proto__),
    codeInterval: core.int,
    codeLength: core.int,
    enrollmentCompletionDeadline: core.DateTime,
    hashingAlgorithm: core.String,
    secretKey: core.String
  }));
  dart.setLibraryUri(multi_factor.TotpSecret, I[81]);
  multi_factor.TotpMultiFactorGenerator = class TotpMultiFactorGenerator extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.TotpMultiFactorGenerator", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpMultiFactorGenerator.fromJsObject(jsObject);
    }
    static assertionForSignIn(enrollmentId, oneTimePassword) {
      return new multi_factor.TotpMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.TotpMultiFactorGenerator.assertionForSignIn(enrollmentId, oneTimePassword)));
    }
    static assertionForEnrollment(secret, oneTimePassword) {
      return new multi_factor.TotpMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.TotpMultiFactorGenerator.assertionForEnrollment(secret.jsObject, oneTimePassword)));
    }
    static generateSecret(session) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.TotpSecret", false), dart.global.firebase_auth.TotpMultiFactorGenerator.generateSecret(session.jsObject)).then(multi_factor.TotpSecret, C[50] || CT.C50);
    }
  };
  (multi_factor.TotpMultiFactorGenerator.fromJsObject = function(jsObject) {
    multi_factor.TotpMultiFactorGenerator.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpMultiFactorGenerator.prototype;
  dart.addTypeTests(multi_factor.TotpMultiFactorGenerator);
  dart.addTypeCaches(multi_factor.TotpMultiFactorGenerator);
  dart.setStaticMethodSignature(multi_factor.TotpMultiFactorGenerator, () => ['assertionForSignIn', 'assertionForEnrollment', 'generateSecret']);
  dart.setLibraryUri(multi_factor.TotpMultiFactorGenerator, I[81]);
  multi_factor.multiFactor = function multiFactor(user) {
    return multi_factor.MultiFactorUser.getInstance(dart.global.firebase_auth.multiFactor(user.jsObject));
  };
  multi_factor.getMultiFactorResolver = function getMultiFactorResolver(auth, error) {
    return new multi_factor.MultiFactorResolver.fromJsObject(dart.global.firebase_auth.getMultiFactorResolver(auth.jsObject, error));
  };
  multi_factor.fromJsMultiFactorInfo = function fromJsMultiFactorInfo(e) {
    if (e.factorId === "phone") {
      return new multi_factor.PhoneMultiFactorInfo.fromJsObject(dart.packageJSType("firebase_auth.PhoneMultiFactorInfo", false).as(e));
    } else if (e.factorId === "totp") {
      return new multi_factor.TotpMultiFactorInfo.fromJsObject(dart.packageJSType("firebase_auth.TotpMultiFactorInfo", false).as(e));
    } else {
      return new (T$.MultiFactorInfoOfMultiFactorInfoJsImpl()).fromJsObject(e);
    }
  };
  js$['DomConsoleExtension|get#debug'] = function DomConsoleExtension$124get$35debug($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "debug");
  };
  js$['DomConsoleExtension|get#info'] = function DomConsoleExtension$124get$35info($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "info");
  };
  js$['DomConsoleExtension|get#log'] = function DomConsoleExtension$124get$35log($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "log");
  };
  js$['DomConsoleExtension|get#warn'] = function DomConsoleExtension$124get$35warn($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "warn");
  };
  js$['DomConsoleExtension|get#error'] = function DomConsoleExtension$124get$35error($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "error");
  };
  js$['DomErrorExtension|get#message'] = function DomErrorExtension$124get$35message($this) {
    return js_util.getProperty(T$.StringN(), $this, "message");
  };
  js$['DomErrorExtension|get#stack'] = function DomErrorExtension$124get$35stack($this) {
    return js_util.getProperty(T$.StringN(), $this, "stack");
  };
  js$['DomErrorExtension|get#name'] = function DomErrorExtension$124get$35name($this) {
    return js_util.getProperty(core.String, $this, "name");
  };
  js$['DomErrorExtension|get#cause'] = function DomErrorExtension$124get$35cause($this) {
    return js_util.getProperty(T$.ObjectN(), $this, "cause");
  };
  js$['DomTrustedTypePolicyFactoryExtension|createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124createPolicy($this, policyName, policyOptions) {
    return js_util._callMethodUnchecked2(dart.packageJSType("DomTrustedTypePolicy", true), $this, "createPolicy", policyName, policyOptions);
  };
  js$['DomTrustedTypePolicyFactoryExtension|get#createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124get$35createPolicy($this) {
    return dart.fn((policyName, policyOptions) => js$['DomTrustedTypePolicyFactoryExtension|createPolicy']($this, policyName, policyOptions), T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy());
  };
  js$['DomTrustedTypePolicyExtension|createScriptURL'] = function DomTrustedTypePolicyExtension$124createScriptURL($this, input) {
    return js_util._callMethodUnchecked1(dart.packageJSType("DomTrustedScriptUrl", true), $this, "createScriptURL", input);
  };
  js$['DomTrustedTypePolicyExtension|get#createScriptURL'] = function DomTrustedTypePolicyExtension$124get$35createScriptURL($this) {
    return dart.fn(input => js$['DomTrustedTypePolicyExtension|createScriptURL']($this, input), T$.StringToDomTrustedScriptUrl());
  };
  core$.initializeApp = function initializeApp(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    name == null ? name = "[DEFAULT]" : null;
    return app$.App.getInstance(dart.global.firebase_core.initializeApp({apiKey: apiKey, authDomain: authDomain, databaseURL: databaseURL, projectId: projectId, storageBucket: storageBucket, messagingSenderId: messagingSenderId, measurementId: measurementId, appId: appId}, name));
  };
  core$.app = function app$0(name = null) {
    return app$.App.getInstance(name != null ? dart.global.firebase_core.getApp(name) : dart.global.firebase_core.getApp());
  };
  dart.copyProperties(core$, {
    get apps() {
      return dart.global.firebase_core.getApps()[S$.$map](app$.App, dart.fn(e => app$.App.getInstance(dart.packageJSType("firebase_core.FirebaseApp", false).as(e)), T$.dynamicToApp()))[S$.$toList]();
    }
  });
  messages$46pigeon.PigeonFirebaseOptions = class PigeonFirebaseOptions extends core.Object {
    get apiKey() {
      return this[S$.apiKey$1];
    }
    set apiKey(value) {
      this[S$.apiKey$1] = value;
    }
    get appId() {
      return this[S$.appId$1];
    }
    set appId(value) {
      this[S$.appId$1] = value;
    }
    get messagingSenderId() {
      return this[S$.messagingSenderId$1];
    }
    set messagingSenderId(value) {
      this[S$.messagingSenderId$1] = value;
    }
    get projectId() {
      return this[S$.projectId$1];
    }
    set projectId(value) {
      this[S$.projectId$1] = value;
    }
    get authDomain() {
      return this[S$.authDomain$1];
    }
    set authDomain(value) {
      this[S$.authDomain$1] = value;
    }
    get databaseURL() {
      return this[S$.databaseURL$2];
    }
    set databaseURL(value) {
      this[S$.databaseURL$2] = value;
    }
    get storageBucket() {
      return this[S$.storageBucket$1];
    }
    set storageBucket(value) {
      this[S$.storageBucket$1] = value;
    }
    get measurementId() {
      return this[S$.measurementId$1];
    }
    set measurementId(value) {
      this[S$.measurementId$1] = value;
    }
    get trackingId() {
      return this[S$.trackingId$1];
    }
    set trackingId(value) {
      this[S$.trackingId$1] = value;
    }
    get deepLinkURLScheme() {
      return this[S$.deepLinkURLScheme$1];
    }
    set deepLinkURLScheme(value) {
      this[S$.deepLinkURLScheme$1] = value;
    }
    get androidClientId() {
      return this[S$.androidClientId$1];
    }
    set androidClientId(value) {
      this[S$.androidClientId$1] = value;
    }
    get iosClientId() {
      return this[S$.iosClientId$1];
    }
    set iosClientId(value) {
      this[S$.iosClientId$1] = value;
    }
    get iosBundleId() {
      return this[S$.iosBundleId$1];
    }
    set iosBundleId(value) {
      this[S$.iosBundleId$1] = value;
    }
    get appGroupId() {
      return this[S$.appGroupId$1];
    }
    set appGroupId(value) {
      this[S$.appGroupId$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.apiKey, this.appId, this.messagingSenderId, this.projectId, this.authDomain, this.databaseURL, this.storageBucket, this.measurementId, this.trackingId, this.deepLinkURLScheme, this.androidClientId, this.iosClientId, this.iosBundleId, this.appGroupId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: core.String.as(dart.nullCheck(result[S$.$_get](0))), appId: core.String.as(dart.nullCheck(result[S$.$_get](1))), messagingSenderId: core.String.as(dart.nullCheck(result[S$.$_get](2))), projectId: core.String.as(dart.nullCheck(result[S$.$_get](3))), authDomain: T$.StringN().as(result[S$.$_get](4)), databaseURL: T$.StringN().as(result[S$.$_get](5)), storageBucket: T$.StringN().as(result[S$.$_get](6)), measurementId: T$.StringN().as(result[S$.$_get](7)), trackingId: T$.StringN().as(result[S$.$_get](8)), deepLinkURLScheme: T$.StringN().as(result[S$.$_get](9)), androidClientId: T$.StringN().as(result[S$.$_get](10)), iosClientId: T$.StringN().as(result[S$.$_get](11)), iosBundleId: T$.StringN().as(result[S$.$_get](12)), appGroupId: T$.StringN().as(result[S$.$_get](13))});
    }
  };
  (messages$46pigeon.PigeonFirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[S$.apiKey$1] = apiKey;
    this[S$.appId$1] = appId;
    this[S$.messagingSenderId$1] = messagingSenderId;
    this[S$.projectId$1] = projectId;
    this[S$.authDomain$1] = authDomain;
    this[S$.databaseURL$2] = databaseURL;
    this[S$.storageBucket$1] = storageBucket;
    this[S$.measurementId$1] = measurementId;
    this[S$.trackingId$1] = trackingId;
    this[S$.deepLinkURLScheme$1] = deepLinkURLScheme;
    this[S$.androidClientId$1] = androidClientId;
    this[S$.iosClientId$1] = iosClientId;
    this[S$.iosBundleId$1] = iosBundleId;
    this[S$.appGroupId$1] = appGroupId;
    ;
  }).prototype = messages$46pigeon.PigeonFirebaseOptions.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonFirebaseOptions);
  dart.addTypeCaches(messages$46pigeon.PigeonFirebaseOptions);
  dart.setMethodSignature(messages$46pigeon.PigeonFirebaseOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonFirebaseOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonFirebaseOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonFirebaseOptions, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonFirebaseOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonFirebaseOptions.__proto__),
    apiKey: dart.fieldType(core.String),
    appId: dart.fieldType(core.String),
    messagingSenderId: dart.fieldType(core.String),
    projectId: dart.fieldType(core.String),
    authDomain: dart.fieldType(dart.nullable(core.String)),
    databaseURL: dart.fieldType(dart.nullable(core.String)),
    storageBucket: dart.fieldType(dart.nullable(core.String)),
    measurementId: dart.fieldType(dart.nullable(core.String)),
    trackingId: dart.fieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.fieldType(dart.nullable(core.String)),
    androidClientId: dart.fieldType(dart.nullable(core.String)),
    iosClientId: dart.fieldType(dart.nullable(core.String)),
    iosBundleId: dart.fieldType(dart.nullable(core.String)),
    appGroupId: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonInitializeResponse = class PigeonInitializeResponse extends core.Object {
    get name() {
      return this[S$.name$2];
    }
    set name(value) {
      this[S$.name$2] = value;
    }
    get options() {
      return this[S$.options$1];
    }
    set options(value) {
      this[S$.options$1] = value;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$.isAutomaticDataCollectionEnabled];
    }
    set isAutomaticDataCollectionEnabled(value) {
      this[S$.isAutomaticDataCollectionEnabled] = value;
    }
    get pluginConstants() {
      return this[S$.pluginConstants];
    }
    set pluginConstants(value) {
      this[S$.pluginConstants] = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      return new messages$46pigeon.PigeonInitializeResponse.new({name: name, options: options, isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled, pluginConstants: pluginConstants});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.name, this.options.encode(), this.isAutomaticDataCollectionEnabled, this.pluginConstants]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonInitializeResponse.new({name: core.String.as(dart.nullCheck(result[S$.$_get](0))), options: messages$46pigeon.PigeonFirebaseOptions.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))), isAutomaticDataCollectionEnabled: T$.boolN().as(result[S$.$_get](2)), pluginConstants: dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](3)))[S$.$cast](T$.StringN(), T$.ObjectN())});
    }
  };
  (messages$46pigeon.PigeonInitializeResponse.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let options = opts && 'options' in opts ? opts.options : null;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
    this[S$.name$2] = name;
    this[S$.options$1] = options;
    this[S$.isAutomaticDataCollectionEnabled] = isAutomaticDataCollectionEnabled;
    this[S$.pluginConstants] = pluginConstants;
    ;
  }).prototype = messages$46pigeon.PigeonInitializeResponse.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonInitializeResponse);
  dart.addTypeCaches(messages$46pigeon.PigeonInitializeResponse);
  dart.setMethodSignature(messages$46pigeon.PigeonInitializeResponse, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonInitializeResponse.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonInitializeResponse, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonInitializeResponse, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonInitializeResponse, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonInitializeResponse.__proto__),
    name: dart.fieldType(core.String),
    options: dart.fieldType(messages$46pigeon.PigeonFirebaseOptions),
    isAutomaticDataCollectionEnabled: dart.fieldType(dart.nullable(core.bool)),
    pluginConstants: dart.fieldType(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))
  }));
  messages$46pigeon._FirebaseCoreHostApiCodec = class _FirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._FirebaseCoreHostApiCodec.new = function() {
    messages$46pigeon._FirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseCoreHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseCoreHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseCoreHostApiCodec, I[82]);
  messages$46pigeon.FirebaseCoreHostApi = class FirebaseCoreHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseCoreHostApi.new({binaryMessenger: binaryMessenger});
    }
    initializeApp(arg_appName, arg_initializeAppRequest) {
      return async.async(messages$46pigeon.PigeonInitializeResponse, (function* initializeApp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_initializeAppRequest])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonInitializeResponseN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), (function* initializeCore() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.PigeonInitializeResponseN());
        }
      }).bind(this));
    }
    optionsFromResource() {
      return async.async(messages$46pigeon.PigeonFirebaseOptions, (function* optionsFromResource() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonFirebaseOptionsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseCoreHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseCoreHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseCoreHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseCoreHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseCoreHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseCoreHostApi.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon.PigeonInitializeResponse), [core.String, messages$46pigeon.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseCoreHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.FirebaseCoreHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseCoreHostApi.__proto__),
    [S$._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseCoreHostApi, {
    /*messages$46pigeon.FirebaseCoreHostApi.codec*/get codec() {
      return C[51] || CT.C51;
    }
  }, false);
  messages$46pigeon.FirebaseAppHostApi = class FirebaseAppHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseAppHostApi.new({binaryMessenger: binaryMessenger});
    }
    setAutomaticDataCollectionEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    delete(arg_appName) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseAppHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseAppHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseAppHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseAppHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseAppHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseAppHostApi.__proto__),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    delete: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseAppHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.FirebaseAppHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseAppHostApi.__proto__),
    [S$._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseAppHostApi, {
    /*messages$46pigeon.FirebaseAppHostApi.codec*/get codec() {
      return C[52] || CT.C52;
    }
  }, false);
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[9]);
  mocks.MockFirebaseApp = class MockFirebaseApp extends core.Object {
    initializeApp(appName, initializeAppRequest) {
      return async.async(messages$46pigeon.PigeonInitializeResponse, function* initializeApp() {
        return new messages$46pigeon.PigeonInitializeResponse.new({name: appName, options: new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()});
      });
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), function* initializeCore() {
        return T$.JSArrayOfPigeonInitializeResponseN().of([new messages$46pigeon.PigeonInitializeResponse.new({name: "[DEFAULT]", options: new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()})]);
      });
    }
    optionsFromResource() {
      return async.async(messages$46pigeon.PigeonFirebaseOptions, function* optionsFromResource() {
        return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"});
      });
    }
    static ['_#new#tearOff']() {
      return new mocks.MockFirebaseApp.new();
    }
  };
  (mocks.MockFirebaseApp.new = function() {
    ;
  }).prototype = mocks.MockFirebaseApp.prototype;
  dart.addTypeTests(mocks.MockFirebaseApp);
  dart.addTypeCaches(mocks.MockFirebaseApp);
  mocks.MockFirebaseApp[dart.implements] = () => [test_api.TestFirebaseCoreHostApi];
  dart.setMethodSignature(mocks.MockFirebaseApp, () => ({
    __proto__: dart.getMethods(mocks.MockFirebaseApp.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon.PigeonInitializeResponse), [core.String, messages$46pigeon.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(mocks.MockFirebaseApp, I[83]);
  mocks.setupFirebaseCoreMocks = function setupFirebaseCoreMocks() {
    test_api.TestFirebaseCoreHostApi.setup(new mocks.MockFirebaseApp.new());
  };
  test_api._TestFirebaseCoreHostApiCodec = class _TestFirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new test_api._TestFirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (test_api._TestFirebaseCoreHostApiCodec.new = function() {
    test_api._TestFirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = test_api._TestFirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(test_api._TestFirebaseCoreHostApiCodec);
  dart.addTypeCaches(test_api._TestFirebaseCoreHostApiCodec);
  dart.setLibraryUri(test_api._TestFirebaseCoreHostApiCodec, I[84]);
  test_api.TestFirebaseCoreHostApi = class TestFirebaseCoreHostApi extends core.Object {
    static get _testBinaryMessengerBinding() {
      return binding$.TestDefaultBinaryMessengerBinding.instance;
    }
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null.", I[85], 69, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null String.", I[85], 73, 18, "arg_appName != null");
            let arg_initializeAppRequest = T$.PigeonFirebaseOptionsN().as(args[S$.$_get](1));
            if (!(arg_initializeAppRequest != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null PigeonFirebaseOptions.", I[85], 77, 18, "arg_initializeAppRequest != null");
            let output = (yield api.initializeApp(dart.nullCheck(arg_appName), dart.nullCheck(arg_initializeAppRequest)));
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.initializeCore());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.optionsFromResource());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseCoreHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseCoreHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseCoreHostApi);
  dart.addTypeCaches(test_api.TestFirebaseCoreHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseCoreHostApi, () => ['setup']);
  dart.setStaticGetterSignature(test_api.TestFirebaseCoreHostApi, () => ['_testBinaryMessengerBinding']);
  dart.setLibraryUri(test_api.TestFirebaseCoreHostApi, I[84]);
  dart.setStaticFieldSignature(test_api.TestFirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseCoreHostApi, {
    /*test_api.TestFirebaseCoreHostApi.codec*/get codec() {
      return C[53] || CT.C53;
    }
  }, false);
  test_api.TestFirebaseAppHostApi = class TestFirebaseAppHostApi extends core.Object {
    static get _testBinaryMessengerBinding() {
      return binding$.TestDefaultBinaryMessengerBinding.instance;
    }
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null.", I[85], 149, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null String.", I[85], 153, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[S$.$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null bool.", I[85], 156, 18, "arg_enabled != null");
            yield api.setAutomaticDataCollectionEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null.", I[85], 176, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null String.", I[85], 180, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[S$.$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null bool.", I[85], 183, 18, "arg_enabled != null");
            yield api.setAutomaticResourceManagementEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null.", I[85], 202, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null, expected non-null String.", I[85], 206, 18, "arg_appName != null");
            yield api.delete(dart.nullCheck(arg_appName));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseAppHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseAppHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseAppHostApi);
  dart.addTypeCaches(test_api.TestFirebaseAppHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseAppHostApi, () => ['setup']);
  dart.setStaticGetterSignature(test_api.TestFirebaseAppHostApi, () => ['_testBinaryMessengerBinding']);
  dart.setLibraryUri(test_api.TestFirebaseAppHostApi, I[84]);
  dart.setStaticFieldSignature(test_api.TestFirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseAppHostApi, {
    /*test_api.TestFirebaseAppHostApi.codec*/get codec() {
      return C[52] || CT.C52;
    }
  }, false);
  const StatelessElement_SingleChildWidgetElementMixin$36$ = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._NestedElement = class _NestedElement extends StatelessElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedElement.new(widget);
    }
    get widget() {
      return nested.Nested.as(super.widget);
    }
    build() {
      let t144, t144$, t144$0;
      let nestedHook = null;
      let nextNode = (t144$ = (t144 = this[S$._parent], t144 == null ? null : t144.injectedChild), t144$ == null ? this.widget[S$._child$1] : t144$);
      for (let child of this.widget[S$._children][S$.$reversed]) {
        nextNode = nestedHook = new nested._NestedHook.new({owner: this, wrappedWidget: child, injectedChild: nextNode});
      }
      if (nestedHook != null) {
        for (let node of this.nodes) {
          t144$0 = node;
          (() => {
            t144$0.wrappedChild = dart.nullCheck(nestedHook).wrappedWidget;
            t144$0.injectedChild = nestedHook.injectedChild;
            return t144$0;
          })();
          let next = nestedHook.injectedChild;
          if (nested._NestedHook.is(next)) {
            nestedHook = next;
          } else {
            break;
          }
        }
      }
      return dart.nullCheck(nextNode);
    }
  };
  (nested._NestedElement.new = function(widget) {
    this.nodes = T$.LinkedHashSetOf_NestedHookElement().new();
    nested._NestedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedElement.prototype;
  dart.addTypeTests(nested._NestedElement);
  dart.addTypeCaches(nested._NestedElement);
  dart.setGetterSignature(nested._NestedElement, () => ({
    __proto__: dart.getGetters(nested._NestedElement.__proto__),
    widget: nested.Nested
  }));
  dart.setLibraryUri(nested._NestedElement, I[20]);
  dart.setFieldSignature(nested._NestedElement, () => ({
    __proto__: dart.getFields(nested._NestedElement.__proto__),
    nodes: dart.finalFieldType(core.Set$(nested._NestedHookElement))
  }));
  nested._NestedHook = class _NestedHook extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
      let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
      let owner = opts && 'owner' in opts ? opts.owner : null;
      return new nested._NestedHook.new({injectedChild: injectedChild, wrappedWidget: wrappedWidget, owner: owner});
    }
    createElement() {
      return new nested._NestedHookElement.new(this);
    }
    build(context) {
      return dart.throw(new core.StateError.new("handled internally"));
    }
  };
  (nested._NestedHook.new = function(opts) {
    let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
    let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    this.injectedChild = injectedChild;
    this.wrappedWidget = wrappedWidget;
    this.owner = owner;
    nested._NestedHook.__proto__.new.call(this);
    ;
  }).prototype = nested._NestedHook.prototype;
  dart.addTypeTests(nested._NestedHook);
  dart.addTypeCaches(nested._NestedHook);
  dart.setMethodSignature(nested._NestedHook, () => ({
    __proto__: dart.getMethods(nested._NestedHook.__proto__),
    createElement: dart.fnType(nested._NestedHookElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested._NestedHook, I[20]);
  dart.setFieldSignature(nested._NestedHook, () => ({
    __proto__: dart.getFields(nested._NestedHook.__proto__),
    wrappedWidget: dart.finalFieldType(nested.SingleChildWidget),
    injectedChild: dart.finalFieldType(dart.nullable(framework.Widget)),
    owner: dart.finalFieldType(nested._NestedElement)
  }));
  nested._NestedHookElement = class _NestedHookElement extends framework.StatelessElement {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedHookElement.new(widget);
    }
    get widget() {
      return nested._NestedHook.as(super.widget);
    }
    get injectedChild() {
      return this[S$._injectedChild];
    }
    set injectedChild(value) {
      let previous = this[S$._injectedChild];
      if (nested._NestedHook.is(value) && nested._NestedHook.is(previous) && framework.Widget.canUpdate(value.wrappedWidget, previous.wrappedWidget)) {
        return;
      }
      if (!dart.equals(previous, value)) {
        this[S$._injectedChild] = value;
        this.visitChildren(dart.fn(e => e.markNeedsBuild(), T$.ElementTovoid()));
      }
    }
    get wrappedChild() {
      return this[S$._wrappedChild];
    }
    set wrappedChild(value) {
      if (!dart.equals(this[S$._wrappedChild], value)) {
        this[S$._wrappedChild] = value;
        this.markNeedsBuild();
      }
    }
    mount(parent, newSlot) {
      this.widget.owner.nodes.add(this);
      this[S$._wrappedChild] = this.widget.wrappedWidget;
      this[S$._injectedChild] = this.widget.injectedChild;
      super.mount(parent, newSlot);
    }
    unmount() {
      this.widget.owner.nodes.remove(this);
      super.unmount();
    }
    build() {
      return dart.nullCheck(this.wrappedChild);
    }
  };
  (nested._NestedHookElement.new = function(widget) {
    this[S$._injectedChild] = null;
    this[S$._wrappedChild] = null;
    nested._NestedHookElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedHookElement.prototype;
  dart.addTypeTests(nested._NestedHookElement);
  dart.addTypeCaches(nested._NestedHookElement);
  dart.setMethodSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getMethods(nested._NestedHookElement.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setGetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getGetters(nested._NestedHookElement.__proto__),
    widget: nested._NestedHook,
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setSetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getSetters(nested._NestedHookElement.__proto__),
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setLibraryUri(nested._NestedHookElement, I[20]);
  dart.setFieldSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getFields(nested._NestedHookElement.__proto__),
    [S$._injectedChild]: dart.fieldType(dart.nullable(framework.Widget)),
    [S$._wrappedChild]: dart.fieldType(dart.nullable(nested.SingleChildWidget))
  }));
  nested.SingleChildWidget = class SingleChildWidget extends core.Object {};
  (nested.SingleChildWidget.new = function() {
    ;
  }).prototype = nested.SingleChildWidget.prototype;
  dart.addTypeTests(nested.SingleChildWidget);
  dart.addTypeCaches(nested.SingleChildWidget);
  nested.SingleChildWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(nested.SingleChildWidget, I[20]);
  const StatefulElement_SingleChildWidgetElementMixin$36 = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatefulElement = class SingleChildStatefulElement extends StatefulElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatefulElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidget.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateOfSingleChildStatefulWidget().as(super.state);
    }
    build() {
      if (this[S$._parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[S$._parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested.SingleChildStatefulElement.new = function(widget) {
    nested.SingleChildStatefulElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatefulElement.prototype;
  dart.addTypeTests(nested.SingleChildStatefulElement);
  dart.addTypeCaches(nested.SingleChildStatefulElement);
  dart.setGetterSignature(nested.SingleChildStatefulElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatefulElement.__proto__),
    widget: nested.SingleChildStatefulWidget,
    state: nested.SingleChildState$(nested.SingleChildStatefulWidget)
  }));
  dart.setLibraryUri(nested.SingleChildStatefulElement, I[20]);
  nested.SingleChildBuilder = class SingleChildBuilder extends nested.SingleChildStatelessWidget {
    get builder() {
      return this[S$.builder$8];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.SingleChildBuilder.new({key: key, builder: builder, child: child});
    }
    buildWithChild(context, child) {
      let t145, t144;
      t144 = context;
      t145 = child;
      return this.builder(t144, t145);
    }
  };
  (nested.SingleChildBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[S$.builder$8] = builder;
    nested.SingleChildBuilder.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = nested.SingleChildBuilder.prototype;
  dart.addTypeTests(nested.SingleChildBuilder);
  dart.addTypeCaches(nested.SingleChildBuilder);
  dart.setMethodSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getMethods(nested.SingleChildBuilder.__proto__),
    buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
  }));
  dart.setLibraryUri(nested.SingleChildBuilder, I[20]);
  dart.setFieldSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getFields(nested.SingleChildBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))
  }));
  nested.SingleChildStatelessWidgetMixin = class SingleChildStatelessWidgetMixin extends core.Object {};
  nested.SingleChildStatelessWidgetMixin[dart.mixinOn] = Object => class SingleChildStatelessWidgetMixin extends Object {
    get [S$._child$1]() {
      return this.child;
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
    build(context) {
      return this.buildWithChild(context, this.child);
    }
  };
  (nested.SingleChildStatelessWidgetMixin[dart.mixinNew] = function() {
  }).prototype = nested.SingleChildStatelessWidgetMixin.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatelessWidgetMixin);
  nested.SingleChildStatelessWidgetMixin[dart.implements] = () => [framework.StatelessWidget, nested.SingleChildStatelessWidget, core.Object];
  dart.setMethodSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidgetMixin.__proto__),
    createElement: dart.fnType(nested.SingleChildStatelessElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessWidgetMixin.__proto__),
    [S$._child$1]: dart.nullable(framework.Widget)
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidgetMixin, I[20]);
  nested.SingleChildStatefulWidgetMixin = class SingleChildStatefulWidgetMixin extends framework.StatefulWidget {};
  nested.SingleChildStatefulWidgetMixin[dart.mixinOn] = StatefulWidget => class SingleChildStatefulWidgetMixin extends StatefulWidget {
    createElement() {
      return new nested._SingleChildStatefulMixinElement.new(this);
    }
  };
  dart.addTypeTests(nested.SingleChildStatefulWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatefulWidgetMixin);
  nested.SingleChildStatefulWidgetMixin[dart.implements] = () => [nested.SingleChildWidget, framework.StatefulWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidgetMixin.__proto__),
    createElement: dart.fnType(nested._SingleChildStatefulMixinElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidgetMixin, I[20]);
  const _is_SingleChildStateMixin_default = Symbol('_is_SingleChildStateMixin_default');
  nested.SingleChildStateMixin$ = dart.generic(T => {
    class SingleChildStateMixin extends framework.State$(T) {}
    SingleChildStateMixin[dart.mixinOn] = State => class SingleChildStateMixin extends State {
      build(context) {
        return this.buildWithChild(context, dart.nullCheck(nested.SingleChildStatefulWidgetMixin.as(this.widget).child));
      }
    };
    dart.addTypeTests(SingleChildStateMixin);
    SingleChildStateMixin.prototype[_is_SingleChildStateMixin_default] = true;
    dart.addTypeCaches(SingleChildStateMixin);
    SingleChildStateMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(SingleChildStateMixin, () => ({
      __proto__: dart.getMethods(SingleChildStateMixin.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildStateMixin, I[20]);
    return SingleChildStateMixin;
  });
  nested.SingleChildStateMixin = nested.SingleChildStateMixin$();
  dart.addTypeTests(nested.SingleChildStateMixin, _is_SingleChildStateMixin_default);
  const StatefulElement_SingleChildWidgetElementMixin$36$ = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._SingleChildStatefulMixinElement = class _SingleChildStatefulMixinElement extends StatefulElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._SingleChildStatefulMixinElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidgetMixin.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateMixinOfStatefulWidget().as(super.state);
    }
    build() {
      if (this[S$._parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[S$._parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested._SingleChildStatefulMixinElement.new = function(widget) {
    nested._SingleChildStatefulMixinElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._SingleChildStatefulMixinElement.prototype;
  dart.addTypeTests(nested._SingleChildStatefulMixinElement);
  dart.addTypeCaches(nested._SingleChildStatefulMixinElement);
  dart.setGetterSignature(nested._SingleChildStatefulMixinElement, () => ({
    __proto__: dart.getGetters(nested._SingleChildStatefulMixinElement.__proto__),
    widget: nested.SingleChildStatefulWidgetMixin,
    state: nested.SingleChildStateMixin$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(nested._SingleChildStatefulMixinElement, I[20]);
  nested.SingleChildInheritedElementMixin = class SingleChildInheritedElementMixin extends core.Object {};
  nested.SingleChildInheritedElementMixin[dart.mixinOn] = _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin => class SingleChildInheritedElementMixin extends _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin {
    build() {
      if (this[S$._parent] != null) {
        return dart.nullCheck(dart.nullCheck(this[S$._parent]).injectedChild);
      }
      return super.build();
    }
  };
  dart.addTypeTests(nested.SingleChildInheritedElementMixin);
  dart.addTypeCaches(nested.SingleChildInheritedElementMixin);
  nested.SingleChildInheritedElementMixin[dart.implements] = () => [nested.SingleChildWidgetElementMixin, framework.InheritedElement];
  dart.setMethodSignature(nested.SingleChildInheritedElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildInheritedElementMixin.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(nested.SingleChildInheritedElementMixin, I[20]);
  cart_item.CartItem = class CartItem extends core.Object {
    get id() {
      return this[S$.id$3];
    }
    set id(value) {
      super.id = value;
    }
    get title() {
      return this[S$.title$1];
    }
    set title(value) {
      super.title = value;
    }
    get quantity() {
      return this[S$.quantity];
    }
    set quantity(value) {
      super.quantity = value;
    }
    get price() {
      return this[S$.price$1];
    }
    set price(value) {
      super.price = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let quantity = opts && 'quantity' in opts ? opts.quantity : null;
      let price = opts && 'price' in opts ? opts.price : null;
      return new cart_item.CartItem.new({id: id, title: title, quantity: quantity, price: price});
    }
  };
  (cart_item.CartItem.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let quantity = opts && 'quantity' in opts ? opts.quantity : null;
    let price = opts && 'price' in opts ? opts.price : null;
    this[S$.id$3] = id;
    this[S$.title$1] = title;
    this[S$.quantity] = quantity;
    this[S$.price$1] = price;
    ;
  }).prototype = cart_item.CartItem.prototype;
  dart.addTypeTests(cart_item.CartItem);
  dart.addTypeCaches(cart_item.CartItem);
  dart.setLibraryUri(cart_item.CartItem, I[86]);
  dart.setFieldSignature(cart_item.CartItem, () => ({
    __proto__: dart.getFields(cart_item.CartItem.__proto__),
    id: dart.finalFieldType(core.String),
    title: dart.finalFieldType(core.String),
    quantity: dart.finalFieldType(core.int),
    price: dart.finalFieldType(core.double)
  }));
  pointer.Pointer = class Pointer extends core.Object {
    get components() {
      return this[S$.components];
    }
    set components(value) {
      super.components = value;
    }
    static ['_#new#tearOff'](path) {
      return new pointer.Pointer.new(path);
    }
    get path() {
      return this.components[S$.$join]("/");
    }
    get id() {
      return this.components[S$.$last];
    }
    isCollection() {
      return this.components[S$.$length][S$.$isOdd];
    }
    isDocument() {
      return this.components[S$.$length][S$.$isEven];
    }
    collectionPath(collectionPath) {
      if (!this.isDocument()) dart.assertFailed(null, I[87], 56, 12, "isDocument()");
      return this.path + "/" + collectionPath;
    }
    documentPath(documentPath) {
      if (!this.isCollection()) dart.assertFailed(null, I[87], 62, 12, "isCollection()");
      return this.path + "/" + documentPath;
    }
    parentPath() {
      let t144;
      if (this.components[S$.$length] < 2) {
        return null;
      }
      let parentComponents = (t144 = T$.ListOfString().from(this.components), (() => {
        t144[S$.$removeLast]();
        return t144;
      })());
      return parentComponents[S$.$join]("/");
    }
    _equals(other) {
      if (other == null) return false;
      return pointer.Pointer.is(other) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
  };
  (pointer.Pointer.new = function(path) {
    this[S$.components] = path[S$.$split]("/")[S$.$where](dart.fn(element => element[S$.$isNotEmpty], T$.StringTobool()))[S$.$toList]();
    ;
  }).prototype = pointer.Pointer.prototype;
  dart.addTypeTests(pointer.Pointer);
  dart.addTypeCaches(pointer.Pointer);
  dart.setMethodSignature(pointer.Pointer, () => ({
    __proto__: dart.getMethods(pointer.Pointer.__proto__),
    isCollection: dart.fnType(core.bool, []),
    isDocument: dart.fnType(core.bool, []),
    collectionPath: dart.fnType(core.String, [core.String]),
    documentPath: dart.fnType(core.String, [core.String]),
    parentPath: dart.fnType(dart.nullable(core.String), [])
  }));
  dart.setGetterSignature(pointer.Pointer, () => ({
    __proto__: dart.getGetters(pointer.Pointer.__proto__),
    path: core.String,
    id: core.String
  }));
  dart.setLibraryUri(pointer.Pointer, I[88]);
  dart.setFieldSignature(pointer.Pointer, () => ({
    __proto__: dart.getFields(pointer.Pointer.__proto__),
    components: dart.finalFieldType(core.List$(core.String))
  }));
  dart.defineExtensionMethods(pointer.Pointer, ['_equals']);
  dart.defineExtensionAccessors(pointer.Pointer, ['hashCode']);
  messages$46pigeon$.DocumentChangeType = class DocumentChangeType extends core._Enum {
    [S$._enumToString]() {
      return "DocumentChangeType." + this[S$._name];
    }
  };
  (messages$46pigeon$.DocumentChangeType.new = function(index, name) {
    messages$46pigeon$.DocumentChangeType.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$.DocumentChangeType.prototype;
  dart.addTypeTests(messages$46pigeon$.DocumentChangeType);
  dart.addTypeCaches(messages$46pigeon$.DocumentChangeType);
  dart.setMethodSignature(messages$46pigeon$.DocumentChangeType, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.DocumentChangeType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$.DocumentChangeType, I[89]);
  dart.setStaticFieldSignature(messages$46pigeon$.DocumentChangeType, () => ['values', 'added', 'modified', 'removed']);
  dart.defineLazy(messages$46pigeon$.DocumentChangeType, {
    /*messages$46pigeon$.DocumentChangeType.values*/get values() {
      return C[54] || CT.C54;
    },
    /*messages$46pigeon$.DocumentChangeType.added*/get added() {
      return C[55] || CT.C55;
    },
    /*messages$46pigeon$.DocumentChangeType.modified*/get modified() {
      return C[56] || CT.C56;
    },
    /*messages$46pigeon$.DocumentChangeType.removed*/get removed() {
      return C[57] || CT.C57;
    }
  }, false);
  messages$46pigeon$.Source = class Source extends core._Enum {
    [S$._enumToString]() {
      return "Source." + this[S$._name];
    }
  };
  (messages$46pigeon$.Source.new = function(index, name) {
    messages$46pigeon$.Source.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$.Source.prototype;
  dart.addTypeTests(messages$46pigeon$.Source);
  dart.addTypeCaches(messages$46pigeon$.Source);
  dart.setMethodSignature(messages$46pigeon$.Source, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.Source.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$.Source, I[89]);
  dart.setStaticFieldSignature(messages$46pigeon$.Source, () => ['values', 'serverAndCache', 'server', 'cache']);
  dart.defineLazy(messages$46pigeon$.Source, {
    /*messages$46pigeon$.Source.values*/get values() {
      return C[58] || CT.C58;
    },
    /*messages$46pigeon$.Source.serverAndCache*/get serverAndCache() {
      return C[7] || CT.C7;
    },
    /*messages$46pigeon$.Source.server*/get server() {
      return C[26] || CT.C26;
    },
    /*messages$46pigeon$.Source.cache*/get cache() {
      return C[25] || CT.C25;
    }
  }, false);
  messages$46pigeon$.ServerTimestampBehavior = class ServerTimestampBehavior extends core._Enum {
    [S$._enumToString]() {
      return "ServerTimestampBehavior." + this[S$._name];
    }
  };
  (messages$46pigeon$.ServerTimestampBehavior.new = function(index, name) {
    messages$46pigeon$.ServerTimestampBehavior.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$.ServerTimestampBehavior.prototype;
  dart.addTypeTests(messages$46pigeon$.ServerTimestampBehavior);
  dart.addTypeCaches(messages$46pigeon$.ServerTimestampBehavior);
  dart.setMethodSignature(messages$46pigeon$.ServerTimestampBehavior, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.ServerTimestampBehavior.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$.ServerTimestampBehavior, I[89]);
  dart.setStaticFieldSignature(messages$46pigeon$.ServerTimestampBehavior, () => ['values', 'none', 'estimate', 'previous']);
  dart.defineLazy(messages$46pigeon$.ServerTimestampBehavior, {
    /*messages$46pigeon$.ServerTimestampBehavior.values*/get values() {
      return C[59] || CT.C59;
    },
    /*messages$46pigeon$.ServerTimestampBehavior.none*/get none() {
      return C[6] || CT.C6;
    },
    /*messages$46pigeon$.ServerTimestampBehavior.estimate*/get estimate() {
      return C[23] || CT.C23;
    },
    /*messages$46pigeon$.ServerTimestampBehavior.previous*/get previous() {
      return C[24] || CT.C24;
    }
  }, false);
  messages$46pigeon$.AggregateSource = class AggregateSource extends core._Enum {
    [S$._enumToString]() {
      return "AggregateSource." + this[S$._name];
    }
  };
  (messages$46pigeon$.AggregateSource.new = function(index, name) {
    messages$46pigeon$.AggregateSource.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$.AggregateSource.prototype;
  dart.addTypeTests(messages$46pigeon$.AggregateSource);
  dart.addTypeCaches(messages$46pigeon$.AggregateSource);
  dart.setMethodSignature(messages$46pigeon$.AggregateSource, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.AggregateSource.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$.AggregateSource, I[89]);
  dart.setStaticFieldSignature(messages$46pigeon$.AggregateSource, () => ['values', 'server']);
  dart.defineLazy(messages$46pigeon$.AggregateSource, {
    /*messages$46pigeon$.AggregateSource.values*/get values() {
      return C[60] || CT.C60;
    },
    /*messages$46pigeon$.AggregateSource.server*/get server() {
      return C[20] || CT.C20;
    }
  }, false);
  messages$46pigeon$.PigeonTransactionResult = class PigeonTransactionResult extends core._Enum {
    [S$._enumToString]() {
      return "PigeonTransactionResult." + this[S$._name];
    }
  };
  (messages$46pigeon$.PigeonTransactionResult.new = function(index, name) {
    messages$46pigeon$.PigeonTransactionResult.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$.PigeonTransactionResult.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonTransactionResult);
  dart.addTypeCaches(messages$46pigeon$.PigeonTransactionResult);
  dart.setMethodSignature(messages$46pigeon$.PigeonTransactionResult, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonTransactionResult.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$.PigeonTransactionResult, I[89]);
  dart.setStaticFieldSignature(messages$46pigeon$.PigeonTransactionResult, () => ['values', 'success', 'failure']);
  dart.defineLazy(messages$46pigeon$.PigeonTransactionResult, {
    /*messages$46pigeon$.PigeonTransactionResult.values*/get values() {
      return C[61] || CT.C61;
    },
    /*messages$46pigeon$.PigeonTransactionResult.success*/get success() {
      return C[62] || CT.C62;
    },
    /*messages$46pigeon$.PigeonTransactionResult.failure*/get failure() {
      return C[63] || CT.C63;
    }
  }, false);
  messages$46pigeon$.PigeonTransactionType = class PigeonTransactionType extends core._Enum {
    [S$._enumToString]() {
      return "PigeonTransactionType." + this[S$._name];
    }
  };
  (messages$46pigeon$.PigeonTransactionType.new = function(index, name) {
    messages$46pigeon$.PigeonTransactionType.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$.PigeonTransactionType.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonTransactionType);
  dart.addTypeCaches(messages$46pigeon$.PigeonTransactionType);
  dart.setMethodSignature(messages$46pigeon$.PigeonTransactionType, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonTransactionType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$.PigeonTransactionType, I[89]);
  dart.setStaticFieldSignature(messages$46pigeon$.PigeonTransactionType, () => ['values', 'get', 'update', 'set', 'deleteType']);
  dart.defineLazy(messages$46pigeon$.PigeonTransactionType, {
    /*messages$46pigeon$.PigeonTransactionType.values*/get values() {
      return C[64] || CT.C64;
    },
    /*messages$46pigeon$.PigeonTransactionType.get*/get get() {
      return C[65] || CT.C65;
    },
    /*messages$46pigeon$.PigeonTransactionType.update*/get update() {
      return C[66] || CT.C66;
    },
    /*messages$46pigeon$.PigeonTransactionType.set*/get set() {
      return C[67] || CT.C67;
    },
    /*messages$46pigeon$.PigeonTransactionType.deleteType*/get deleteType() {
      return C[68] || CT.C68;
    }
  }, false);
  messages$46pigeon$.AggregateType = class AggregateType extends core._Enum {
    [S$._enumToString]() {
      return "AggregateType." + this[S$._name];
    }
  };
  (messages$46pigeon$.AggregateType.new = function(index, name) {
    messages$46pigeon$.AggregateType.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$.AggregateType.prototype;
  dart.addTypeTests(messages$46pigeon$.AggregateType);
  dart.addTypeCaches(messages$46pigeon$.AggregateType);
  dart.setMethodSignature(messages$46pigeon$.AggregateType, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.AggregateType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$.AggregateType, I[89]);
  dart.setStaticFieldSignature(messages$46pigeon$.AggregateType, () => ['values', 'count', 'sum', 'average']);
  dart.defineLazy(messages$46pigeon$.AggregateType, {
    /*messages$46pigeon$.AggregateType.values*/get values() {
      return C[69] || CT.C69;
    },
    /*messages$46pigeon$.AggregateType.count*/get count() {
      return C[32] || CT.C32;
    },
    /*messages$46pigeon$.AggregateType.sum*/get sum() {
      return C[33] || CT.C33;
    },
    /*messages$46pigeon$.AggregateType.average*/get average() {
      return C[34] || CT.C34;
    }
  }, false);
  messages$46pigeon$.PigeonFirebaseSettings = class PigeonFirebaseSettings extends core.Object {
    get persistenceEnabled() {
      return this[S$.persistenceEnabled];
    }
    set persistenceEnabled(value) {
      this[S$.persistenceEnabled] = value;
    }
    get host() {
      return this[S$.host];
    }
    set host(value) {
      this[S$.host] = value;
    }
    get sslEnabled() {
      return this[S$.sslEnabled];
    }
    set sslEnabled(value) {
      this[S$.sslEnabled] = value;
    }
    get cacheSizeBytes() {
      return this[S$.cacheSizeBytes];
    }
    set cacheSizeBytes(value) {
      this[S$.cacheSizeBytes] = value;
    }
    get ignoreUndefinedProperties() {
      return this[S$.ignoreUndefinedProperties];
    }
    set ignoreUndefinedProperties(value) {
      this[S$.ignoreUndefinedProperties] = value;
    }
    static ['_#new#tearOff'](opts) {
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : null;
      return new messages$46pigeon$.PigeonFirebaseSettings.new({persistenceEnabled: persistenceEnabled, host: host, sslEnabled: sslEnabled, cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: ignoreUndefinedProperties});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.persistenceEnabled, this.host, this.sslEnabled, this.cacheSizeBytes, this.ignoreUndefinedProperties]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonFirebaseSettings.new({persistenceEnabled: T$.boolN().as(result[S$.$_get](0)), host: T$.StringN().as(result[S$.$_get](1)), sslEnabled: T$.boolN().as(result[S$.$_get](2)), cacheSizeBytes: T$.intN().as(result[S$.$_get](3)), ignoreUndefinedProperties: core.bool.as(dart.nullCheck(result[S$.$_get](4)))});
    }
  };
  (messages$46pigeon$.PigeonFirebaseSettings.new = function(opts) {
    let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
    let host = opts && 'host' in opts ? opts.host : null;
    let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
    let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
    let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : null;
    this[S$.persistenceEnabled] = persistenceEnabled;
    this[S$.host] = host;
    this[S$.sslEnabled] = sslEnabled;
    this[S$.cacheSizeBytes] = cacheSizeBytes;
    this[S$.ignoreUndefinedProperties] = ignoreUndefinedProperties;
    ;
  }).prototype = messages$46pigeon$.PigeonFirebaseSettings.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonFirebaseSettings);
  dart.addTypeCaches(messages$46pigeon$.PigeonFirebaseSettings);
  dart.setMethodSignature(messages$46pigeon$.PigeonFirebaseSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonFirebaseSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonFirebaseSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonFirebaseSettings, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonFirebaseSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonFirebaseSettings.__proto__),
    persistenceEnabled: dart.fieldType(dart.nullable(core.bool)),
    host: dart.fieldType(dart.nullable(core.String)),
    sslEnabled: dart.fieldType(dart.nullable(core.bool)),
    cacheSizeBytes: dart.fieldType(dart.nullable(core.int)),
    ignoreUndefinedProperties: dart.fieldType(core.bool)
  }));
  messages$46pigeon$.FirestorePigeonFirebaseApp = class FirestorePigeonFirebaseApp extends core.Object {
    get appName() {
      return this[S$.appName];
    }
    set appName(value) {
      this[S$.appName] = value;
    }
    get settings() {
      return this[S$.settings];
    }
    set settings(value) {
      this[S$.settings] = value;
    }
    get databaseURL() {
      return this[S$.databaseURL$3];
    }
    set databaseURL(value) {
      this[S$.databaseURL$3] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appName = opts && 'appName' in opts ? opts.appName : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new messages$46pigeon$.FirestorePigeonFirebaseApp.new({appName: appName, settings: settings, databaseURL: databaseURL});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appName, this.settings.encode(), this.databaseURL]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.FirestorePigeonFirebaseApp.new({appName: core.String.as(dart.nullCheck(result[S$.$_get](0))), settings: messages$46pigeon$.PigeonFirebaseSettings.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))), databaseURL: core.String.as(dart.nullCheck(result[S$.$_get](2)))});
    }
  };
  (messages$46pigeon$.FirestorePigeonFirebaseApp.new = function(opts) {
    let appName = opts && 'appName' in opts ? opts.appName : null;
    let settings = opts && 'settings' in opts ? opts.settings : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S$.appName] = appName;
    this[S$.settings] = settings;
    this[S$.databaseURL$3] = databaseURL;
    ;
  }).prototype = messages$46pigeon$.FirestorePigeonFirebaseApp.prototype;
  dart.addTypeTests(messages$46pigeon$.FirestorePigeonFirebaseApp);
  dart.addTypeCaches(messages$46pigeon$.FirestorePigeonFirebaseApp);
  dart.setMethodSignature(messages$46pigeon$.FirestorePigeonFirebaseApp, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.FirestorePigeonFirebaseApp.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.FirestorePigeonFirebaseApp, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.FirestorePigeonFirebaseApp, I[89]);
  dart.setFieldSignature(messages$46pigeon$.FirestorePigeonFirebaseApp, () => ({
    __proto__: dart.getFields(messages$46pigeon$.FirestorePigeonFirebaseApp.__proto__),
    appName: dart.fieldType(core.String),
    settings: dart.fieldType(messages$46pigeon$.PigeonFirebaseSettings),
    databaseURL: dart.fieldType(core.String)
  }));
  messages$46pigeon$.PigeonSnapshotMetadata = class PigeonSnapshotMetadata extends core.Object {
    get hasPendingWrites() {
      return this[S$.hasPendingWrites];
    }
    set hasPendingWrites(value) {
      this[S$.hasPendingWrites] = value;
    }
    get isFromCache() {
      return this[S$.isFromCache];
    }
    set isFromCache(value) {
      this[S$.isFromCache] = value;
    }
    static ['_#new#tearOff'](opts) {
      let hasPendingWrites = opts && 'hasPendingWrites' in opts ? opts.hasPendingWrites : null;
      let isFromCache = opts && 'isFromCache' in opts ? opts.isFromCache : null;
      return new messages$46pigeon$.PigeonSnapshotMetadata.new({hasPendingWrites: hasPendingWrites, isFromCache: isFromCache});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.hasPendingWrites, this.isFromCache]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonSnapshotMetadata.new({hasPendingWrites: core.bool.as(dart.nullCheck(result[S$.$_get](0))), isFromCache: core.bool.as(dart.nullCheck(result[S$.$_get](1)))});
    }
  };
  (messages$46pigeon$.PigeonSnapshotMetadata.new = function(opts) {
    let hasPendingWrites = opts && 'hasPendingWrites' in opts ? opts.hasPendingWrites : null;
    let isFromCache = opts && 'isFromCache' in opts ? opts.isFromCache : null;
    this[S$.hasPendingWrites] = hasPendingWrites;
    this[S$.isFromCache] = isFromCache;
    ;
  }).prototype = messages$46pigeon$.PigeonSnapshotMetadata.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonSnapshotMetadata);
  dart.addTypeCaches(messages$46pigeon$.PigeonSnapshotMetadata);
  dart.setMethodSignature(messages$46pigeon$.PigeonSnapshotMetadata, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonSnapshotMetadata.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonSnapshotMetadata, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonSnapshotMetadata, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonSnapshotMetadata, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonSnapshotMetadata.__proto__),
    hasPendingWrites: dart.fieldType(core.bool),
    isFromCache: dart.fieldType(core.bool)
  }));
  messages$46pigeon$.PigeonDocumentSnapshot = class PigeonDocumentSnapshot extends core.Object {
    get path() {
      return this[S$.path];
    }
    set path(value) {
      this[S$.path] = value;
    }
    get data() {
      return this[S$.data];
    }
    set data(value) {
      this[S$.data] = value;
    }
    get metadata() {
      return this[S$.metadata];
    }
    set metadata(value) {
      this[S$.metadata] = value;
    }
    static ['_#new#tearOff'](opts) {
      let path = opts && 'path' in opts ? opts.path : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let metadata = opts && 'metadata' in opts ? opts.metadata : null;
      return new messages$46pigeon$.PigeonDocumentSnapshot.new({path: path, data: data, metadata: metadata});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.path, this.data, this.metadata.encode()]);
    }
    static decode(result) {
      let t158;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonDocumentSnapshot.new({path: core.String.as(dart.nullCheck(result[S$.$_get](0))), data: (t158 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](1)), t158 == null ? null : t158[S$.$cast](T$.StringN(), T$.ObjectN())), metadata: messages$46pigeon$.PigeonSnapshotMetadata.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2))))});
    }
  };
  (messages$46pigeon$.PigeonDocumentSnapshot.new = function(opts) {
    let path = opts && 'path' in opts ? opts.path : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let metadata = opts && 'metadata' in opts ? opts.metadata : null;
    this[S$.path] = path;
    this[S$.data] = data;
    this[S$.metadata] = metadata;
    ;
  }).prototype = messages$46pigeon$.PigeonDocumentSnapshot.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonDocumentSnapshot);
  dart.addTypeCaches(messages$46pigeon$.PigeonDocumentSnapshot);
  dart.setMethodSignature(messages$46pigeon$.PigeonDocumentSnapshot, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonDocumentSnapshot.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonDocumentSnapshot, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonDocumentSnapshot, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonDocumentSnapshot, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonDocumentSnapshot.__proto__),
    path: dart.fieldType(core.String),
    data: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    metadata: dart.fieldType(messages$46pigeon$.PigeonSnapshotMetadata)
  }));
  messages$46pigeon$.PigeonDocumentChange = class PigeonDocumentChange extends core.Object {
    get type() {
      return this[S$.type$1];
    }
    set type(value) {
      this[S$.type$1] = value;
    }
    get document() {
      return this[S$.document];
    }
    set document(value) {
      this[S$.document] = value;
    }
    get oldIndex() {
      return this[S$.oldIndex];
    }
    set oldIndex(value) {
      this[S$.oldIndex] = value;
    }
    get newIndex() {
      return this[S$.newIndex];
    }
    set newIndex(value) {
      this[S$.newIndex] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let document = opts && 'document' in opts ? opts.document : null;
      let oldIndex = opts && 'oldIndex' in opts ? opts.oldIndex : null;
      let newIndex = opts && 'newIndex' in opts ? opts.newIndex : null;
      return new messages$46pigeon$.PigeonDocumentChange.new({type: type, document: document, oldIndex: oldIndex, newIndex: newIndex});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.type.index, this.document.encode(), this.oldIndex, this.newIndex]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonDocumentChange.new({type: messages$46pigeon$.DocumentChangeType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), document: messages$46pigeon$.PigeonDocumentSnapshot.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))), oldIndex: core.int.as(dart.nullCheck(result[S$.$_get](2))), newIndex: core.int.as(dart.nullCheck(result[S$.$_get](3)))});
    }
  };
  (messages$46pigeon$.PigeonDocumentChange.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let document = opts && 'document' in opts ? opts.document : null;
    let oldIndex = opts && 'oldIndex' in opts ? opts.oldIndex : null;
    let newIndex = opts && 'newIndex' in opts ? opts.newIndex : null;
    this[S$.type$1] = type;
    this[S$.document] = document;
    this[S$.oldIndex] = oldIndex;
    this[S$.newIndex] = newIndex;
    ;
  }).prototype = messages$46pigeon$.PigeonDocumentChange.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonDocumentChange);
  dart.addTypeCaches(messages$46pigeon$.PigeonDocumentChange);
  dart.setMethodSignature(messages$46pigeon$.PigeonDocumentChange, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonDocumentChange.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonDocumentChange, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonDocumentChange, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonDocumentChange, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonDocumentChange.__proto__),
    type: dart.fieldType(messages$46pigeon$.DocumentChangeType),
    document: dart.fieldType(messages$46pigeon$.PigeonDocumentSnapshot),
    oldIndex: dart.fieldType(core.int),
    newIndex: dart.fieldType(core.int)
  }));
  messages$46pigeon$.PigeonQuerySnapshot = class PigeonQuerySnapshot extends core.Object {
    get documents() {
      return this[S$.documents];
    }
    set documents(value) {
      this[S$.documents] = value;
    }
    get documentChanges() {
      return this[S$.documentChanges];
    }
    set documentChanges(value) {
      this[S$.documentChanges] = value;
    }
    get metadata() {
      return this[S$.metadata$1];
    }
    set metadata(value) {
      this[S$.metadata$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let documents = opts && 'documents' in opts ? opts.documents : null;
      let documentChanges = opts && 'documentChanges' in opts ? opts.documentChanges : null;
      let metadata = opts && 'metadata' in opts ? opts.metadata : null;
      return new messages$46pigeon$.PigeonQuerySnapshot.new({documents: documents, documentChanges: documentChanges, metadata: metadata});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.documents, this.documentChanges, this.metadata.encode()]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonQuerySnapshot.new({documents: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](0)))[S$.$cast](T$.PigeonDocumentSnapshotN()), documentChanges: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](1)))[S$.$cast](T$.PigeonDocumentChangeN()), metadata: messages$46pigeon$.PigeonSnapshotMetadata.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2))))});
    }
  };
  (messages$46pigeon$.PigeonQuerySnapshot.new = function(opts) {
    let documents = opts && 'documents' in opts ? opts.documents : null;
    let documentChanges = opts && 'documentChanges' in opts ? opts.documentChanges : null;
    let metadata = opts && 'metadata' in opts ? opts.metadata : null;
    this[S$.documents] = documents;
    this[S$.documentChanges] = documentChanges;
    this[S$.metadata$1] = metadata;
    ;
  }).prototype = messages$46pigeon$.PigeonQuerySnapshot.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonQuerySnapshot);
  dart.addTypeCaches(messages$46pigeon$.PigeonQuerySnapshot);
  dart.setMethodSignature(messages$46pigeon$.PigeonQuerySnapshot, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonQuerySnapshot.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonQuerySnapshot, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonQuerySnapshot, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonQuerySnapshot, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonQuerySnapshot.__proto__),
    documents: dart.fieldType(core.List$(dart.nullable(messages$46pigeon$.PigeonDocumentSnapshot))),
    documentChanges: dart.fieldType(core.List$(dart.nullable(messages$46pigeon$.PigeonDocumentChange))),
    metadata: dart.fieldType(messages$46pigeon$.PigeonSnapshotMetadata)
  }));
  messages$46pigeon$.PigeonGetOptions = class PigeonGetOptions extends core.Object {
    get source() {
      return this[S$.source];
    }
    set source(value) {
      this[S$.source] = value;
    }
    get serverTimestampBehavior() {
      return this[S$.serverTimestampBehavior];
    }
    set serverTimestampBehavior(value) {
      this[S$.serverTimestampBehavior] = value;
    }
    static ['_#new#tearOff'](opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
      return new messages$46pigeon$.PigeonGetOptions.new({source: source, serverTimestampBehavior: serverTimestampBehavior});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.source.index, this.serverTimestampBehavior.index]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonGetOptions.new({source: messages$46pigeon$.Source.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), serverTimestampBehavior: messages$46pigeon$.ServerTimestampBehavior.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](1))))});
    }
  };
  (messages$46pigeon$.PigeonGetOptions.new = function(opts) {
    let source = opts && 'source' in opts ? opts.source : null;
    let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
    this[S$.source] = source;
    this[S$.serverTimestampBehavior] = serverTimestampBehavior;
    ;
  }).prototype = messages$46pigeon$.PigeonGetOptions.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonGetOptions);
  dart.addTypeCaches(messages$46pigeon$.PigeonGetOptions);
  dart.setMethodSignature(messages$46pigeon$.PigeonGetOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonGetOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonGetOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonGetOptions, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonGetOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonGetOptions.__proto__),
    source: dart.fieldType(messages$46pigeon$.Source),
    serverTimestampBehavior: dart.fieldType(messages$46pigeon$.ServerTimestampBehavior)
  }));
  messages$46pigeon$.PigeonDocumentOption = class PigeonDocumentOption extends core.Object {
    get merge() {
      return this[S$.merge];
    }
    set merge(value) {
      this[S$.merge] = value;
    }
    get mergeFields() {
      return this[S$.mergeFields];
    }
    set mergeFields(value) {
      this[S$.mergeFields] = value;
    }
    static ['_#new#tearOff'](opts) {
      let merge = opts && 'merge' in opts ? opts.merge : null;
      let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
      return new messages$46pigeon$.PigeonDocumentOption.new({merge: merge, mergeFields: mergeFields});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.merge, this.mergeFields]);
    }
    static decode(result) {
      let t158;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonDocumentOption.new({merge: T$.boolN().as(result[S$.$_get](0)), mergeFields: (t158 = T$.ListNOfObjectN().as(result[S$.$_get](1)), t158 == null ? null : t158[S$.$cast](T$.ListNOfStringN()))});
    }
  };
  (messages$46pigeon$.PigeonDocumentOption.new = function(opts) {
    let merge = opts && 'merge' in opts ? opts.merge : null;
    let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
    this[S$.merge] = merge;
    this[S$.mergeFields] = mergeFields;
    ;
  }).prototype = messages$46pigeon$.PigeonDocumentOption.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonDocumentOption);
  dart.addTypeCaches(messages$46pigeon$.PigeonDocumentOption);
  dart.setMethodSignature(messages$46pigeon$.PigeonDocumentOption, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonDocumentOption.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonDocumentOption, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonDocumentOption, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonDocumentOption, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonDocumentOption.__proto__),
    merge: dart.fieldType(dart.nullable(core.bool)),
    mergeFields: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.List$(dart.nullable(core.String))))))
  }));
  messages$46pigeon$.PigeonTransactionCommand = class PigeonTransactionCommand extends core.Object {
    get type() {
      return this[S$.type$2];
    }
    set type(value) {
      this[S$.type$2] = value;
    }
    get path() {
      return this[S$.path$1];
    }
    set path(value) {
      this[S$.path$1] = value;
    }
    get data() {
      return this[S$.data$1];
    }
    set data(value) {
      this[S$.data$1] = value;
    }
    get option() {
      return this[S$.option];
    }
    set option(value) {
      this[S$.option] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let path = opts && 'path' in opts ? opts.path : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let option = opts && 'option' in opts ? opts.option : null;
      return new messages$46pigeon$.PigeonTransactionCommand.new({type: type, path: path, data: data, option: option});
    }
    encode() {
      let t158;
      return T$.JSArrayOfObjectN().of([this.type.index, this.path, this.data, (t158 = this.option, t158 == null ? null : t158.encode())]);
    }
    static decode(result) {
      let t158;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonTransactionCommand.new({type: messages$46pigeon$.PigeonTransactionType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), path: core.String.as(dart.nullCheck(result[S$.$_get](1))), data: (t158 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](2)), t158 == null ? null : t158[S$.$cast](T$.StringN(), T$.ObjectN())), option: result[S$.$_get](3) != null ? messages$46pigeon$.PigeonDocumentOption.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](3)))) : null});
    }
  };
  (messages$46pigeon$.PigeonTransactionCommand.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let path = opts && 'path' in opts ? opts.path : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let option = opts && 'option' in opts ? opts.option : null;
    this[S$.type$2] = type;
    this[S$.path$1] = path;
    this[S$.data$1] = data;
    this[S$.option] = option;
    ;
  }).prototype = messages$46pigeon$.PigeonTransactionCommand.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonTransactionCommand);
  dart.addTypeCaches(messages$46pigeon$.PigeonTransactionCommand);
  dart.setMethodSignature(messages$46pigeon$.PigeonTransactionCommand, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonTransactionCommand.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonTransactionCommand, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonTransactionCommand, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonTransactionCommand, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonTransactionCommand.__proto__),
    type: dart.fieldType(messages$46pigeon$.PigeonTransactionType),
    path: dart.fieldType(core.String),
    data: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    option: dart.fieldType(dart.nullable(messages$46pigeon$.PigeonDocumentOption))
  }));
  messages$46pigeon$.DocumentReferenceRequest = class DocumentReferenceRequest extends core.Object {
    get path() {
      return this[S$.path$2];
    }
    set path(value) {
      this[S$.path$2] = value;
    }
    get data() {
      return this[S$.data$2];
    }
    set data(value) {
      this[S$.data$2] = value;
    }
    get option() {
      return this[S$.option$1];
    }
    set option(value) {
      this[S$.option$1] = value;
    }
    get source() {
      return this[S$.source$1];
    }
    set source(value) {
      this[S$.source$1] = value;
    }
    get serverTimestampBehavior() {
      return this[S$.serverTimestampBehavior$1];
    }
    set serverTimestampBehavior(value) {
      this[S$.serverTimestampBehavior$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let path = opts && 'path' in opts ? opts.path : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let option = opts && 'option' in opts ? opts.option : null;
      let source = opts && 'source' in opts ? opts.source : null;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
      return new messages$46pigeon$.DocumentReferenceRequest.new({path: path, data: data, option: option, source: source, serverTimestampBehavior: serverTimestampBehavior});
    }
    encode() {
      let t158, t158$, t158$0;
      return T$.JSArrayOfObjectN().of([this.path, this.data, (t158 = this.option, t158 == null ? null : t158.encode()), (t158$ = this.source, t158$ == null ? null : t158$.index), (t158$0 = this.serverTimestampBehavior, t158$0 == null ? null : t158$0.index)]);
    }
    static decode(result) {
      let t158;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.DocumentReferenceRequest.new({path: core.String.as(dart.nullCheck(result[S$.$_get](0))), data: (t158 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](1)), t158 == null ? null : t158[S$.$cast](T$.ObjectN(), T$.ObjectN())), option: result[S$.$_get](2) != null ? messages$46pigeon$.PigeonDocumentOption.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2)))) : null, source: result[S$.$_get](3) != null ? messages$46pigeon$.Source.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](3)))) : null, serverTimestampBehavior: result[S$.$_get](4) != null ? messages$46pigeon$.ServerTimestampBehavior.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](4)))) : null});
    }
  };
  (messages$46pigeon$.DocumentReferenceRequest.new = function(opts) {
    let path = opts && 'path' in opts ? opts.path : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let option = opts && 'option' in opts ? opts.option : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
    this[S$.path$2] = path;
    this[S$.data$2] = data;
    this[S$.option$1] = option;
    this[S$.source$1] = source;
    this[S$.serverTimestampBehavior$1] = serverTimestampBehavior;
    ;
  }).prototype = messages$46pigeon$.DocumentReferenceRequest.prototype;
  dart.addTypeTests(messages$46pigeon$.DocumentReferenceRequest);
  dart.addTypeCaches(messages$46pigeon$.DocumentReferenceRequest);
  dart.setMethodSignature(messages$46pigeon$.DocumentReferenceRequest, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.DocumentReferenceRequest.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.DocumentReferenceRequest, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.DocumentReferenceRequest, I[89]);
  dart.setFieldSignature(messages$46pigeon$.DocumentReferenceRequest, () => ({
    __proto__: dart.getFields(messages$46pigeon$.DocumentReferenceRequest.__proto__),
    path: dart.fieldType(core.String),
    data: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))),
    option: dart.fieldType(dart.nullable(messages$46pigeon$.PigeonDocumentOption)),
    source: dart.fieldType(dart.nullable(messages$46pigeon$.Source)),
    serverTimestampBehavior: dart.fieldType(dart.nullable(messages$46pigeon$.ServerTimestampBehavior))
  }));
  messages$46pigeon$.PigeonQueryParameters = class PigeonQueryParameters extends core.Object {
    get where() {
      return this[S$.where];
    }
    set where(value) {
      this[S$.where] = value;
    }
    get orderBy() {
      return this[S$.orderBy];
    }
    set orderBy(value) {
      this[S$.orderBy] = value;
    }
    get limit() {
      return this[S$.limit];
    }
    set limit(value) {
      this[S$.limit] = value;
    }
    get limitToLast() {
      return this[S$.limitToLast];
    }
    set limitToLast(value) {
      this[S$.limitToLast] = value;
    }
    get startAt() {
      return this[S$.startAt];
    }
    set startAt(value) {
      this[S$.startAt] = value;
    }
    get startAfter() {
      return this[S$.startAfter];
    }
    set startAfter(value) {
      this[S$.startAfter] = value;
    }
    get endAt() {
      return this[S$.endAt];
    }
    set endAt(value) {
      this[S$.endAt] = value;
    }
    get endBefore() {
      return this[S$.endBefore];
    }
    set endBefore(value) {
      this[S$.endBefore] = value;
    }
    get filters() {
      return this[S$.filters];
    }
    set filters(value) {
      this[S$.filters] = value;
    }
    static ['_#new#tearOff'](opts) {
      let where = opts && 'where' in opts ? opts.where : null;
      let orderBy = opts && 'orderBy' in opts ? opts.orderBy : null;
      let limit = opts && 'limit' in opts ? opts.limit : null;
      let limitToLast = opts && 'limitToLast' in opts ? opts.limitToLast : null;
      let startAt = opts && 'startAt' in opts ? opts.startAt : null;
      let startAfter = opts && 'startAfter' in opts ? opts.startAfter : null;
      let endAt = opts && 'endAt' in opts ? opts.endAt : null;
      let endBefore = opts && 'endBefore' in opts ? opts.endBefore : null;
      let filters = opts && 'filters' in opts ? opts.filters : null;
      return new messages$46pigeon$.PigeonQueryParameters.new({where: where, orderBy: orderBy, limit: limit, limitToLast: limitToLast, startAt: startAt, startAfter: startAfter, endAt: endAt, endBefore: endBefore, filters: filters});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.where, this.orderBy, this.limit, this.limitToLast, this.startAt, this.startAfter, this.endAt, this.endBefore, this.filters]);
    }
    static decode(result) {
      let t158, t158$, t158$0, t158$1, t158$2, t158$3, t158$4;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonQueryParameters.new({where: (t158 = T$.ListNOfObjectN().as(result[S$.$_get](0)), t158 == null ? null : t158[S$.$cast](T$.ListNOfObjectN())), orderBy: (t158$ = T$.ListNOfObjectN().as(result[S$.$_get](1)), t158$ == null ? null : t158$[S$.$cast](T$.ListNOfObjectN())), limit: T$.intN().as(result[S$.$_get](2)), limitToLast: T$.intN().as(result[S$.$_get](3)), startAt: (t158$0 = T$.ListNOfObjectN().as(result[S$.$_get](4)), t158$0 == null ? null : t158$0[S$.$cast](T$.ObjectN())), startAfter: (t158$1 = T$.ListNOfObjectN().as(result[S$.$_get](5)), t158$1 == null ? null : t158$1[S$.$cast](T$.ObjectN())), endAt: (t158$2 = T$.ListNOfObjectN().as(result[S$.$_get](6)), t158$2 == null ? null : t158$2[S$.$cast](T$.ObjectN())), endBefore: (t158$3 = T$.ListNOfObjectN().as(result[S$.$_get](7)), t158$3 == null ? null : t158$3[S$.$cast](T$.ObjectN())), filters: (t158$4 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](8)), t158$4 == null ? null : t158$4[S$.$cast](T$.StringN(), T$.ObjectN()))});
    }
  };
  (messages$46pigeon$.PigeonQueryParameters.new = function(opts) {
    let where = opts && 'where' in opts ? opts.where : null;
    let orderBy = opts && 'orderBy' in opts ? opts.orderBy : null;
    let limit = opts && 'limit' in opts ? opts.limit : null;
    let limitToLast = opts && 'limitToLast' in opts ? opts.limitToLast : null;
    let startAt = opts && 'startAt' in opts ? opts.startAt : null;
    let startAfter = opts && 'startAfter' in opts ? opts.startAfter : null;
    let endAt = opts && 'endAt' in opts ? opts.endAt : null;
    let endBefore = opts && 'endBefore' in opts ? opts.endBefore : null;
    let filters = opts && 'filters' in opts ? opts.filters : null;
    this[S$.where] = where;
    this[S$.orderBy] = orderBy;
    this[S$.limit] = limit;
    this[S$.limitToLast] = limitToLast;
    this[S$.startAt] = startAt;
    this[S$.startAfter] = startAfter;
    this[S$.endAt] = endAt;
    this[S$.endBefore] = endBefore;
    this[S$.filters] = filters;
    ;
  }).prototype = messages$46pigeon$.PigeonQueryParameters.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonQueryParameters);
  dart.addTypeCaches(messages$46pigeon$.PigeonQueryParameters);
  dart.setMethodSignature(messages$46pigeon$.PigeonQueryParameters, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonQueryParameters.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonQueryParameters, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonQueryParameters, I[89]);
  dart.setFieldSignature(messages$46pigeon$.PigeonQueryParameters, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonQueryParameters.__proto__),
    where: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.List$(dart.nullable(core.Object)))))),
    orderBy: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.List$(dart.nullable(core.Object)))))),
    limit: dart.fieldType(dart.nullable(core.int)),
    limitToLast: dart.fieldType(dart.nullable(core.int)),
    startAt: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    startAfter: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    endAt: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    endBefore: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    filters: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))))
  }));
  messages$46pigeon$.AggregateQuery = class AggregateQuery extends core.Object {
    get type() {
      return this[S$.type$3];
    }
    set type(value) {
      this[S$.type$3] = value;
    }
    get field() {
      return this[S$.field];
    }
    set field(value) {
      this[S$.field] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let field = opts && 'field' in opts ? opts.field : null;
      return new messages$46pigeon$.AggregateQuery.new({type: type, field: field});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.type.index, this.field]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), field: T$.StringN().as(result[S$.$_get](1))});
    }
  };
  (messages$46pigeon$.AggregateQuery.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let field = opts && 'field' in opts ? opts.field : null;
    this[S$.type$3] = type;
    this[S$.field] = field;
    ;
  }).prototype = messages$46pigeon$.AggregateQuery.prototype;
  dart.addTypeTests(messages$46pigeon$.AggregateQuery);
  dart.addTypeCaches(messages$46pigeon$.AggregateQuery);
  dart.setMethodSignature(messages$46pigeon$.AggregateQuery, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.AggregateQuery.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.AggregateQuery, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.AggregateQuery, I[89]);
  dart.setFieldSignature(messages$46pigeon$.AggregateQuery, () => ({
    __proto__: dart.getFields(messages$46pigeon$.AggregateQuery.__proto__),
    type: dart.fieldType(messages$46pigeon$.AggregateType),
    field: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$.AggregateQueryResponse = class AggregateQueryResponse extends core.Object {
    get type() {
      return this[S$.type$4];
    }
    set type(value) {
      this[S$.type$4] = value;
    }
    get field() {
      return this[S$.field$1];
    }
    set field(value) {
      this[S$.field$1] = value;
    }
    get value() {
      return this[S$.value$1];
    }
    set value(value) {
      this[S$.value$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let field = opts && 'field' in opts ? opts.field : null;
      let value = opts && 'value' in opts ? opts.value : null;
      return new messages$46pigeon$.AggregateQueryResponse.new({type: type, field: field, value: value});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.type.index, this.field, this.value]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.AggregateQueryResponse.new({type: messages$46pigeon$.AggregateType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), field: T$.StringN().as(result[S$.$_get](1)), value: core.double.as(dart.nullCheck(result[S$.$_get](2)))});
    }
  };
  (messages$46pigeon$.AggregateQueryResponse.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let field = opts && 'field' in opts ? opts.field : null;
    let value = opts && 'value' in opts ? opts.value : null;
    this[S$.type$4] = type;
    this[S$.field$1] = field;
    this[S$.value$1] = value;
    ;
  }).prototype = messages$46pigeon$.AggregateQueryResponse.prototype;
  dart.addTypeTests(messages$46pigeon$.AggregateQueryResponse);
  dart.addTypeCaches(messages$46pigeon$.AggregateQueryResponse);
  dart.setMethodSignature(messages$46pigeon$.AggregateQueryResponse, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.AggregateQueryResponse.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.AggregateQueryResponse, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.AggregateQueryResponse, I[89]);
  dart.setFieldSignature(messages$46pigeon$.AggregateQueryResponse, () => ({
    __proto__: dart.getFields(messages$46pigeon$.AggregateQueryResponse.__proto__),
    type: dart.fieldType(messages$46pigeon$.AggregateType),
    field: dart.fieldType(dart.nullable(core.String)),
    value: dart.fieldType(core.double)
  }));
  firestore_message_codec.FirestoreMessageCodec = class FirestoreMessageCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new firestore_message_codec.FirestoreMessageCodec.new();
    }
    writeValue(buffer, value) {
      if (core.DateTime.is(value)) {
        buffer.putUint8(180);
        buffer.putInt64(value.millisecondsSinceEpoch);
      } else if (timestamp.Timestamp.is(value)) {
        buffer.putUint8(188);
        buffer.putInt64(value.seconds);
        buffer.putInt32(value.nanoseconds);
      } else if (geo_point.GeoPoint.is(value)) {
        buffer.putUint8(181);
        buffer.putFloat64(value.latitude);
        buffer.putFloat64(value.longitude);
      } else if (platform_interface_document_reference.DocumentReferencePlatform.is(value)) {
        buffer.putUint8(182);
        this.writeValue(buffer, value.firestore);
        this.writeValue(buffer, value.path);
      } else if (blob.Blob.is(value)) {
        buffer.putUint8(183);
        this.writeSize(buffer, value.bytes[S$.$length]);
        buffer.putUint8List(value.bytes);
      } else if (platform_interface_field_value.FieldValuePlatform.is(value)) {
        let delegate = method_channel_field_value.MethodChannelFieldValue.as(platform_interface_field_value.FieldValuePlatform.getDelegate(value));
        let code = dart.nullCheck(firestore_message_codec.FirestoreMessageCodec._kFieldValueCodes[S$.$_get](delegate.type));
        buffer.putUint8(code);
        if (delegate.value != null) this.writeValue(buffer, delegate.value);
      } else if (field_path_type.FieldPathType.is(value)) {
        let code = dart.nullCheck(firestore_message_codec.FirestoreMessageCodec._kFieldPathCodes[S$.$_get](value));
        buffer.putUint8(code);
      } else if (field_path.FieldPath.is(value)) {
        buffer.putUint8(192);
        this.writeSize(buffer, value.components[S$.$length]);
        for (let item of value.components) {
          this.writeValue(buffer, item);
        }
      } else if (method_channel_firestore.MethodChannelFirebaseFirestore.is(value)) {
        buffer.putUint8(196);
        this.writeValue(buffer, value.app.name);
        this.writeValue(buffer, value.databaseURL);
        this.writeValue(buffer, value.settings);
      } else if (method_channel_query.MethodChannelQuery.is(value)) {
        buffer.putUint8(197);
        this.writeValue(buffer, new (T$.IdentityMapOfString$dynamic()).from(["firestore", value.firestore, "path", value.path, "isCollectionGroup", value.isCollectionGroupQuery, "parameters", value.parameters]));
      } else if (settings.Settings.is(value)) {
        buffer.putUint8(198);
        this.writeValue(buffer, value.asMap);
      } else if (core.Iterable.is(value) && !core.List.is(value)) {
        super.writeValue(buffer, value[S$.$toList]());
      } else if (typeof value == 'number' && value[S$.$isNaN]) {
        buffer.putUint8(193);
      } else if (dart.equals(value, 1 / 0)) {
        buffer.putUint8(194);
      } else if (dart.equals(value, -1 / 0)) {
        buffer.putUint8(195);
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 180:
          {
            return new core.DateTime.fromMillisecondsSinceEpoch(buffer.getInt64());
          }
        case 188:
          {
            return new timestamp.Timestamp.new(buffer.getInt64(), buffer.getInt32());
          }
        case 181:
          {
            return new geo_point.GeoPoint.new(buffer.getFloat64(), buffer.getFloat64());
          }
        case 182:
          {
            let appName = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let path = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let databaseURL = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let app = firebase_core.Firebase.app(appName);
            let firestore = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: app, databaseURL: databaseURL});
            return firestore.doc(path);
          }
        case 183:
          {
            let length = this.readSize(buffer);
            let bytes = buffer.getUint8List(length);
            return new blob.Blob.new(typed_data.Uint8List.as(bytes));
          }
        case 191:
          {
            return field_path.FieldPath.documentId;
          }
        case 193:
          {
            return 0 / 0;
          }
        case 194:
          {
            return 1 / 0;
          }
        case 195:
          {
            return -1 / 0;
          }
        case 196:
        case 197:
        case 198:
        case 184:
        case 185:
        case 186:
        case 187:
        case 189:
        case 190:
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (firestore_message_codec.FirestoreMessageCodec.new = function() {
    firestore_message_codec.FirestoreMessageCodec.__proto__.new.call(this);
    ;
  }).prototype = firestore_message_codec.FirestoreMessageCodec.prototype;
  dart.addTypeTests(firestore_message_codec.FirestoreMessageCodec);
  dart.addTypeCaches(firestore_message_codec.FirestoreMessageCodec);
  dart.setMethodSignature(firestore_message_codec.FirestoreMessageCodec, () => ({
    __proto__: dart.getMethods(firestore_message_codec.FirestoreMessageCodec.__proto__),
    writeValue: dart.fnType(dart.void, [serialization.WriteBuffer, dart.dynamic])
  }));
  dart.setLibraryUri(firestore_message_codec.FirestoreMessageCodec, I[90]);
  dart.setStaticFieldSignature(firestore_message_codec.FirestoreMessageCodec, () => ['_kDateTime', '_kGeoPoint', '_kDocumentReference', '_kBlob', '_kArrayUnion', '_kArrayRemove', '_kDelete', '_kServerTimestamp', '_kTimestamp', '_kIncrementDouble', '_kIncrementInteger', '_kDocumentId', '_kFieldPath', '_kNaN', '_kInfinity', '_kNegativeInfinity', '_kFirestoreInstance', '_kFirestoreQuery', '_kFirestoreSettings', '_kFieldValueCodes', '_kFieldPathCodes']);
  dart.defineLazy(firestore_message_codec.FirestoreMessageCodec, {
    /*firestore_message_codec.FirestoreMessageCodec._kDateTime*/get _kDateTime() {
      return 180;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kGeoPoint*/get _kGeoPoint() {
      return 181;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDocumentReference*/get _kDocumentReference() {
      return 182;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kBlob*/get _kBlob() {
      return 183;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kArrayUnion*/get _kArrayUnion() {
      return 184;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kArrayRemove*/get _kArrayRemove() {
      return 185;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDelete*/get _kDelete() {
      return 186;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kServerTimestamp*/get _kServerTimestamp() {
      return 187;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kTimestamp*/get _kTimestamp() {
      return 188;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kIncrementDouble*/get _kIncrementDouble() {
      return 189;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kIncrementInteger*/get _kIncrementInteger() {
      return 190;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDocumentId*/get _kDocumentId() {
      return 191;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldPath*/get _kFieldPath() {
      return 192;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kNaN*/get _kNaN() {
      return 193;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kInfinity*/get _kInfinity() {
      return 194;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kNegativeInfinity*/get _kNegativeInfinity() {
      return 195;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreInstance*/get _kFirestoreInstance() {
      return 196;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreQuery*/get _kFirestoreQuery() {
      return 197;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreSettings*/get _kFirestoreSettings() {
      return 198;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldValueCodes*/get _kFieldValueCodes() {
      return C[70] || CT.C70;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldPathCodes*/get _kFieldPathCodes() {
      return C[77] || CT.C77;
    }
  }, false);
  messages$46pigeon$._FirebaseFirestoreHostApiCodec = class _FirebaseFirestoreHostApiCodec extends firestore_message_codec.FirestoreMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$._FirebaseFirestoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.AggregateQuery.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.AggregateQueryResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.DocumentReferenceRequest.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.FirestorePigeonFirebaseApp.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonDocumentChange.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonDocumentOption.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonDocumentSnapshot.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonFirebaseSettings.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonGetOptions.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonQueryParameters.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonQuerySnapshot.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonSnapshotMetadata.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonTransactionCommand.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.AggregateQuery.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$.AggregateQueryResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$.DocumentReferenceRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon$.FirestorePigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon$.PigeonDocumentChange.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon$.PigeonDocumentOption.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon$.PigeonDocumentSnapshot.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon$.PigeonFirebaseSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon$.PigeonGetOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon$.PigeonQueryParameters.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon$.PigeonQuerySnapshot.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon$.PigeonSnapshotMetadata.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon$.PigeonTransactionCommand.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$._FirebaseFirestoreHostApiCodec.new = function() {
    messages$46pigeon$._FirebaseFirestoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$._FirebaseFirestoreHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$._FirebaseFirestoreHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$._FirebaseFirestoreHostApiCodec);
  dart.setMethodSignature(messages$46pigeon$._FirebaseFirestoreHostApiCodec, () => ({
    __proto__: dart.getMethods(messages$46pigeon$._FirebaseFirestoreHostApiCodec.__proto__),
    writeValue: dart.fnType(dart.void, [serialization.WriteBuffer, dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(messages$46pigeon$._FirebaseFirestoreHostApiCodec, I[89]);
  messages$46pigeon$.FirebaseFirestoreHostApi = class FirebaseFirestoreHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.FirebaseFirestoreHostApi.new({binaryMessenger: binaryMessenger});
    }
    loadBundle(arg_app, arg_bundle) {
      return async.async(core.String, (function* loadBundle() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.loadBundle", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_bundle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    namedQueryGet(arg_app, arg_name, arg_options) {
      return async.async(messages$46pigeon$.PigeonQuerySnapshot, (function* namedQueryGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.namedQueryGet", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_name, arg_options])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonQuerySnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    clearPersistence(arg_app) {
      return async.async(dart.void, (function* clearPersistence() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.clearPersistence", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    disableNetwork(arg_app) {
      return async.async(dart.void, (function* disableNetwork() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.disableNetwork", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    enableNetwork(arg_app) {
      return async.async(dart.void, (function* enableNetwork() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.enableNetwork", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    terminate(arg_app) {
      return async.async(dart.void, (function* terminate() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.terminate", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    waitForPendingWrites(arg_app) {
      return async.async(dart.void, (function* waitForPendingWrites() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.waitForPendingWrites", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setIndexConfiguration(arg_app, arg_indexConfiguration) {
      return async.async(dart.void, (function* setIndexConfiguration() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.setIndexConfiguration", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_indexConfiguration])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setLoggingEnabled(arg_loggingEnabled) {
      return async.async(dart.void, (function* setLoggingEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.setLoggingEnabled", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_loggingEnabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    snapshotsInSyncSetup(arg_app) {
      return async.async(core.String, (function* snapshotsInSyncSetup() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.snapshotsInSyncSetup", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    transactionCreate(arg_app, arg_timeout, arg_maxAttempts) {
      return async.async(core.String, (function* transactionCreate() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.transactionCreate", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_timeout, arg_maxAttempts])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    transactionStoreResult(arg_transactionId, arg_resultType, arg_commands) {
      return async.async(dart.void, (function* transactionStoreResult() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.transactionStoreResult", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_transactionId, arg_resultType.index, arg_commands])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    transactionGet(arg_app, arg_transactionId, arg_path) {
      return async.async(messages$46pigeon$.PigeonDocumentSnapshot, (function* transactionGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.transactionGet", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_transactionId, arg_path])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonDocumentSnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    documentReferenceSet(arg_app, arg_request) {
      return async.async(dart.void, (function* documentReferenceSet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceSet", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    documentReferenceUpdate(arg_app, arg_request) {
      return async.async(dart.void, (function* documentReferenceUpdate() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceUpdate", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    documentReferenceGet(arg_app, arg_request) {
      return async.async(messages$46pigeon$.PigeonDocumentSnapshot, (function* documentReferenceGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceGet", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonDocumentSnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    documentReferenceDelete(arg_app, arg_request) {
      return async.async(dart.void, (function* documentReferenceDelete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceDelete", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    queryGet(arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options) {
      return async.async(messages$46pigeon$.PigeonQuerySnapshot, (function* queryGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.queryGet", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonQuerySnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    aggregateQuery(arg_app, arg_path, arg_parameters, arg_source, arg_queries, arg_isCollectionGroup) {
      return async.async(T$.ListOfAggregateQueryResponseN(), (function* aggregateQuery() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.aggregateQuery", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_path, arg_parameters, arg_source.index, arg_queries, arg_isCollectionGroup])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.AggregateQueryResponseN());
        }
      }).bind(this));
    }
    writeBatchCommit(arg_app, arg_writes) {
      return async.async(dart.void, (function* writeBatchCommit() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.writeBatchCommit", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_writes])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    querySnapshot(arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options, arg_includeMetadataChanges) {
      return async.async(core.String, (function* querySnapshot() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.querySnapshot", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options, arg_includeMetadataChanges])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    documentReferenceSnapshot(arg_app, arg_parameters, arg_includeMetadataChanges) {
      return async.async(core.String, (function* documentReferenceSnapshot() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceSnapshot", messages$46pigeon$.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_parameters, arg_includeMetadataChanges])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.FirebaseFirestoreHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger$1] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.FirebaseFirestoreHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$.FirebaseFirestoreHostApi);
  dart.addTypeCaches(messages$46pigeon$.FirebaseFirestoreHostApi);
  dart.setMethodSignature(messages$46pigeon$.FirebaseFirestoreHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.FirebaseFirestoreHostApi.__proto__),
    loadBundle: dart.fnType(async.Future$(core.String), [messages$46pigeon$.FirestorePigeonFirebaseApp, typed_data.Uint8List]),
    namedQueryGet: dart.fnType(async.Future$(messages$46pigeon$.PigeonQuerySnapshot), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.String, messages$46pigeon$.PigeonGetOptions]),
    clearPersistence: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp]),
    disableNetwork: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp]),
    enableNetwork: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp]),
    terminate: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp]),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp]),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.String]),
    setLoggingEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    snapshotsInSyncSetup: dart.fnType(async.Future$(core.String), [messages$46pigeon$.FirestorePigeonFirebaseApp]),
    transactionCreate: dart.fnType(async.Future$(core.String), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.int, core.int]),
    transactionStoreResult: dart.fnType(async.Future$(dart.void), [core.String, messages$46pigeon$.PigeonTransactionResult, dart.nullable(core.List$(dart.nullable(messages$46pigeon$.PigeonTransactionCommand)))]),
    transactionGet: dart.fnType(async.Future$(messages$46pigeon$.PigeonDocumentSnapshot), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.String, core.String]),
    documentReferenceSet: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp, messages$46pigeon$.DocumentReferenceRequest]),
    documentReferenceUpdate: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp, messages$46pigeon$.DocumentReferenceRequest]),
    documentReferenceGet: dart.fnType(async.Future$(messages$46pigeon$.PigeonDocumentSnapshot), [messages$46pigeon$.FirestorePigeonFirebaseApp, messages$46pigeon$.DocumentReferenceRequest]),
    documentReferenceDelete: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp, messages$46pigeon$.DocumentReferenceRequest]),
    queryGet: dart.fnType(async.Future$(messages$46pigeon$.PigeonQuerySnapshot), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.String, core.bool, messages$46pigeon$.PigeonQueryParameters, messages$46pigeon$.PigeonGetOptions]),
    aggregateQuery: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$.AggregateQueryResponse))), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.String, messages$46pigeon$.PigeonQueryParameters, messages$46pigeon$.AggregateSource, core.List$(dart.nullable(messages$46pigeon$.AggregateQuery)), core.bool]),
    writeBatchCommit: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.List$(dart.nullable(messages$46pigeon$.PigeonTransactionCommand))]),
    querySnapshot: dart.fnType(async.Future$(core.String), [messages$46pigeon$.FirestorePigeonFirebaseApp, core.String, core.bool, messages$46pigeon$.PigeonQueryParameters, messages$46pigeon$.PigeonGetOptions, core.bool]),
    documentReferenceSnapshot: dart.fnType(async.Future$(core.String), [messages$46pigeon$.FirestorePigeonFirebaseApp, messages$46pigeon$.DocumentReferenceRequest, core.bool])
  }));
  dart.setLibraryUri(messages$46pigeon$.FirebaseFirestoreHostApi, I[89]);
  dart.setFieldSignature(messages$46pigeon$.FirebaseFirestoreHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$.FirebaseFirestoreHostApi.__proto__),
    [S$._binaryMessenger$1]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.FirebaseFirestoreHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.FirebaseFirestoreHostApi, {
    /*messages$46pigeon$.FirebaseFirestoreHostApi.codec*/get codec() {
      return C[79] || CT.C79;
    }
  }, false);
  blob.Blob = class Blob extends core.Object {
    get bytes() {
      return this[S$.bytes];
    }
    set bytes(value) {
      super.bytes = value;
    }
    static ['_#new#tearOff'](bytes) {
      return new blob.Blob.new(bytes);
    }
    _equals(other) {
      if (other == null) return false;
      return blob.Blob.is(other) && (C[17] || CT.C17).equals(other.bytes, this.bytes);
    }
    get hashCode() {
      return core.Object.hashAll(this.bytes);
    }
  };
  (blob.Blob.new = function(bytes) {
    this[S$.bytes] = bytes;
    ;
  }).prototype = blob.Blob.prototype;
  dart.addTypeTests(blob.Blob);
  dart.addTypeCaches(blob.Blob);
  dart.setLibraryUri(blob.Blob, I[91]);
  dart.setFieldSignature(blob.Blob, () => ({
    __proto__: dart.getFields(blob.Blob.__proto__),
    bytes: dart.finalFieldType(typed_data.Uint8List)
  }));
  dart.defineExtensionMethods(blob.Blob, ['_equals']);
  dart.defineExtensionAccessors(blob.Blob, ['hashCode']);
  field_path.FieldPath = class FieldPath extends core.Object {
    get components() {
      return this[S$.components$1];
    }
    set components(value) {
      super.components = value;
    }
    static ['_#new#tearOff'](components) {
      return new field_path.FieldPath.new(components);
    }
    static get documentId() {
      return field_path_type.FieldPathType.documentId;
    }
    static ['_#fromString#tearOff'](path) {
      return new field_path.FieldPath.fromString(path);
    }
    _equals(other) {
      if (other == null) return false;
      return field_path.FieldPath.is(other) && (C[21] || CT.C21).equals(other.components, this.components);
    }
    get hashCode() {
      return core.Object.hashAll(this.components);
    }
    toString() {
      return "FieldPath(" + dart.str(this.components) + ")";
    }
  };
  (field_path.FieldPath.new = function(components) {
    this[S$.components$1] = components;
    if (!components[S$.$isNotEmpty]) dart.assertFailed(null, I[92], 23, 16, "components.isNotEmpty");
    if (!components[S$.$where](dart.fn(component => component[S$.$isEmpty], T$.StringTobool()))[S$.$isEmpty]) dart.assertFailed("Expected all FieldPath components to be non-null or non-empty strings.", I[92], 25, 11, "components.where((component) => component.isEmpty).isEmpty");
    ;
  }).prototype = field_path.FieldPath.prototype;
  (field_path.FieldPath.fromString = function(path) {
    this[S$.components$1] = path[S$.$split](".");
    if (!path[S$.$isNotEmpty]) dart.assertFailed(null, I[92], 44, 16, "path.isNotEmpty");
    if (!!path[S$.$startsWith](".")) dart.assertFailed(null, I[92], 45, 16, "!path.startsWith('.')");
    if (!!path[S$.$endsWith](".")) dart.assertFailed(null, I[92], 46, 16, "!path.endsWith('.')");
    if (!!path[S$.$contains]("..")) dart.assertFailed(null, I[92], 47, 16, "!path.contains('..')");
    if (!!path[S$.$contains]("~")) dart.assertFailed(field_path._reserved, I[92], 48, 16, "!path.contains('~')");
    if (!!path[S$.$contains]("*")) dart.assertFailed(field_path._reserved, I[92], 49, 16, "!path.contains('*')");
    if (!!path[S$.$contains]("/")) dart.assertFailed(field_path._reserved, I[92], 50, 16, "!path.contains('/')");
    if (!!path[S$.$contains]("[")) dart.assertFailed(field_path._reserved, I[92], 51, 16, "!path.contains('[')");
    if (!!path[S$.$contains]("]")) dart.assertFailed(field_path._reserved, I[92], 52, 16, "!path.contains(']')");
    ;
  }).prototype = field_path.FieldPath.prototype;
  dart.addTypeTests(field_path.FieldPath);
  dart.addTypeCaches(field_path.FieldPath);
  dart.setStaticGetterSignature(field_path.FieldPath, () => ['documentId']);
  dart.setLibraryUri(field_path.FieldPath, I[93]);
  dart.setFieldSignature(field_path.FieldPath, () => ({
    __proto__: dart.getFields(field_path.FieldPath.__proto__),
    components: dart.finalFieldType(core.List$(core.String))
  }));
  dart.defineExtensionMethods(field_path.FieldPath, ['_equals', 'toString']);
  dart.defineExtensionAccessors(field_path.FieldPath, ['hashCode']);
  dart.defineLazy(field_path, {
    /*field_path._reserved*/get _reserved() {
      return "Paths must not contain '~', '*', '/', '[', or ']'.";
    },
    set _reserved(value) {}
  }, false);
  field_path_type.FieldPathType = class FieldPathType extends core._Enum {
    [S$._enumToString]() {
      return "FieldPathType." + this[S$._name];
    }
  };
  (field_path_type.FieldPathType.new = function(index, name) {
    field_path_type.FieldPathType.__proto__.new.call(this, index, name);
    ;
  }).prototype = field_path_type.FieldPathType.prototype;
  dart.addTypeTests(field_path_type.FieldPathType);
  dart.addTypeCaches(field_path_type.FieldPathType);
  dart.setMethodSignature(field_path_type.FieldPathType, () => ({
    __proto__: dart.getMethods(field_path_type.FieldPathType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(field_path_type.FieldPathType, I[94]);
  dart.setStaticFieldSignature(field_path_type.FieldPathType, () => ['values', 'documentId']);
  dart.defineLazy(field_path_type.FieldPathType, {
    /*field_path_type.FieldPathType.values*/get values() {
      return C[80] || CT.C80;
    },
    /*field_path_type.FieldPathType.documentId*/get documentId() {
      return C[78] || CT.C78;
    }
  }, false);
  geo_point.GeoPoint = class GeoPoint extends core.Object {
    get latitude() {
      return this[S$.latitude];
    }
    set latitude(value) {
      super.latitude = value;
    }
    get longitude() {
      return this[S$.longitude];
    }
    set longitude(value) {
      super.longitude = value;
    }
    static ['_#new#tearOff'](latitude, longitude) {
      return new geo_point.GeoPoint.new(latitude, longitude);
    }
    _equals(other) {
      if (other == null) return false;
      return geo_point.GeoPoint.is(other) && other.latitude === this.latitude && other.longitude === this.longitude;
    }
    get hashCode() {
      return core.Object.hash(this.latitude, this.longitude);
    }
  };
  (geo_point.GeoPoint.new = function(latitude, longitude) {
    this[S$.latitude] = latitude;
    this[S$.longitude] = longitude;
    if (!(latitude >= -90 && latitude <= 90)) dart.assertFailed(null, I[95], 13, 16, "latitude >= -90 && latitude <= 90");
    if (!(longitude >= -180 && longitude <= 180)) dart.assertFailed(null, I[95], 14, 16, "longitude >= -180 && longitude <= 180");
    ;
  }).prototype = geo_point.GeoPoint.prototype;
  dart.addTypeTests(geo_point.GeoPoint);
  dart.addTypeCaches(geo_point.GeoPoint);
  dart.setLibraryUri(geo_point.GeoPoint, I[96]);
  dart.setFieldSignature(geo_point.GeoPoint, () => ({
    __proto__: dart.getFields(geo_point.GeoPoint.__proto__),
    latitude: dart.finalFieldType(core.double),
    longitude: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(geo_point.GeoPoint, ['_equals']);
  dart.defineExtensionAccessors(geo_point.GeoPoint, ['hashCode']);
  get_options.GetOptions = class GetOptions extends core.Object {
    get source() {
      return this[S$.source$2];
    }
    set source(value) {
      super.source = value;
    }
    get serverTimestampBehavior() {
      return this[S$.serverTimestampBehavior$2];
    }
    set serverTimestampBehavior(value) {
      super.serverTimestampBehavior = value;
    }
    static ['_#new#tearOff'](opts) {
      let source = opts && 'source' in opts ? opts.source : C[7] || CT.C7;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[6] || CT.C6;
      return new get_options.GetOptions.new({source: source, serverTimestampBehavior: serverTimestampBehavior});
    }
  };
  (get_options.GetOptions.new = function(opts) {
    let source = opts && 'source' in opts ? opts.source : C[7] || CT.C7;
    let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[6] || CT.C6;
    this[S$.source$2] = source;
    this[S$.serverTimestampBehavior$2] = serverTimestampBehavior;
    ;
  }).prototype = get_options.GetOptions.prototype;
  dart.addTypeTests(get_options.GetOptions);
  dart.addTypeCaches(get_options.GetOptions);
  dart.setLibraryUri(get_options.GetOptions, I[97]);
  dart.setFieldSignature(get_options.GetOptions, () => ({
    __proto__: dart.getFields(get_options.GetOptions.__proto__),
    source: dart.finalFieldType(messages$46pigeon$.Source),
    serverTimestampBehavior: dart.finalFieldType(messages$46pigeon$.ServerTimestampBehavior)
  }));
  load_bundle_task_state.LoadBundleTaskState = class LoadBundleTaskState extends core._Enum {
    [S$._enumToString]() {
      return "LoadBundleTaskState." + this[S$._name];
    }
  };
  (load_bundle_task_state.LoadBundleTaskState.new = function(index, name) {
    load_bundle_task_state.LoadBundleTaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = load_bundle_task_state.LoadBundleTaskState.prototype;
  dart.addTypeTests(load_bundle_task_state.LoadBundleTaskState);
  dart.addTypeCaches(load_bundle_task_state.LoadBundleTaskState);
  dart.setMethodSignature(load_bundle_task_state.LoadBundleTaskState, () => ({
    __proto__: dart.getMethods(load_bundle_task_state.LoadBundleTaskState.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(load_bundle_task_state.LoadBundleTaskState, I[98]);
  dart.setStaticFieldSignature(load_bundle_task_state.LoadBundleTaskState, () => ['values', 'running', 'success', 'error']);
  dart.defineLazy(load_bundle_task_state.LoadBundleTaskState, {
    /*load_bundle_task_state.LoadBundleTaskState.values*/get values() {
      return C[81] || CT.C81;
    },
    /*load_bundle_task_state.LoadBundleTaskState.running*/get running() {
      return C[82] || CT.C82;
    },
    /*load_bundle_task_state.LoadBundleTaskState.success*/get success() {
      return C[83] || CT.C83;
    },
    /*load_bundle_task_state.LoadBundleTaskState.error*/get error() {
      return C[84] || CT.C84;
    }
  }, false);
  persistence_settings.PersistenceSettings = class PersistenceSettings extends core.Object {
    get synchronizeTabs() {
      return this[S$.synchronizeTabs];
    }
    set synchronizeTabs(value) {
      super.synchronizeTabs = value;
    }
    static ['_#new#tearOff'](opts) {
      let synchronizeTabs = opts && 'synchronizeTabs' in opts ? opts.synchronizeTabs : null;
      return new persistence_settings.PersistenceSettings.new({synchronizeTabs: synchronizeTabs});
    }
  };
  (persistence_settings.PersistenceSettings.new = function(opts) {
    let synchronizeTabs = opts && 'synchronizeTabs' in opts ? opts.synchronizeTabs : null;
    this[S$.synchronizeTabs] = synchronizeTabs;
    ;
  }).prototype = persistence_settings.PersistenceSettings.prototype;
  dart.addTypeTests(persistence_settings.PersistenceSettings);
  dart.addTypeCaches(persistence_settings.PersistenceSettings);
  dart.setLibraryUri(persistence_settings.PersistenceSettings, I[99]);
  dart.setFieldSignature(persistence_settings.PersistenceSettings, () => ({
    __proto__: dart.getFields(persistence_settings.PersistenceSettings.__proto__),
    synchronizeTabs: dart.finalFieldType(core.bool)
  }));
  platform_interface_aggregate_query.AggregateQueryPlatform = class AggregateQueryPlatform extends plugin_platform_interface.PlatformInterface {
    get query() {
      return this[S$.query$2];
    }
    set query(value) {
      super.query = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_aggregate_query.AggregateQueryPlatform._token);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      return async.async(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, function* get() {
        dart.throw(new core.UnimplementedError.new("get() is not implemented"));
      });
    }
    count() {
      dart.throw(new core.UnimplementedError.new("count() is not implemented"));
    }
    sum(field) {
      dart.throw(new core.UnimplementedError.new("sum() is not implemented"));
    }
    average(field) {
      dart.throw(new core.UnimplementedError.new("average() is not implemented"));
    }
  };
  (platform_interface_aggregate_query.AggregateQueryPlatform.new = function(query) {
    this[S$.query$2] = query;
    platform_interface_aggregate_query.AggregateQueryPlatform.__proto__.new.call(this, {token: platform_interface_aggregate_query.AggregateQueryPlatform._token});
    ;
  }).prototype = platform_interface_aggregate_query.AggregateQueryPlatform.prototype;
  dart.addTypeTests(platform_interface_aggregate_query.AggregateQueryPlatform);
  dart.addTypeCaches(platform_interface_aggregate_query.AggregateQueryPlatform);
  dart.setMethodSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_aggregate_query.AggregateQueryPlatform.__proto__),
    get: dart.fnType(async.Future$(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform), [], {}, {source: messages$46pigeon$.AggregateSource}),
    count: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, []),
    sum: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String]),
    average: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_aggregate_query.AggregateQueryPlatform, I[100]);
  dart.setFieldSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ({
    __proto__: dart.getFields(platform_interface_aggregate_query.AggregateQueryPlatform.__proto__),
    query: dart.finalFieldType(platform_interface_query.QueryPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_aggregate_query.AggregateQueryPlatform, {
    /*platform_interface_aggregate_query.AggregateQueryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform = class AggregateQuerySnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff'](opts) {
      let count = opts && 'count' in opts ? opts.count : null;
      let sum = opts && 'sum' in opts ? opts.sum : null;
      let average = opts && 'average' in opts ? opts.average : null;
      return new platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new({count: count, sum: sum, average: average});
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform._token);
    }
    get count() {
      return this[S$._count];
    }
    getAverage(field) {
      let t162;
      t162 = iterable_extensions['IterableExtension|firstWhereOrNull'](messages$46pigeon$.AggregateQueryResponse, this[S$._average], dart.fn(element => element.field === field, T$.AggregateQueryResponseTobool()));
      return t162 == null ? null : t162.value;
    }
    getSum(field) {
      let t162;
      t162 = iterable_extensions['IterableExtension|firstWhereOrNull'](messages$46pigeon$.AggregateQueryResponse, this[S$._sum], dart.fn(element => element.field === field, T$.AggregateQueryResponseTobool()));
      return t162 == null ? null : t162.value;
    }
  };
  (platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new = function(opts) {
    let count = opts && 'count' in opts ? opts.count : null;
    let sum = opts && 'sum' in opts ? opts.sum : null;
    let average = opts && 'average' in opts ? opts.average : null;
    this[S$._count] = count;
    this[S$._sum] = sum;
    this[S$._average] = average;
    platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__.new.call(this, {token: platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform._token});
    ;
  }).prototype = platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform);
  dart.addTypeCaches(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform);
  dart.setMethodSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__),
    getAverage: dart.fnType(dart.nullable(core.double), [core.String]),
    getSum: dart.fnType(dart.nullable(core.double), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__),
    count: dart.nullable(core.int)
  }));
  dart.setLibraryUri(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, I[101]);
  dart.setFieldSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__),
    [S$._count]: dart.finalFieldType(dart.nullable(core.int)),
    [S$._average]: dart.finalFieldType(core.List$(messages$46pigeon$.AggregateQueryResponse)),
    [S$._sum]: dart.finalFieldType(core.List$(messages$46pigeon$.AggregateQueryResponse))
  }));
  dart.setStaticFieldSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, {
    /*platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_collection_reference.CollectionReferencePlatform = class CollectionReferencePlatform extends platform_interface_query.QueryPlatform {
    get id() {
      return this[S$._pointer$1].id;
    }
    get parent() {
      let parentPath = this[S$._pointer$1].parentPath();
      if (parentPath == null) {
        return null;
      }
      return this.firestore.doc(parentPath);
    }
    get path() {
      return this[S$._pointer$1].path;
    }
    doc(path = null) {
      dart.throw(new core.UnimplementedError.new("doc() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_collection_reference.CollectionReferencePlatform.is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_collection_reference.CollectionReferencePlatform)) + "(" + this.path + ")";
    }
  };
  (platform_interface_collection_reference.CollectionReferencePlatform.new = function(firestore, path) {
    this[S$._pointer$1] = new pointer.Pointer.new(path);
    platform_interface_collection_reference.CollectionReferencePlatform.__proto__.new.call(this, firestore, new (T$.IdentityMapOfString$dynamic()).new());
    ;
  }).prototype = platform_interface_collection_reference.CollectionReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_collection_reference.CollectionReferencePlatform);
  dart.addTypeCaches(platform_interface_collection_reference.CollectionReferencePlatform);
  dart.setMethodSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    path: core.String
  }));
  dart.setLibraryUri(platform_interface_collection_reference.CollectionReferencePlatform, I[102]);
  dart.setFieldSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    [S$._pointer$1]: dart.finalFieldType(pointer.Pointer)
  }));
  dart.defineExtensionMethods(platform_interface_collection_reference.CollectionReferencePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_collection_reference.CollectionReferencePlatform, ['hashCode']);
  platform_interface_document_change.DocumentChangePlatform = class DocumentChangePlatform extends plugin_platform_interface.PlatformInterface {
    get type() {
      return this[S$.type$5];
    }
    set type(value) {
      super.type = value;
    }
    get oldIndex() {
      return this[S$.oldIndex$1];
    }
    set oldIndex(value) {
      super.oldIndex = value;
    }
    get newIndex() {
      return this[S$.newIndex$1];
    }
    set newIndex(value) {
      super.newIndex = value;
    }
    get document() {
      return this[S$.document$1];
    }
    set document(value) {
      super.document = value;
    }
    static ['_#new#tearOff'](type, oldIndex, newIndex, document) {
      return new platform_interface_document_change.DocumentChangePlatform.new(type, oldIndex, newIndex, document);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_document_change.DocumentChangePlatform._token);
    }
  };
  (platform_interface_document_change.DocumentChangePlatform.new = function(type, oldIndex, newIndex, document) {
    this[S$.type$5] = type;
    this[S$.oldIndex$1] = oldIndex;
    this[S$.newIndex$1] = newIndex;
    this[S$.document$1] = document;
    platform_interface_document_change.DocumentChangePlatform.__proto__.new.call(this, {token: platform_interface_document_change.DocumentChangePlatform._token});
    ;
  }).prototype = platform_interface_document_change.DocumentChangePlatform.prototype;
  dart.addTypeTests(platform_interface_document_change.DocumentChangePlatform);
  dart.addTypeCaches(platform_interface_document_change.DocumentChangePlatform);
  dart.setStaticMethodSignature(platform_interface_document_change.DocumentChangePlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_document_change.DocumentChangePlatform, I[103]);
  dart.setFieldSignature(platform_interface_document_change.DocumentChangePlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_change.DocumentChangePlatform.__proto__),
    type: dart.finalFieldType(messages$46pigeon$.DocumentChangeType),
    oldIndex: dart.finalFieldType(core.int),
    newIndex: dart.finalFieldType(core.int),
    document: dart.finalFieldType(platform_interface_document_snapshot.DocumentSnapshotPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_document_change.DocumentChangePlatform, () => ['_token']);
  dart.defineLazy(platform_interface_document_change.DocumentChangePlatform, {
    /*platform_interface_document_change.DocumentChangePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_document_snapshot.DocumentSnapshotPlatform = class DocumentSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff'](_firestore, path, _data, _metadata) {
      return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(_firestore, path, _data, _metadata);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_document_snapshot.DocumentSnapshotPlatform._token);
    }
    get id() {
      return this[S$._pointer$3].id;
    }
    get metadata() {
      return new snapshot_metadata.SnapshotMetadataPlatform.new(this[S$._metadata].hasPendingWrites, this[S$._metadata].isFromCache);
    }
    get exists() {
      return this[S$._data$1] != null;
    }
    get reference() {
      return this[S$._firestore$2].doc(this[S$._pointer$3].path);
    }
    data() {
      return this.exists ? T$.LinkedHashMapOfString$dynamic().from(dart.nullCheck(this[S$._data$1])[S$.$cast](core.String, dart.dynamic)) : null;
    }
    get(field) {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field))) dart.assertFailed("Supported [field] types are [String] and [FieldPath]", I[104], 77, 7, "field is String || field is FieldPath");
      if (!this.exists) {
        dart.throw(new core.StateError.new("cannot get field \"" + dart.str(field) + "\" on a " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform)) + " which does not exist"));
      }
      function _findKeyValueInMap(key, map) {
        if (map[S$.$containsKey](key)) {
          return map[S$.$_get](key);
        }
        dart.throw(new core.StateError.new("field \"" + key + "\" does not exist within the " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform))));
      }
      dart.fn(_findKeyValueInMap, T$.StringAndMapOfString$dynamicTodynamic());
      let fieldPath = null;
      if (typeof field == 'string') {
        fieldPath = new field_path.FieldPath.fromString(field);
      } else {
        fieldPath = field_path.FieldPath.as(field);
      }
      let components = fieldPath.components;
      let snapshotData = this.data();
      function _findComponent(componentIndex, data) {
        let isLast = componentIndex + 1 === components[S$.$length];
        let value = _findKeyValueInMap(components[S$.$_get](componentIndex), dart.nullCheck(data));
        if (isLast) {
          return value;
        }
        if (core.Map.is(value)) {
          return _findComponent(componentIndex + 1, T$.LinkedHashMapOfString$dynamic().from(value));
        } else {
          dart.throw(new core.StateError.new("field \"" + dart.str(value) + "\" does not exist within the " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform))));
        }
      }
      dart.fn(_findComponent, T$.intAndMapNOfString$dynamicTodynamic());
      return _findComponent(0, snapshotData);
    }
    _get(field) {
      return this.get(field);
    }
  };
  (platform_interface_document_snapshot.DocumentSnapshotPlatform.new = function(_firestore, path, _data, _metadata) {
    this[S$._firestore$2] = _firestore;
    this[S$._data$1] = _data;
    this[S$._metadata] = _metadata;
    this[S$._pointer$3] = new pointer.Pointer.new(path);
    platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_document_snapshot.DocumentSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_document_snapshot.DocumentSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_document_snapshot.DocumentSnapshotPlatform);
  dart.addTypeCaches(platform_interface_document_snapshot.DocumentSnapshotPlatform);
  dart.setMethodSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), []),
    get: dart.fnType(dart.dynamic, [core.Object]),
    _get: dart.fnType(dart.dynamic, [core.Object])
  }));
  dart.setStaticMethodSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    id: core.String,
    metadata: snapshot_metadata.SnapshotMetadataPlatform,
    exists: core.bool,
    reference: platform_interface_document_reference.DocumentReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_document_snapshot.DocumentSnapshotPlatform, I[105]);
  dart.setFieldSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    [S$._firestore$2]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._pointer$3]: dart.finalFieldType(pointer.Pointer),
    [S$._data$1]: dart.finalFieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    [S$._metadata]: dart.finalFieldType(messages$46pigeon$.PigeonSnapshotMetadata)
  }));
  dart.setStaticFieldSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_document_snapshot.DocumentSnapshotPlatform, {
    /*platform_interface_document_snapshot.DocumentSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_index_definitions.Index = class Index extends core.Object {
    get collectionGroup() {
      return this[S$.collectionGroup];
    }
    set collectionGroup(value) {
      super.collectionGroup = value;
    }
    get queryScope() {
      return this[S$.queryScope];
    }
    set queryScope(value) {
      super.queryScope = value;
    }
    get fields() {
      return this[S$.fields];
    }
    set fields(value) {
      super.fields = value;
    }
    static ['_#new#tearOff'](opts) {
      let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
      let fields = opts && 'fields' in opts ? opts.fields : null;
      let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
      return new platform_interface_index_definitions.Index.new({collectionGroup: collectionGroup, fields: fields, queryScope: queryScope});
    }
    toMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["collectionGroup", this.collectionGroup, "fields", this.fields[S$.$map](T$.MapOfString$dynamic(), dart.fn(field => field.toMap(), T$.IndexFieldToMapOfString$dynamic()))[S$.$toList](), "queryScope", this.queryScope === platform_interface_index_definitions.QueryScope.collection ? "COLLECTION" : "COLLECTION_GROUP"]);
    }
  };
  (platform_interface_index_definitions.Index.new = function(opts) {
    let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
    let fields = opts && 'fields' in opts ? opts.fields : null;
    let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
    this[S$.collectionGroup] = collectionGroup;
    this[S$.fields] = fields;
    this[S$.queryScope] = queryScope;
    ;
  }).prototype = platform_interface_index_definitions.Index.prototype;
  dart.addTypeTests(platform_interface_index_definitions.Index);
  dart.addTypeCaches(platform_interface_index_definitions.Index);
  dart.setMethodSignature(platform_interface_index_definitions.Index, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.Index.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.Index, I[106]);
  dart.setFieldSignature(platform_interface_index_definitions.Index, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.Index.__proto__),
    collectionGroup: dart.finalFieldType(core.String),
    queryScope: dart.finalFieldType(platform_interface_index_definitions.QueryScope),
    fields: dart.finalFieldType(core.List$(platform_interface_index_definitions.IndexField))
  }));
  platform_interface_index_definitions.IndexField = class IndexField extends core.Object {
    get fieldPath() {
      return this[S$.fieldPath];
    }
    set fieldPath(value) {
      super.fieldPath = value;
    }
    get order() {
      return this[S$.order];
    }
    set order(value) {
      super.order = value;
    }
    get arrayConfig() {
      return this[S$.arrayConfig];
    }
    set arrayConfig(value) {
      super.arrayConfig = value;
    }
    static ['_#new#tearOff'](opts) {
      let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
      let order = opts && 'order' in opts ? opts.order : null;
      let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
      return new platform_interface_index_definitions.IndexField.new({fieldPath: fieldPath, order: order, arrayConfig: arrayConfig});
    }
    toMap() {
      return (() => {
        let t162 = new (T$.IdentityMapOfString$dynamic()).new();
        t162[S$.$_set]("fieldPath", this.fieldPath);
        if (this.order != null) t162[S$.$_set]("order", this.order === platform_interface_index_definitions.Order.ascending ? "ASCENDING" : "DESCENDING");
        if (this.arrayConfig != null) t162[S$.$_set]("arrayConfig", "CONTAINS");
        return t162;
      })();
    }
  };
  (platform_interface_index_definitions.IndexField.new = function(opts) {
    let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
    let order = opts && 'order' in opts ? opts.order : null;
    let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
    this[S$.fieldPath] = fieldPath;
    this[S$.order] = order;
    this[S$.arrayConfig] = arrayConfig;
    ;
  }).prototype = platform_interface_index_definitions.IndexField.prototype;
  dart.addTypeTests(platform_interface_index_definitions.IndexField);
  dart.addTypeCaches(platform_interface_index_definitions.IndexField);
  dart.setMethodSignature(platform_interface_index_definitions.IndexField, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.IndexField.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.IndexField, I[106]);
  dart.setFieldSignature(platform_interface_index_definitions.IndexField, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.IndexField.__proto__),
    fieldPath: dart.finalFieldType(core.String),
    order: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.Order)),
    arrayConfig: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.ArrayConfig))
  }));
  platform_interface_index_definitions.FieldOverrides = class FieldOverrides extends core.Object {
    get collectionGroup() {
      return this[S$.collectionGroup$1];
    }
    set collectionGroup(value) {
      super.collectionGroup = value;
    }
    get fieldPath() {
      return this[S$.fieldPath$1];
    }
    set fieldPath(value) {
      super.fieldPath = value;
    }
    get indexes() {
      return this[S$.indexes];
    }
    set indexes(value) {
      super.indexes = value;
    }
    static ['_#new#tearOff'](opts) {
      let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
      let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
      let indexes = opts && 'indexes' in opts ? opts.indexes : null;
      return new platform_interface_index_definitions.FieldOverrides.new({collectionGroup: collectionGroup, fieldPath: fieldPath, indexes: indexes});
    }
    toMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["collectionGroup", this.collectionGroup, "fieldPath", this.fieldPath, "indexes", this.indexes[S$.$map](T$.MapOfString$dynamic(), dart.fn(index => index.toMap(), T$.FieldOverrideIndexToMapOfString$dynamic()))[S$.$toList]()]);
    }
  };
  (platform_interface_index_definitions.FieldOverrides.new = function(opts) {
    let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
    let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
    let indexes = opts && 'indexes' in opts ? opts.indexes : null;
    this[S$.collectionGroup$1] = collectionGroup;
    this[S$.fieldPath$1] = fieldPath;
    this[S$.indexes] = indexes;
    ;
  }).prototype = platform_interface_index_definitions.FieldOverrides.prototype;
  dart.addTypeTests(platform_interface_index_definitions.FieldOverrides);
  dart.addTypeCaches(platform_interface_index_definitions.FieldOverrides);
  dart.setMethodSignature(platform_interface_index_definitions.FieldOverrides, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.FieldOverrides.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.FieldOverrides, I[106]);
  dart.setFieldSignature(platform_interface_index_definitions.FieldOverrides, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.FieldOverrides.__proto__),
    collectionGroup: dart.finalFieldType(core.String),
    fieldPath: dart.finalFieldType(core.String),
    indexes: dart.finalFieldType(core.List$(platform_interface_index_definitions.FieldOverrideIndex))
  }));
  platform_interface_index_definitions.FieldOverrideIndex = class FieldOverrideIndex extends core.Object {
    get queryScope() {
      return this[S$.queryScope$1];
    }
    set queryScope(value) {
      super.queryScope = value;
    }
    get order() {
      return this[S$.order$1];
    }
    set order(value) {
      super.order = value;
    }
    get arrayConfig() {
      return this[S$.arrayConfig$1];
    }
    set arrayConfig(value) {
      super.arrayConfig = value;
    }
    static ['_#new#tearOff'](opts) {
      let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
      let order = opts && 'order' in opts ? opts.order : null;
      let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
      return new platform_interface_index_definitions.FieldOverrideIndex.new({queryScope: queryScope, order: order, arrayConfig: arrayConfig});
    }
    toMap() {
      return (() => {
        let t163 = new (T$.IdentityMapOfString$dynamic()).new();
        t163[S$.$_set]("queryScope", this.queryScope);
        if (this.order != null) t163[S$.$_set]("order", this.order === platform_interface_index_definitions.Order.ascending ? "ASCENDING" : "DESCENDING");
        if (this.arrayConfig != null) t163[S$.$_set]("arrayConfig", "CONTAINS");
        return t163;
      })();
    }
  };
  (platform_interface_index_definitions.FieldOverrideIndex.new = function(opts) {
    let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
    let order = opts && 'order' in opts ? opts.order : null;
    let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
    this[S$.queryScope$1] = queryScope;
    this[S$.order$1] = order;
    this[S$.arrayConfig$1] = arrayConfig;
    ;
  }).prototype = platform_interface_index_definitions.FieldOverrideIndex.prototype;
  dart.addTypeTests(platform_interface_index_definitions.FieldOverrideIndex);
  dart.addTypeCaches(platform_interface_index_definitions.FieldOverrideIndex);
  dart.setMethodSignature(platform_interface_index_definitions.FieldOverrideIndex, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.FieldOverrideIndex.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.FieldOverrideIndex, I[106]);
  dart.setFieldSignature(platform_interface_index_definitions.FieldOverrideIndex, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.FieldOverrideIndex.__proto__),
    queryScope: dart.finalFieldType(core.String),
    order: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.Order)),
    arrayConfig: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.ArrayConfig))
  }));
  platform_interface_index_definitions.Order = class Order extends core._Enum {
    [S$._enumToString]() {
      return "Order." + this[S$._name];
    }
  };
  (platform_interface_index_definitions.Order.new = function(index, name) {
    platform_interface_index_definitions.Order.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_index_definitions.Order.prototype;
  dart.addTypeTests(platform_interface_index_definitions.Order);
  dart.addTypeCaches(platform_interface_index_definitions.Order);
  dart.setMethodSignature(platform_interface_index_definitions.Order, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.Order.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.Order, I[106]);
  dart.setStaticFieldSignature(platform_interface_index_definitions.Order, () => ['values', 'ascending', 'descending']);
  dart.defineLazy(platform_interface_index_definitions.Order, {
    /*platform_interface_index_definitions.Order.values*/get values() {
      return C[85] || CT.C85;
    },
    /*platform_interface_index_definitions.Order.ascending*/get ascending() {
      return C[86] || CT.C86;
    },
    /*platform_interface_index_definitions.Order.descending*/get descending() {
      return C[87] || CT.C87;
    }
  }, false);
  platform_interface_index_definitions.ArrayConfig = class ArrayConfig extends core._Enum {
    [S$._enumToString]() {
      return "ArrayConfig." + this[S$._name];
    }
  };
  (platform_interface_index_definitions.ArrayConfig.new = function(index, name) {
    platform_interface_index_definitions.ArrayConfig.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_index_definitions.ArrayConfig.prototype;
  dart.addTypeTests(platform_interface_index_definitions.ArrayConfig);
  dart.addTypeCaches(platform_interface_index_definitions.ArrayConfig);
  dart.setMethodSignature(platform_interface_index_definitions.ArrayConfig, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.ArrayConfig.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.ArrayConfig, I[106]);
  dart.setStaticFieldSignature(platform_interface_index_definitions.ArrayConfig, () => ['values', 'contains']);
  dart.defineLazy(platform_interface_index_definitions.ArrayConfig, {
    /*platform_interface_index_definitions.ArrayConfig.values*/get values() {
      return C[88] || CT.C88;
    },
    /*platform_interface_index_definitions.ArrayConfig.contains*/get contains() {
      return C[89] || CT.C89;
    }
  }, false);
  platform_interface_index_definitions.QueryScope = class QueryScope extends core._Enum {
    [S$._enumToString]() {
      return "QueryScope." + this[S$._name];
    }
  };
  (platform_interface_index_definitions.QueryScope.new = function(index, name) {
    platform_interface_index_definitions.QueryScope.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_index_definitions.QueryScope.prototype;
  dart.addTypeTests(platform_interface_index_definitions.QueryScope);
  dart.addTypeCaches(platform_interface_index_definitions.QueryScope);
  dart.setMethodSignature(platform_interface_index_definitions.QueryScope, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.QueryScope.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.QueryScope, I[106]);
  dart.setStaticFieldSignature(platform_interface_index_definitions.QueryScope, () => ['values', 'collection', 'collectionGroup']);
  dart.defineLazy(platform_interface_index_definitions.QueryScope, {
    /*platform_interface_index_definitions.QueryScope.values*/get values() {
      return C[90] || CT.C90;
    },
    /*platform_interface_index_definitions.QueryScope.collection*/get collection() {
      return C[91] || CT.C91;
    },
    /*platform_interface_index_definitions.QueryScope.collectionGroup*/get collectionGroup() {
      return C[92] || CT.C92;
    }
  }, false);
  platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform = class LoadBundleTaskSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    get taskState() {
      return this[S$.taskState$1];
    }
    set taskState(value) {
      super.taskState = value;
    }
    get bytesLoaded() {
      return this[S$.bytesLoaded$1];
    }
    set bytesLoaded(value) {
      super.bytesLoaded = value;
    }
    get documentsLoaded() {
      return this[S$.documentsLoaded$1];
    }
    set documentsLoaded(value) {
      super.documentsLoaded = value;
    }
    get totalBytes() {
      return this[S$.totalBytes$1];
    }
    set totalBytes(value) {
      super.totalBytes = value;
    }
    get totalDocuments() {
      return this[S$.totalDocuments$1];
    }
    set totalDocuments(value) {
      super.totalDocuments = value;
    }
    static ['_#new#tearOff'](taskState, data) {
      return new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(taskState, data);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token);
    }
  };
  (platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new = function(taskState, data) {
    this[S$.taskState$1] = taskState;
    this[S$.bytesLoaded$1] = core.int.as(dart.dsend(data, '_get', ["bytesLoaded"]));
    this[S$.documentsLoaded$1] = core.int.as(dart.dsend(data, '_get', ["documentsLoaded"]));
    this[S$.totalBytes$1] = core.int.as(dart.dsend(data, '_get', ["totalBytes"]));
    this[S$.totalDocuments$1] = core.int.as(dart.dsend(data, '_get', ["totalDocuments"]));
    platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform);
  dart.addTypeCaches(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, I[107]);
  dart.setFieldSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.__proto__),
    taskState: dart.finalFieldType(load_bundle_task_state.LoadBundleTaskState),
    bytesLoaded: dart.finalFieldType(core.int),
    documentsLoaded: dart.finalFieldType(core.int),
    totalBytes: dart.finalFieldType(core.int),
    totalDocuments: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, {
    /*platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_query.AggregateField = class AggregateField extends core.Object {};
  (platform_interface_query.AggregateField.new = function() {
    ;
  }).prototype = platform_interface_query.AggregateField.prototype;
  dart.addTypeTests(platform_interface_query.AggregateField);
  dart.addTypeCaches(platform_interface_query.AggregateField);
  dart.setLibraryUri(platform_interface_query.AggregateField, I[55]);
  platform_interface_query.count = class count extends platform_interface_query.AggregateField {
    static ['_#new#tearOff']() {
      return new platform_interface_query.count.new();
    }
  };
  (platform_interface_query.count.new = function() {
    ;
  }).prototype = platform_interface_query.count.prototype;
  dart.addTypeTests(platform_interface_query.count);
  dart.addTypeCaches(platform_interface_query.count);
  dart.setLibraryUri(platform_interface_query.count, I[55]);
  platform_interface_query.sum = class sum extends platform_interface_query.AggregateField {
    get field() {
      return this[S$.field$2];
    }
    set field(value) {
      super.field = value;
    }
    static ['_#new#tearOff'](field) {
      return new platform_interface_query.sum.new(field);
    }
  };
  (platform_interface_query.sum.new = function(field) {
    this[S$.field$2] = field;
    ;
  }).prototype = platform_interface_query.sum.prototype;
  dart.addTypeTests(platform_interface_query.sum);
  dart.addTypeCaches(platform_interface_query.sum);
  dart.setLibraryUri(platform_interface_query.sum, I[55]);
  dart.setFieldSignature(platform_interface_query.sum, () => ({
    __proto__: dart.getFields(platform_interface_query.sum.__proto__),
    field: dart.finalFieldType(core.String)
  }));
  platform_interface_query.average = class average extends platform_interface_query.AggregateField {
    get field() {
      return this[S$.field$3];
    }
    set field(value) {
      super.field = value;
    }
    static ['_#new#tearOff'](field) {
      return new platform_interface_query.average.new(field);
    }
  };
  (platform_interface_query.average.new = function(field) {
    this[S$.field$3] = field;
    ;
  }).prototype = platform_interface_query.average.prototype;
  dart.addTypeTests(platform_interface_query.average);
  dart.addTypeCaches(platform_interface_query.average);
  dart.setLibraryUri(platform_interface_query.average, I[55]);
  dart.setFieldSignature(platform_interface_query.average, () => ({
    __proto__: dart.getFields(platform_interface_query.average.__proto__),
    field: dart.finalFieldType(core.String)
  }));
  dart.defineLazy(platform_interface_query, {
    /*platform_interface_query._initialParameters*/get _initialParameters() {
      return T$.MapOfString$dynamic().unmodifiable(new _js_helper.LinkedMap.from(["where", T$.ListOfList().unmodifiable([]), "orderBy", T$.ListOfList().unmodifiable([]), "startAt", null, "startAfter", null, "endAt", null, "endBefore", null, "limit", null, "limitToLast", null]));
    },
    set _initialParameters(value) {}
  }, false);
  platform_interface_query_snapshot.QuerySnapshotPlatform = class QuerySnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    get docs() {
      return this[S$.docs];
    }
    set docs(value) {
      super.docs = value;
    }
    get docChanges() {
      return this[S$.docChanges];
    }
    set docChanges(value) {
      super.docChanges = value;
    }
    get metadata() {
      return this[S$.metadata$2];
    }
    set metadata(value) {
      super.metadata = value;
    }
    static ['_#new#tearOff'](docs, docChanges, metadata) {
      return new platform_interface_query_snapshot.QuerySnapshotPlatform.new(docs, docChanges, metadata);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_query_snapshot.QuerySnapshotPlatform._token);
    }
    get size() {
      return this.docs[S$.$length];
    }
  };
  (platform_interface_query_snapshot.QuerySnapshotPlatform.new = function(docs, docChanges, metadata) {
    this[S$.docs] = docs;
    this[S$.docChanges] = docChanges;
    this[S$.metadata$2] = metadata;
    platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__.new.call(this, {token: platform_interface_query_snapshot.QuerySnapshotPlatform._token});
    ;
  }).prototype = platform_interface_query_snapshot.QuerySnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_query_snapshot.QuerySnapshotPlatform);
  dart.addTypeCaches(platform_interface_query_snapshot.QuerySnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__),
    size: core.int
  }));
  dart.setLibraryUri(platform_interface_query_snapshot.QuerySnapshotPlatform, I[108]);
  dart.setFieldSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__),
    docs: dart.finalFieldType(core.List$(platform_interface_document_snapshot.DocumentSnapshotPlatform)),
    docChanges: dart.finalFieldType(core.List$(platform_interface_document_change.DocumentChangePlatform)),
    metadata: dart.finalFieldType(snapshot_metadata.SnapshotMetadataPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_query_snapshot.QuerySnapshotPlatform, {
    /*platform_interface_query_snapshot.QuerySnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  load_bundle_task_state$.convertToTaskState = function convertToTaskState(state) {
    switch (state) {
      case "running":
        {
          return load_bundle_task_state.LoadBundleTaskState.running;
        }
      case "success":
        {
          return load_bundle_task_state.LoadBundleTaskState.success;
        }
      case "error":
        {
          return load_bundle_task_state.LoadBundleTaskState.error;
        }
      default:
        {
          dart.throw(new core.UnsupportedError.new("Unknown LoadBundleTaskState value: " + state + "."));
        }
    }
  };
  set_options.SetOptions = class SetOptions extends core.Object {
    get merge() {
      return this[S$.merge$1];
    }
    set merge(value) {
      super.merge = value;
    }
    get mergeFields() {
      return this[S$.mergeFields$1];
    }
    set mergeFields(value) {
      super.mergeFields = value;
    }
    static ['_#new#tearOff'](opts) {
      let merge = opts && 'merge' in opts ? opts.merge : null;
      let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
      return new set_options.SetOptions.new({merge: merge, mergeFields: mergeFields});
    }
  };
  (set_options.SetOptions.new = function(opts) {
    let t170;
    let merge = opts && 'merge' in opts ? opts.merge : null;
    let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
    this[S$.merge$1] = merge;
    if (!(merge != null !== (mergeFields != null))) dart.assertFailed("options must provide either 'merge' or 'mergeFields'", I[109], 16, 11, "(merge != null) ^ (mergeFields != null)");
    this[S$.mergeFields$1] = (t170 = mergeFields, t170 == null ? null : t170[S$.$map](field_path.FieldPath, dart.fn(field => {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field))) dart.assertFailed("[mergeFields] can only contain Strings or FieldPaths but got " + dart.str(field), I[109], 21, 13, "field is String || field is FieldPath");
      if (typeof field == 'string') return new field_path.FieldPath.fromString(field);
      return field_path.FieldPath.as(field);
    }, T$.ObjectToFieldPath()))[S$.$toList]({growable: false}));
    ;
  }).prototype = set_options.SetOptions.prototype;
  dart.addTypeTests(set_options.SetOptions);
  dart.addTypeCaches(set_options.SetOptions);
  dart.setLibraryUri(set_options.SetOptions, I[110]);
  dart.setFieldSignature(set_options.SetOptions, () => ({
    __proto__: dart.getFields(set_options.SetOptions.__proto__),
    merge: dart.finalFieldType(dart.nullable(core.bool)),
    mergeFields: dart.finalFieldType(dart.nullable(core.List$(field_path.FieldPath)))
  }));
  settings.Settings = class Settings extends core.Object {
    get persistenceEnabled() {
      return this[S$.persistenceEnabled$1];
    }
    set persistenceEnabled(value) {
      super.persistenceEnabled = value;
    }
    get host() {
      return this[S$.host$1];
    }
    set host(value) {
      super.host = value;
    }
    get sslEnabled() {
      return this[S$.sslEnabled$1];
    }
    set sslEnabled(value) {
      super.sslEnabled = value;
    }
    get cacheSizeBytes() {
      return this[S$.cacheSizeBytes$1];
    }
    set cacheSizeBytes(value) {
      super.cacheSizeBytes = value;
    }
    get ignoreUndefinedProperties() {
      return this[S$.ignoreUndefinedProperties$1];
    }
    set ignoreUndefinedProperties(value) {
      super.ignoreUndefinedProperties = value;
    }
    static ['_#new#tearOff'](opts) {
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : false;
      return new settings.Settings.new({persistenceEnabled: persistenceEnabled, host: host, sslEnabled: sslEnabled, cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: ignoreUndefinedProperties});
    }
    get asMap() {
      return (() => {
        let t170 = new (T$.IdentityMapOfString$dynamic()).new();
        t170[S$.$_set]("persistenceEnabled", this.persistenceEnabled);
        t170[S$.$_set]("host", this.host);
        t170[S$.$_set]("sslEnabled", this.sslEnabled);
        t170[S$.$_set]("cacheSizeBytes", this.cacheSizeBytes);
        t170[S$.$_set]("ignoreUndefinedProperties", this.ignoreUndefinedProperties);
        return t170;
      })();
    }
    copyWith(opts) {
      let t171, t171$, t171$0, t171$1, t171$2;
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : null;
      if (!(cacheSizeBytes == null || cacheSizeBytes === -1 || dart.notNull(cacheSizeBytes) >= 1048576 && dart.notNull(cacheSizeBytes) <= 104857600)) dart.assertFailed("Cache size must be between 1048576 bytes (inclusive) and 104857600 bytes (inclusive)", I[111], 74, 9, "cacheSizeBytes == null ||\n            cacheSizeBytes == CACHE_SIZE_UNLIMITED ||\n            // 1mb and 100mb. minimum and maximum inclusive range.\n            (cacheSizeBytes >= 1048576 && cacheSizeBytes <= 104857600)");
      return new settings.Settings.new({persistenceEnabled: (t171 = persistenceEnabled, t171 == null ? this.persistenceEnabled : t171), host: (t171$ = host, t171$ == null ? this.host : t171$), sslEnabled: (t171$0 = sslEnabled, t171$0 == null ? this.sslEnabled : t171$0), cacheSizeBytes: (t171$1 = cacheSizeBytes, t171$1 == null ? this.cacheSizeBytes : t171$1), ignoreUndefinedProperties: (t171$2 = ignoreUndefinedProperties, t171$2 == null ? this.ignoreUndefinedProperties : t171$2)});
    }
    _equals(other) {
      if (other == null) return false;
      return settings.Settings.is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other.persistenceEnabled == this.persistenceEnabled && other.host == this.host && other.sslEnabled == this.sslEnabled && other.cacheSizeBytes == this.cacheSizeBytes && other.ignoreUndefinedProperties === this.ignoreUndefinedProperties;
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.persistenceEnabled, this.host, this.sslEnabled, this.cacheSizeBytes, this.ignoreUndefinedProperties);
    }
    toString() {
      return "Settings(" + dart.str(this.asMap) + ")";
    }
  };
  (settings.Settings.new = function(opts) {
    let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
    let host = opts && 'host' in opts ? opts.host : null;
    let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
    let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
    let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : false;
    this[S$.persistenceEnabled$1] = persistenceEnabled;
    this[S$.host$1] = host;
    this[S$.sslEnabled$1] = sslEnabled;
    this[S$.cacheSizeBytes$1] = cacheSizeBytes;
    this[S$.ignoreUndefinedProperties$1] = ignoreUndefinedProperties;
    ;
  }).prototype = settings.Settings.prototype;
  dart.addTypeTests(settings.Settings);
  dart.addTypeCaches(settings.Settings);
  dart.setMethodSignature(settings.Settings, () => ({
    __proto__: dart.getMethods(settings.Settings.__proto__),
    copyWith: dart.fnType(settings.Settings, [], {cacheSizeBytes: dart.nullable(core.int), host: dart.nullable(core.String), ignoreUndefinedProperties: dart.nullable(core.bool), persistenceEnabled: dart.nullable(core.bool), sslEnabled: dart.nullable(core.bool)}, {})
  }));
  dart.setGetterSignature(settings.Settings, () => ({
    __proto__: dart.getGetters(settings.Settings.__proto__),
    asMap: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(settings.Settings, I[112]);
  dart.setFieldSignature(settings.Settings, () => ({
    __proto__: dart.getFields(settings.Settings.__proto__),
    persistenceEnabled: dart.finalFieldType(dart.nullable(core.bool)),
    host: dart.finalFieldType(dart.nullable(core.String)),
    sslEnabled: dart.finalFieldType(dart.nullable(core.bool)),
    cacheSizeBytes: dart.finalFieldType(dart.nullable(core.int)),
    ignoreUndefinedProperties: dart.finalFieldType(core.bool)
  }));
  dart.setStaticFieldSignature(settings.Settings, () => ['CACHE_SIZE_UNLIMITED']);
  dart.defineExtensionMethods(settings.Settings, ['_equals', 'toString']);
  dart.defineExtensionAccessors(settings.Settings, ['hashCode']);
  dart.defineLazy(settings.Settings, {
    /*settings.Settings.CACHE_SIZE_UNLIMITED*/get CACHE_SIZE_UNLIMITED() {
      return -1;
    }
  }, false);
  snapshot_metadata.SnapshotMetadataPlatform = class SnapshotMetadataPlatform extends core.Object {
    get hasPendingWrites() {
      return this[S$.hasPendingWrites$1];
    }
    set hasPendingWrites(value) {
      super.hasPendingWrites = value;
    }
    get isFromCache() {
      return this[S$.isFromCache$1];
    }
    set isFromCache(value) {
      super.isFromCache = value;
    }
    static ['_#new#tearOff'](hasPendingWrites, isFromCache) {
      return new snapshot_metadata.SnapshotMetadataPlatform.new(hasPendingWrites, isFromCache);
    }
  };
  (snapshot_metadata.SnapshotMetadataPlatform.new = function(hasPendingWrites, isFromCache) {
    this[S$.hasPendingWrites$1] = hasPendingWrites;
    this[S$.isFromCache$1] = isFromCache;
    ;
  }).prototype = snapshot_metadata.SnapshotMetadataPlatform.prototype;
  dart.addTypeTests(snapshot_metadata.SnapshotMetadataPlatform);
  dart.addTypeCaches(snapshot_metadata.SnapshotMetadataPlatform);
  dart.setLibraryUri(snapshot_metadata.SnapshotMetadataPlatform, I[113]);
  dart.setFieldSignature(snapshot_metadata.SnapshotMetadataPlatform, () => ({
    __proto__: dart.getFields(snapshot_metadata.SnapshotMetadataPlatform.__proto__),
    hasPendingWrites: dart.finalFieldType(core.bool),
    isFromCache: dart.finalFieldType(core.bool)
  }));
  timestamp.Timestamp = class Timestamp extends core.Object {
    static ['_#new#tearOff'](_seconds, _nanoseconds) {
      return new timestamp.Timestamp.new(_seconds, _nanoseconds);
    }
    static fromMillisecondsSinceEpoch(milliseconds) {
      let seconds = (milliseconds / 1000)[S$.$floor]();
      let nanoseconds = (milliseconds - seconds * 1000) * 1000000;
      return new timestamp.Timestamp.new(seconds, nanoseconds);
    }
    static ['_#fromMillisecondsSinceEpoch#tearOff'](milliseconds) {
      return timestamp.Timestamp.fromMillisecondsSinceEpoch(milliseconds);
    }
    static fromMicrosecondsSinceEpoch(microseconds) {
      let seconds = (microseconds / 1000000)[S$.$truncate]();
      let nanoseconds = (microseconds - seconds * 1000000) * 1000;
      return new timestamp.Timestamp.new(seconds, nanoseconds);
    }
    static ['_#fromMicrosecondsSinceEpoch#tearOff'](microseconds) {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(microseconds);
    }
    static fromDate(date) {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(date.microsecondsSinceEpoch);
    }
    static ['_#fromDate#tearOff'](date) {
      return timestamp.Timestamp.fromDate(date);
    }
    static now() {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(new core.DateTime.now().microsecondsSinceEpoch);
    }
    static ['_#now#tearOff']() {
      return timestamp.Timestamp.now();
    }
    get seconds() {
      return this[S$._seconds];
    }
    get nanoseconds() {
      return this[S$._nanoseconds];
    }
    get millisecondsSinceEpoch() {
      return this.seconds * 1000 + (this.nanoseconds / 1000000)[S$.$truncate]();
    }
    get microsecondsSinceEpoch() {
      return this.seconds * 1000000 + (this.nanoseconds / 1000)[S$.$truncate]();
    }
    toDate() {
      return new core.DateTime.fromMicrosecondsSinceEpoch(this.microsecondsSinceEpoch);
    }
    get hashCode() {
      return core.Object.hash(this.seconds, this.nanoseconds);
    }
    _equals(other) {
      if (other == null) return false;
      return timestamp.Timestamp.is(other) && other.seconds === this.seconds && other.nanoseconds === this.nanoseconds;
    }
    compareTo(other) {
      timestamp.Timestamp.as(other);
      if (this.seconds === other.seconds) {
        return this.nanoseconds[S$.$compareTo](other.nanoseconds);
      }
      return this.seconds[S$.$compareTo](other.seconds);
    }
    toString() {
      return "Timestamp(seconds=" + dart.str(this.seconds) + ", nanoseconds=" + dart.str(this.nanoseconds) + ")";
    }
    static _validateRange(seconds, nanoseconds) {
      timestamp._check(nanoseconds >= 0, "nanoseconds", nanoseconds);
      timestamp._check(nanoseconds < 1000000000, "nanoseconds", nanoseconds);
      timestamp._check(seconds >= -62135596800, "seconds", seconds);
      timestamp._check(seconds < 253402300800, "seconds", seconds);
    }
  };
  (timestamp.Timestamp.new = function(_seconds, _nanoseconds) {
    this[S$._seconds] = _seconds;
    this[S$._nanoseconds] = _nanoseconds;
    timestamp.Timestamp._validateRange(this[S$._seconds], this[S$._nanoseconds]);
  }).prototype = timestamp.Timestamp.prototype;
  dart.addTypeTests(timestamp.Timestamp);
  dart.addTypeCaches(timestamp.Timestamp);
  timestamp.Timestamp[dart.implements] = () => [core.Comparable$(timestamp.Timestamp)];
  dart.setMethodSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getMethods(timestamp.Timestamp.__proto__),
    toDate: dart.fnType(core.DateTime, []),
    compareTo: dart.fnType(core.int, [dart.nullable(core.Object)]),
    [S$.$compareTo]: dart.fnType(core.int, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(timestamp.Timestamp, () => ['fromMillisecondsSinceEpoch', 'fromMicrosecondsSinceEpoch', 'fromDate', 'now', '_validateRange']);
  dart.setGetterSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getGetters(timestamp.Timestamp.__proto__),
    seconds: core.int,
    nanoseconds: core.int,
    millisecondsSinceEpoch: core.int,
    microsecondsSinceEpoch: core.int
  }));
  dart.setLibraryUri(timestamp.Timestamp, I[114]);
  dart.setFieldSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getFields(timestamp.Timestamp.__proto__),
    [S$._seconds]: dart.finalFieldType(core.int),
    [S$._nanoseconds]: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(timestamp.Timestamp, () => ['_kStartOfTime', '_kEndOfTime']);
  dart.defineExtensionMethods(timestamp.Timestamp, ['_equals', 'compareTo', 'toString']);
  dart.defineExtensionAccessors(timestamp.Timestamp, ['hashCode']);
  dart.defineLazy(timestamp.Timestamp, {
    /*timestamp.Timestamp._kStartOfTime*/get _kStartOfTime() {
      return -62135596800;
    },
    /*timestamp.Timestamp._kEndOfTime*/get _kEndOfTime() {
      return 253402300800;
    }
  }, false);
  timestamp._check = function _check(expr, name, value) {
    if (!expr) {
      dart.throw(new core.ArgumentError.new("Timestamp " + name + " out of range: " + dart.str(value)));
    }
  };
  dart.defineLazy(timestamp, {
    /*timestamp._kThousand*/get _kThousand() {
      return 1000;
    },
    /*timestamp._kMillion*/get _kMillion() {
      return 1000000;
    },
    /*timestamp._kBillion*/get _kBillion() {
      return 1000000000;
    }
  }, false);
  _flutterfire_internals['ObjectX|guard'] = function ObjectX$124guard(T, R, $this, cb) {
    if (T.is($this)) return cb(T.as($this));
    return null;
  };
  _flutterfire_internals['ObjectX|get#guard'] = function ObjectX$124get$35guard(T, $this) {
    return dart.fn((R, cb) => _flutterfire_internals['ObjectX|guard'](T, R, $this, cb), dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), [dart.fnType(R, [T])]];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    }));
  };
  _flutterfire_internals['ObjectX|safeCast'] = function ObjectX$124safeCast(T, R, $this) {
    if (R.is($this)) return R.as($this);
    return null;
  };
  _flutterfire_internals['ObjectX|get#safeCast'] = function ObjectX$124get$35safeCast(T, $this) {
    return dart.fn(R => _flutterfire_internals['ObjectX|safeCast'](T, R, $this), T$.VoidToRN());
  };
  _flutterfire_internals._firebaseExceptionFromCoreFirebaseError = function _firebaseExceptionFromCoreFirebaseError(firebaseError, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    let code = codeParser(firebaseError.code);
    let message = messageParser != null ? messageParser(code, firebaseError.message) : firebaseError.message[S$.$replaceFirst]("(" + firebaseError.code + ")", "");
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code});
  };
  _flutterfire_internals._testException = function _testException(exception) {
    return dart.packageJSType("FirebaseError", false).is(exception);
  };
  _flutterfire_internals._mapException = function _mapException(exception, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    if (!_flutterfire_internals._testException(exception)) dart.assertFailed(null, I[115], 89, 10, "_testException(exception)");
    if (dart.packageJSType("FirebaseError", false).is(exception)) {
      return _flutterfire_internals._firebaseExceptionFromCoreFirebaseError(exception, {plugin: plugin, codeParser: codeParser, messageParser: messageParser});
    }
    dart.throw(new core.StateError.new("unrecognized error " + dart.str(exception)));
  };
  _flutterfire_internals.guardWebExceptions = function guardWebExceptions(R, cb, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[93] || CT.C93}));
      } else if (async.Stream.is(value)) {
        return R.as(value.handleError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[93] || CT.C93}));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stack = dart.stackTrace(e);
      if (core.Object.is(error)) {
        if (!_flutterfire_internals._testException(error)) {
          dart.rethrow(e);
        }
        core.Error.throwWithStackTrace(_flutterfire_internals._mapException(error, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), stack);
      } else
        throw e;
    }
  };
  decode_utility.DecodeUtility = class DecodeUtility extends core.Object {
    static decodeMapData(data, firestore) {
      let t176;
      if (data == null) {
        return null;
      }
      t176 = data;
      return (() => {
        t176[S$.$updateAll](dart.fn((key, value) => decode_utility.DecodeUtility.valueDecode(value, firestore), T$.StringAnddynamicTodynamic()));
        return t176;
      })();
    }
    static decodeArrayData(data, firestore) {
      if (data == null) {
        return null;
      }
      return data[S$.$map](dart.dynamic, dart.fn(v => decode_utility.DecodeUtility.valueDecode(v, firestore), T$.dynamicTodynamic()))[S$.$toList]();
    }
    static valueDecode(value, firestore) {
      if (js_util.instanceof(value, dart.global.firebase_firestore.GeoPoint)) {
        return new geo_point.GeoPoint.new(core.double.as(dart.dload(value, 'latitude')), core.double.as(dart.dload(value, 'longitude')));
      } else if (core.DateTime.is(value)) {
        return timestamp.Timestamp.fromDate(value);
      } else if (js_util.instanceof(value, dart.global.firebase_firestore.Bytes)) {
        return new blob.Blob.new(typed_data.Uint8List.as(dart.dsend(value, 'toUint8Array', [])));
      } else if (firestore$.DocumentReference.is(value)) {
        return cloud_firestore_web.FirebaseFirestoreWeb.as(firestore).doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return decode_utility.DecodeUtility.decodeMapData(value, firestore);
      } else if (core.List.is(value)) {
        return decode_utility.DecodeUtility.decodeArrayData(value, firestore);
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new decode_utility.DecodeUtility.new();
    }
  };
  (decode_utility.DecodeUtility.new = function() {
    ;
  }).prototype = decode_utility.DecodeUtility.prototype;
  dart.addTypeTests(decode_utility.DecodeUtility);
  dart.addTypeCaches(decode_utility.DecodeUtility);
  dart.setStaticMethodSignature(decode_utility.DecodeUtility, () => ['decodeMapData', 'decodeArrayData', 'valueDecode']);
  dart.setLibraryUri(decode_utility.DecodeUtility, I[116]);
  js_interop.dartifyDate = function dartifyDate(jsObject) {
    if (js_util.hasProperty(jsObject, "toDateString")) {
      try {
        let date = jsObject;
        return new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(dart.dsend(date, 'getTime', [])));
      } catch (e) {
        let ex = dart.getThrown(e);
        if (core.NoSuchMethodError.is(ex)) {
          return null;
        } else
          throw e;
      }
    }
    return null;
  };
  utils$.dartify = function dartify$(jsObject, customDartify = null) {
    let t178;
    if (utils$._isBasicType(jsObject)) {
      return jsObject;
    }
    if (core.Iterable.is(jsObject)) {
      return jsObject[S$.$map](dart.dynamic, dart.fn(item => utils$.dartify(item, customDartify), T$.dynamicTodynamic()))[S$.$toList]();
    }
    let jsDate = js_interop.dartifyDate(dart.nullCheck(jsObject));
    if (jsDate != null) {
      return jsDate;
    }
    let value = (t178 = customDartify, t178 == null ? null : t178(jsObject));
    if (value == null) {
      let keys = dart.global.Object.keys(jsObject);
      let map = new (T$.IdentityMapOfString$dynamic()).new();
      for (let key of keys) {
        map[S$.$_set](key, utils$.dartify(js_util.getProperty(T$.ObjectN(), jsObject, key), customDartify));
      }
      return map;
    }
    return value;
  };
  utils$.jsifyList = function jsifyList(list, customJsify = null) {
    return dart.global.Array.from(list[S$.$map](dart.dynamic, dart.fn(item => utils$.jsify(item, customJsify), T$.dynamicTodynamic()))[S$.$toList]());
  };
  utils$.jsify = function jsify$(dartObject, customJsify = null) {
    let t178;
    if (utils$._isBasicType(dartObject)) {
      if (dartObject == null) {
        return null;
      }
      return dartObject;
    }
    if (core.Iterable.is(dartObject)) {
      return utils$.jsifyList(dartObject, customJsify);
    }
    if (core.Map.is(dartObject)) {
      let jsMap = js_util.newObject(dart.dynamic);
      dartObject[S$.$forEach](dart.fn((key, value) => {
        js_util.setProperty(core.Object, core.Object.as(jsMap), core.Object.as(key), utils$.jsify(value, customJsify));
      }, T$.dynamicAnddynamicTovoid()));
      return jsMap;
    }
    if (core.Function.is(dartObject)) {
      return js.allowInterop(core.Function, dartObject);
    }
    let value = (t178 = customJsify, t178 == null ? null : t178(dartObject));
    if (value == null) {
      dart.throw(new core.ArgumentError.value(dartObject, "dartObject", "Could not convert"));
    }
    return value;
  };
  utils$.callMethod = function callMethod(jsObject, method, args) {
    return js_util.callMethod(dart.dynamic, jsObject, method, args);
  };
  utils$._isBasicType = function _isBasicType(value) {
    if (value == null || typeof value == 'number' || typeof value == 'boolean' || typeof value == 'string') {
      return true;
    }
    return false;
  };
  utils$.handleThenable = function handleThenable(T, thenable) {
    return async.async(T, function* handleThenable() {
      return js_util.promiseToFuture(T, thenable);
    });
  };
  utils$.handleFutureWithMapper = function handleFutureWithMapper(T, S, future, mapper) {
    return new dart.global.Promise(js.allowInterop(core.Function, dart.fn((resolve, reject) => {
      future.then(core.Null, dart.fn(value => {
        let mappedValue = mapper(value);
        resolve(mappedValue);
      }, dart.fnType(core.Null, [T]))).catchError(dart.fn(error => reject(core.Object.as(error)), T$.dynamicTodynamic()));
    }, dart.fnType(core.Null, [dart.fnType(dart.dynamic, [S]), T$.ObjectTodynamic()]))));
  };
  encode_utility.EncodeUtility = class EncodeUtility extends core.Object {
    static encodeMapData(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$.$updateAll](dart.fn((key, value) => encode_utility.EncodeUtility.valueEncode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static encodeMapDataFieldPath(data) {
      if (data == null) {
        return null;
      }
      let output = new (T$.LinkedMapOfFieldPath$dynamic$1()).new();
      data[S$.$forEach](dart.fn((key, value) => {
        output[S$.$_set](dart.packageJSType("firebase_firestore.FieldPath", false).as(encode_utility.EncodeUtility.valueEncode(key)), encode_utility.EncodeUtility.valueEncode(value));
      }, T$.ObjectAnddynamicTovoid()));
      return output;
    }
    static encodeArrayData(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, C[94] || CT.C94)[S$.$toList]();
    }
    static valueEncode(value) {
      if (platform_interface_field_value.FieldValuePlatform.is(value)) {
        let delegate = field_value_web.FieldValueWeb.as(platform_interface_field_value.FieldValuePlatform.getDelegate(value));
        return delegate.data;
      } else if (field_path.FieldPath.is(value)) {
        let components = value.components;
        let length = components[S$.$length];
        switch (length) {
          case 1:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0));
            }
          case 2:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1));
            }
          case 3:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2));
            }
          case 4:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3));
            }
          case 5:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4));
            }
          case 6:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5));
            }
          case 7:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6));
            }
          case 8:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7));
            }
          case 9:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7), components[S$.$_get](8));
            }
          case 10:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7), components[S$.$_get](8), components[S$.$_get](9));
            }
          default:
            {
              dart.throw(core.Exception.new("Firestore web FieldPath only supports 10 levels deep field paths"));
            }
        }
      } else if (dart.equals(value, field_path.FieldPath.documentId)) {
        return dart.global.firebase_firestore.documentId();
      } else if (timestamp.Timestamp.is(value)) {
        return value.toDate();
      } else if (geo_point.GeoPoint.is(value)) {
        return new dart.global.firebase_firestore.GeoPoint(value.latitude, value.longitude);
      } else if (blob.Blob.is(value)) {
        return dart.global.firebase_firestore.Bytes.fromUint8Array(value.bytes);
      } else if (document_reference_web.DocumentReferenceWeb.is(value)) {
        return value.firestoreWeb.doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return encode_utility.EncodeUtility.encodeMapData(value);
      } else if (core.List.is(value)) {
        return encode_utility.EncodeUtility.encodeArrayData(value);
      } else if (core.Iterable.is(value)) {
        return encode_utility.EncodeUtility.encodeArrayData(value[S$.$toList]());
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new encode_utility.EncodeUtility.new();
    }
  };
  (encode_utility.EncodeUtility.new = function() {
    ;
  }).prototype = encode_utility.EncodeUtility.prototype;
  dart.addTypeTests(encode_utility.EncodeUtility);
  dart.addTypeCaches(encode_utility.EncodeUtility);
  dart.setStaticMethodSignature(encode_utility.EncodeUtility, () => ['encodeMapData', 'encodeMapDataFieldPath', 'encodeArrayData', 'valueEncode']);
  dart.setLibraryUri(encode_utility.EncodeUtility, I[117]);
  field_value_web.FieldValueWeb = class FieldValueWeb extends core.Object {
    get data() {
      return this[S$.data$3];
    }
    set data(value) {
      this[S$.data$3] = value;
    }
    static ['_#new#tearOff'](data) {
      return new field_value_web.FieldValueWeb.new(data);
    }
    _equals(other) {
      if (other == null) return false;
      return field_value_web.FieldValueWeb.is(other) && other.data[S$.$_equals](this.data);
    }
    get hashCode() {
      return this.data[S$.$hashCode];
    }
  };
  (field_value_web.FieldValueWeb.new = function(data) {
    this[S$.data$3] = data;
    ;
  }).prototype = field_value_web.FieldValueWeb.prototype;
  dart.addTypeTests(field_value_web.FieldValueWeb);
  dart.addTypeCaches(field_value_web.FieldValueWeb);
  dart.setLibraryUri(field_value_web.FieldValueWeb, I[118]);
  dart.setFieldSignature(field_value_web.FieldValueWeb, () => ({
    __proto__: dart.getFields(field_value_web.FieldValueWeb.__proto__),
    data: dart.fieldType(firestore$.FieldValue)
  }));
  dart.defineExtensionMethods(field_value_web.FieldValueWeb, ['_equals']);
  dart.defineExtensionAccessors(field_value_web.FieldValueWeb, ['hashCode']);
  utils$0.dartify = function dartify$0(jsObject) {
    return utils$.dartify(jsObject, dart.fn(object => {
      if (object == null) {
        return null;
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.DocumentReference)) {
        return firestore$.DocumentReference.getInstance(dart.packageJSType("firebase_firestore.DocumentReference", false).as(object));
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.GeoPoint)) {
        return object;
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.Timestamp)) {
        return new timestamp.Timestamp.new(dart.packageJSType("firebase_firestore.Timestamp", false).as(object).seconds, object.nanoseconds);
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.Bytes)) {
        return dart.packageJSType("BytesJsImpl", false).as(object);
      }
      return null;
    }, T$.ObjectNToObjectN()));
  };
  utils$0.jsify = function jsify$0(dartObject) {
    if (dartObject == null) {
      return null;
    }
    return utils$.jsify(dartObject, dart.fn(object => {
      if (core.DateTime.is(object)) {
        return dart.global.firebase_firestore.Timestamp.fromMillis(object.millisecondsSinceEpoch);
      }
      if (timestamp.Timestamp.is(object)) {
        return dart.global.firebase_firestore.Timestamp.fromMillis(object.millisecondsSinceEpoch);
      }
      if (firestore$.DocumentReference.is(object)) {
        return object.jsObject;
      }
      if (firestore$.FieldValue.is(object)) {
        return firestore$.jsifyFieldValue(object);
      }
      if (dart.packageJSType("BytesJsImpl", false).is(object)) {
        return object;
      }
      if (dart.packageJSType("firebase_firestore.GeoPoint", false).is(object)) {
        return dartObject;
      }
      if (core.Function.is(object)) {
        return js.allowInterop(core.Function, object);
      }
      return null;
    }, T$.ObjectNTodynamic()));
  };
  aggregate_query_web.AggregateQueryWeb = class AggregateQueryWeb extends platform_interface_aggregate_query.AggregateQueryPlatform {
    static ['_#new#tearOff'](query, _webQuery, _aggregateQueries) {
      return new aggregate_query_web.AggregateQueryWeb.new(query, _webQuery, _aggregateQueries);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      return async.async(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, (function* get() {
        let snapshot = (yield this[S$._delegate$10].get(this[S$._aggregateQueries]));
        let sum = T$.JSArrayOfAggregateQueryResponse().of([]);
        let average = T$.JSArrayOfAggregateQueryResponse().of([]);
        for (let query of this[S$._aggregateQueries]) {
          switch (query.type) {
            case C[33] || CT.C33:
              {
                sum[S$.$add](new messages$46pigeon$.AggregateQueryResponse.new({type: messages$46pigeon$.AggregateType.sum, value: snapshot.getDataValue(query), field: query.field}));
                break;
              }
            case C[34] || CT.C34:
              {
                average[S$.$add](new messages$46pigeon$.AggregateQueryResponse.new({type: messages$46pigeon$.AggregateType.average, value: snapshot.getDataValue(query), field: query.field}));
                break;
              }
            default:
              {
                break;
              }
          }
        }
        return new platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new({count: snapshot.count, sum: sum, average: average});
      }).bind(this));
    }
    count() {
      return new aggregate_query_web.AggregateQueryWeb.new(this.query, this[S$._webQuery$1], (() => {
        let t178 = T$.ListOfAggregateQuery().of(this[S$._aggregateQueries]);
        t178.push(new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.count}));
        return t178;
      })());
    }
    sum(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this.query, this[S$._webQuery$1], (() => {
        let t179 = T$.ListOfAggregateQuery().of(this[S$._aggregateQueries]);
        t179.push(new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.sum, field: field}));
        return t179;
      })());
    }
    average(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this.query, this[S$._webQuery$1], (() => {
        let t180 = T$.ListOfAggregateQuery().of(this[S$._aggregateQueries]);
        t180.push(new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.average, field: field}));
        return t180;
      })());
    }
  };
  (aggregate_query_web.AggregateQueryWeb.new = function(query, _webQuery, _aggregateQueries) {
    this[S$._aggregateQueries] = _aggregateQueries;
    this[S$._delegate$10] = new firestore$.AggregateQuery.new(T$.QueryOfQueryJsImpl().as(_webQuery));
    this[S$._webQuery$1] = T$.QueryOfQueryJsImpl().as(_webQuery);
    aggregate_query_web.AggregateQueryWeb.__proto__.new.call(this, query);
    ;
  }).prototype = aggregate_query_web.AggregateQueryWeb.prototype;
  dart.addTypeTests(aggregate_query_web.AggregateQueryWeb);
  dart.addTypeCaches(aggregate_query_web.AggregateQueryWeb);
  dart.setLibraryUri(aggregate_query_web.AggregateQueryWeb, I[119]);
  dart.setFieldSignature(aggregate_query_web.AggregateQueryWeb, () => ({
    __proto__: dart.getFields(aggregate_query_web.AggregateQueryWeb.__proto__),
    [S$._delegate$10]: dart.finalFieldType(firestore$.AggregateQuery),
    [S$._aggregateQueries]: dart.finalFieldType(core.List$(messages$46pigeon$.AggregateQuery)),
    [S$._webQuery$1]: dart.finalFieldType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)))
  }));
  action_code_info.ActionCodeInfo = class ActionCodeInfo extends core.Object {
    get operation() {
      return this[S$.operation];
    }
    set operation(value) {
      this[S$.operation] = value;
    }
    static ['_#new#tearOff'](opts) {
      let operation = opts && 'operation' in opts ? opts.operation : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new action_code_info.ActionCodeInfo.new({operation: operation, data: data});
    }
    get data() {
      return this[S$._data$2].toMap();
    }
  };
  (action_code_info.ActionCodeInfo.new = function(opts) {
    let operation = opts && 'operation' in opts ? opts.operation : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[S$.operation] = operation;
    this[S$._data$2] = data;
    ;
  }).prototype = action_code_info.ActionCodeInfo.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfo);
  dart.addTypeCaches(action_code_info.ActionCodeInfo);
  dart.setGetterSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getGetters(action_code_info.ActionCodeInfo.__proto__),
    data: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfo, I[120]);
  dart.setFieldSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getFields(action_code_info.ActionCodeInfo.__proto__),
    operation: dart.fieldType(messages$46pigeon$0.ActionCodeInfoOperation),
    [S$._data$2]: dart.fieldType(action_code_info.ActionCodeInfoData)
  }));
  action_code_info.ActionCodeInfoData = class ActionCodeInfoData extends core.Object {
    get email() {
      return this[S$.email$1];
    }
    set email(value) {
      super.email = value;
    }
    get previousEmail() {
      return this[S$.previousEmail];
    }
    set previousEmail(value) {
      super.previousEmail = value;
    }
    static ['_#new#tearOff'](opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
      return new action_code_info.ActionCodeInfoData.new({email: email, previousEmail: previousEmail});
    }
    toMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["email", this.email, "previousEmail", this.previousEmail]);
    }
  };
  (action_code_info.ActionCodeInfoData.new = function(opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
    this[S$.email$1] = email;
    this[S$.previousEmail] = previousEmail;
    ;
  }).prototype = action_code_info.ActionCodeInfoData.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfoData);
  dart.addTypeCaches(action_code_info.ActionCodeInfoData);
  dart.setMethodSignature(action_code_info.ActionCodeInfoData, () => ({
    __proto__: dart.getMethods(action_code_info.ActionCodeInfoData.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfoData, I[120]);
  dart.setFieldSignature(action_code_info.ActionCodeInfoData, () => ({
    __proto__: dart.getFields(action_code_info.ActionCodeInfoData.__proto__),
    email: dart.finalFieldType(dart.nullable(core.String)),
    previousEmail: dart.finalFieldType(dart.nullable(core.String))
  }));
  action_code_settings.ActionCodeSettings = class ActionCodeSettings extends core.Object {
    get androidPackageName() {
      return this[S$.androidPackageName];
    }
    set androidPackageName(value) {
      super.androidPackageName = value;
    }
    get androidMinimumVersion() {
      return this[S$.androidMinimumVersion];
    }
    set androidMinimumVersion(value) {
      super.androidMinimumVersion = value;
    }
    get androidInstallApp() {
      return this[S$.androidInstallApp];
    }
    set androidInstallApp(value) {
      super.androidInstallApp = value;
    }
    get iOSBundleId() {
      return this[S$.iOSBundleId];
    }
    set iOSBundleId(value) {
      super.iOSBundleId = value;
    }
    get dynamicLinkDomain() {
      return this[S$.dynamicLinkDomain];
    }
    set dynamicLinkDomain(value) {
      super.dynamicLinkDomain = value;
    }
    get handleCodeInApp() {
      return this[S$.handleCodeInApp];
    }
    set handleCodeInApp(value) {
      super.handleCodeInApp = value;
    }
    get url() {
      return this[S$.url];
    }
    set url(value) {
      super.url = value;
    }
    static ['_#new#tearOff'](opts) {
      let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
      let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
      let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : false;
      let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
      let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : false;
      let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
      let url = opts && 'url' in opts ? opts.url : null;
      return new action_code_settings.ActionCodeSettings.new({androidPackageName: androidPackageName, androidMinimumVersion: androidMinimumVersion, androidInstallApp: androidInstallApp, dynamicLinkDomain: dynamicLinkDomain, handleCodeInApp: handleCodeInApp, iOSBundleId: iOSBundleId, url: url});
    }
    asMap() {
      return (() => {
        let t181 = new (T$.IdentityMapOfString$dynamic()).new();
        t181[S$.$_set]("url", this.url);
        t181[S$.$_set]("dynamicLinkDomain", this.dynamicLinkDomain);
        t181[S$.$_set]("handleCodeInApp", this.handleCodeInApp);
        if (this.iOSBundleId != null) t181[S$.$_set]("iOS", new (T$.IdentityMapOfString$StringN()).from(["bundleId", this.iOSBundleId]));
        if (this.androidPackageName != null) t181[S$.$_set]("android", new (T$.IdentityMapOfString$ObjectN()).from(["packageName", this.androidPackageName, "minimumVersion", this.androidMinimumVersion, "installApp", this.androidInstallApp]));
        return t181;
      })();
    }
    toString() {
      return dart.str(dart.wrapType(action_code_settings.ActionCodeSettings)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (action_code_settings.ActionCodeSettings.new = function(opts) {
    let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
    let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
    let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : false;
    let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
    let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : false;
    let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
    let url = opts && 'url' in opts ? opts.url : null;
    this[S$.androidPackageName] = androidPackageName;
    this[S$.androidMinimumVersion] = androidMinimumVersion;
    this[S$.androidInstallApp] = androidInstallApp;
    this[S$.dynamicLinkDomain] = dynamicLinkDomain;
    this[S$.handleCodeInApp] = handleCodeInApp;
    this[S$.iOSBundleId] = iOSBundleId;
    this[S$.url] = url;
    ;
  }).prototype = action_code_settings.ActionCodeSettings.prototype;
  dart.addTypeTests(action_code_settings.ActionCodeSettings);
  dart.addTypeCaches(action_code_settings.ActionCodeSettings);
  dart.setMethodSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getMethods(action_code_settings.ActionCodeSettings.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(action_code_settings.ActionCodeSettings, I[121]);
  dart.setFieldSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getFields(action_code_settings.ActionCodeSettings.__proto__),
    androidPackageName: dart.finalFieldType(dart.nullable(core.String)),
    androidMinimumVersion: dart.finalFieldType(dart.nullable(core.String)),
    androidInstallApp: dart.finalFieldType(core.bool),
    iOSBundleId: dart.finalFieldType(dart.nullable(core.String)),
    dynamicLinkDomain: dart.finalFieldType(dart.nullable(core.String)),
    handleCodeInApp: dart.finalFieldType(core.bool),
    url: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(action_code_settings.ActionCodeSettings, ['toString']);
  additional_user_info.AdditionalUserInfo = class AdditionalUserInfo extends core.Object {
    get isNewUser() {
      return this[S$.isNewUser];
    }
    set isNewUser(value) {
      super.isNewUser = value;
    }
    get profile() {
      return this[S$.profile];
    }
    set profile(value) {
      super.profile = value;
    }
    get providerId() {
      return this[S$.providerId];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get username() {
      return this[S$.username];
    }
    set username(value) {
      super.username = value;
    }
    get authorizationCode() {
      return this[S$.authorizationCode];
    }
    set authorizationCode(value) {
      super.authorizationCode = value;
    }
    static ['_#new#tearOff'](opts) {
      let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
      let profile = opts && 'profile' in opts ? opts.profile : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let username = opts && 'username' in opts ? opts.username : null;
      let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
      return new additional_user_info.AdditionalUserInfo.new({isNewUser: isNewUser, profile: profile, providerId: providerId, username: username, authorizationCode: authorizationCode});
    }
    toString() {
      return dart.str(dart.wrapType(additional_user_info.AdditionalUserInfo)) + "(" + "isNewUser: " + dart.str(this.isNewUser) + ", " + "profile: " + dart.str(this.profile) + ", " + "providerId: " + dart.str(this.providerId) + ", " + "username: " + dart.str(this.username) + ", " + "authorizationCode: " + dart.str(this.authorizationCode) + ")";
    }
  };
  (additional_user_info.AdditionalUserInfo.new = function(opts) {
    let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
    let profile = opts && 'profile' in opts ? opts.profile : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let username = opts && 'username' in opts ? opts.username : null;
    let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
    this[S$.isNewUser] = isNewUser;
    this[S$.profile] = profile;
    this[S$.providerId] = providerId;
    this[S$.username] = username;
    this[S$.authorizationCode] = authorizationCode;
    ;
  }).prototype = additional_user_info.AdditionalUserInfo.prototype;
  dart.addTypeTests(additional_user_info.AdditionalUserInfo);
  dart.addTypeCaches(additional_user_info.AdditionalUserInfo);
  dart.setLibraryUri(additional_user_info.AdditionalUserInfo, I[122]);
  dart.setFieldSignature(additional_user_info.AdditionalUserInfo, () => ({
    __proto__: dart.getFields(additional_user_info.AdditionalUserInfo.__proto__),
    isNewUser: dart.finalFieldType(core.bool),
    profile: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.dynamic))),
    providerId: dart.finalFieldType(dart.nullable(core.String)),
    username: dart.finalFieldType(dart.nullable(core.String)),
    authorizationCode: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(additional_user_info.AdditionalUserInfo, ['toString']);
  auth_credential.AuthCredential = class AuthCredential extends core.Object {
    get providerId() {
      return this[S$.providerId$1];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get signInMethod() {
      return this[S$.signInMethod];
    }
    set signInMethod(value) {
      super.signInMethod = value;
    }
    get token() {
      return this[S$.token];
    }
    set token(value) {
      super.token = value;
    }
    get accessToken() {
      return this[S$.accessToken];
    }
    set accessToken(value) {
      super.accessToken = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let token = opts && 'token' in opts ? opts.token : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new auth_credential.AuthCredential.new({providerId: providerId, signInMethod: signInMethod, token: token, accessToken: accessToken});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "token", this.token, "accessToken", this.accessToken]);
    }
    toString() {
      return "AuthCredential(providerId: " + this.providerId + ", signInMethod: " + this.signInMethod + ", token: " + dart.str(this.token) + ", accessToken: " + dart.str(this.accessToken) + ")";
    }
  };
  (auth_credential.AuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let token = opts && 'token' in opts ? opts.token : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    this[S$.providerId$1] = providerId;
    this[S$.signInMethod] = signInMethod;
    this[S$.token] = token;
    this[S$.accessToken] = accessToken;
    ;
  }).prototype = auth_credential.AuthCredential.prototype;
  dart.addTypeTests(auth_credential.AuthCredential);
  dart.addTypeCaches(auth_credential.AuthCredential);
  dart.setMethodSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getMethods(auth_credential.AuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(auth_credential.AuthCredential, I[123]);
  dart.setFieldSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getFields(auth_credential.AuthCredential.__proto__),
    providerId: dart.finalFieldType(core.String),
    signInMethod: dart.finalFieldType(core.String),
    token: dart.finalFieldType(dart.nullable(core.int)),
    accessToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(auth_credential.AuthCredential, ['toString']);
  auth_provider$.AuthProvider = class AuthProvider extends core.Object {
    get providerId() {
      return this[S$.providerId$2];
    }
    set providerId(value) {
      super.providerId = value;
    }
    toString() {
      return "AuthProvider(providerId: " + this.providerId + ")";
    }
  };
  (auth_provider$.AuthProvider.new = function(providerId) {
    this[S$.providerId$2] = providerId;
    ;
  }).prototype = auth_provider$.AuthProvider.prototype;
  dart.addTypeTests(auth_provider$.AuthProvider);
  dart.addTypeCaches(auth_provider$.AuthProvider);
  dart.setLibraryUri(auth_provider$.AuthProvider, I[124]);
  dart.setFieldSignature(auth_provider$.AuthProvider, () => ({
    __proto__: dart.getFields(auth_provider$.AuthProvider.__proto__),
    providerId: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(auth_provider$.AuthProvider, ['toString']);
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform = class FirebaseAuthMultiFactorExceptionPlatform extends firebase_auth_exception.FirebaseAuthException {
    get resolver() {
      return this[S$.resolver];
    }
    set resolver(value) {
      super.resolver = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let resolver = opts && 'resolver' in opts ? opts.resolver : null;
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId, resolver: resolver});
    }
  };
  (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let resolver = opts && 'resolver' in opts ? opts.resolver : null;
    this[S$.resolver] = resolver;
    firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__.new.call(this, {message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    ;
  }).prototype = firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.prototype;
  dart.addTypeTests(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  dart.addTypeCaches(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, I[125]);
  dart.setFieldSignature(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, () => ({
    __proto__: dart.getFields(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__),
    resolver: dart.finalFieldType(platform_interface_multi_factor.MultiFactorResolverPlatform)
  }));
  id_token_result.IdTokenResult = class IdTokenResult extends core.Object {
    static ['_#new#tearOff'](_data) {
      return new id_token_result.IdTokenResult.new(_data);
    }
    get authTime() {
      return this[S$._data$3].authTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$._data$3].authTimestamp));
    }
    get claims() {
      return this[S$._data$3].claims == null ? null : T$.LinkedHashMapOfString$dynamic().from(dart.nullCheck(this[S$._data$3].claims));
    }
    get expirationTime() {
      return this[S$._data$3].expirationTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$._data$3].expirationTimestamp));
    }
    get issuedAtTime() {
      return this[S$._data$3].issuedAtTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$._data$3].issuedAtTimestamp));
    }
    get signInProvider() {
      return this[S$._data$3].signInProvider;
    }
    get token() {
      return this[S$._data$3].token;
    }
    toString() {
      return dart.str(dart.wrapType(id_token_result.IdTokenResult)) + "(authTime: " + dart.str(this.authTime) + ", claims: " + dart.str(this.claims) + ", expirationTime: " + dart.str(this.expirationTime) + ", issuedAtTime: " + dart.str(this.issuedAtTime) + ", signInProvider: " + dart.str(this.signInProvider) + ", token: " + dart.str(this.token) + ")";
    }
  };
  (id_token_result.IdTokenResult.new = function(_data) {
    this[S$._data$3] = _data;
    ;
  }).prototype = id_token_result.IdTokenResult.prototype;
  dart.addTypeTests(id_token_result.IdTokenResult);
  dart.addTypeCaches(id_token_result.IdTokenResult);
  dart.setGetterSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getGetters(id_token_result.IdTokenResult.__proto__),
    authTime: dart.nullable(core.DateTime),
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: dart.nullable(core.DateTime),
    issuedAtTime: dart.nullable(core.DateTime),
    signInProvider: dart.nullable(core.String),
    token: dart.nullable(core.String)
  }));
  dart.setLibraryUri(id_token_result.IdTokenResult, I[126]);
  dart.setFieldSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getFields(id_token_result.IdTokenResult.__proto__),
    [S$._data$3]: dart.finalFieldType(messages$46pigeon$0.PigeonIdTokenResult)
  }));
  dart.defineExtensionMethods(id_token_result.IdTokenResult, ['toString']);
  messages$46pigeon$0.ActionCodeInfoOperation = class ActionCodeInfoOperation extends core._Enum {
    [S$._enumToString]() {
      return "ActionCodeInfoOperation." + this[S$._name];
    }
  };
  (messages$46pigeon$0.ActionCodeInfoOperation.new = function(index, name) {
    messages$46pigeon$0.ActionCodeInfoOperation.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.ActionCodeInfoOperation.prototype;
  dart.addTypeTests(messages$46pigeon$0.ActionCodeInfoOperation);
  dart.addTypeCaches(messages$46pigeon$0.ActionCodeInfoOperation);
  dart.setMethodSignature(messages$46pigeon$0.ActionCodeInfoOperation, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.ActionCodeInfoOperation.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.ActionCodeInfoOperation, I[127]);
  dart.setStaticFieldSignature(messages$46pigeon$0.ActionCodeInfoOperation, () => ['values', 'unknown', 'passwordReset', 'verifyEmail', 'recoverEmail', 'emailSignIn', 'verifyAndChangeEmail', 'revertSecondFactorAddition']);
  dart.defineLazy(messages$46pigeon$0.ActionCodeInfoOperation, {
    /*messages$46pigeon$0.ActionCodeInfoOperation.values*/get values() {
      return C[95] || CT.C95;
    },
    /*messages$46pigeon$0.ActionCodeInfoOperation.unknown*/get unknown() {
      return C[96] || CT.C96;
    },
    /*messages$46pigeon$0.ActionCodeInfoOperation.passwordReset*/get passwordReset() {
      return C[97] || CT.C97;
    },
    /*messages$46pigeon$0.ActionCodeInfoOperation.verifyEmail*/get verifyEmail() {
      return C[98] || CT.C98;
    },
    /*messages$46pigeon$0.ActionCodeInfoOperation.recoverEmail*/get recoverEmail() {
      return C[99] || CT.C99;
    },
    /*messages$46pigeon$0.ActionCodeInfoOperation.emailSignIn*/get emailSignIn() {
      return C[100] || CT.C100;
    },
    /*messages$46pigeon$0.ActionCodeInfoOperation.verifyAndChangeEmail*/get verifyAndChangeEmail() {
      return C[101] || CT.C101;
    },
    /*messages$46pigeon$0.ActionCodeInfoOperation.revertSecondFactorAddition*/get revertSecondFactorAddition() {
      return C[102] || CT.C102;
    }
  }, false);
  messages$46pigeon$0.PigeonMultiFactorSession = class PigeonMultiFactorSession extends core.Object {
    get id() {
      return this[S$.id$4];
    }
    set id(value) {
      this[S$.id$4] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      return new messages$46pigeon$0.PigeonMultiFactorSession.new({id: id});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.id]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonMultiFactorSession.new({id: core.String.as(dart.nullCheck(result[S$.$_get](0)))});
    }
  };
  (messages$46pigeon$0.PigeonMultiFactorSession.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    this[S$.id$4] = id;
    ;
  }).prototype = messages$46pigeon$0.PigeonMultiFactorSession.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonMultiFactorSession);
  dart.addTypeCaches(messages$46pigeon$0.PigeonMultiFactorSession);
  dart.setMethodSignature(messages$46pigeon$0.PigeonMultiFactorSession, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonMultiFactorSession.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonMultiFactorSession, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonMultiFactorSession, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonMultiFactorSession, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonMultiFactorSession.__proto__),
    id: dart.fieldType(core.String)
  }));
  messages$46pigeon$0.PigeonPhoneMultiFactorAssertion = class PigeonPhoneMultiFactorAssertion extends core.Object {
    get verificationId() {
      return this[S$.verificationId$1];
    }
    set verificationId(value) {
      this[S$.verificationId$1] = value;
    }
    get verificationCode() {
      return this[S$.verificationCode];
    }
    set verificationCode(value) {
      this[S$.verificationCode] = value;
    }
    static ['_#new#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
      return new messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.verificationId, this.verificationCode]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.new({verificationId: core.String.as(dart.nullCheck(result[S$.$_get](0))), verificationCode: core.String.as(dart.nullCheck(result[S$.$_get](1)))});
    }
  };
  (messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.new = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
    this[S$.verificationId$1] = verificationId;
    this[S$.verificationCode] = verificationCode;
    ;
  }).prototype = messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion);
  dart.addTypeCaches(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion);
  dart.setMethodSignature(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.__proto__),
    verificationId: dart.fieldType(core.String),
    verificationCode: dart.fieldType(core.String)
  }));
  messages$46pigeon$0.PigeonMultiFactorInfo = class PigeonMultiFactorInfo extends core.Object {
    get displayName() {
      return this[S$.displayName];
    }
    set displayName(value) {
      this[S$.displayName] = value;
    }
    get enrollmentTimestamp() {
      return this[S$.enrollmentTimestamp];
    }
    set enrollmentTimestamp(value) {
      this[S$.enrollmentTimestamp] = value;
    }
    get factorId() {
      return this[S$.factorId];
    }
    set factorId(value) {
      this[S$.factorId] = value;
    }
    get uid() {
      return this[S$.uid];
    }
    set uid(value) {
      this[S$.uid] = value;
    }
    get phoneNumber() {
      return this[S$.phoneNumber$1];
    }
    set phoneNumber(value) {
      this[S$.phoneNumber$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new messages$46pigeon$0.PigeonMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.displayName, this.enrollmentTimestamp, this.factorId, this.uid, this.phoneNumber]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonMultiFactorInfo.new({displayName: T$.StringN().as(result[S$.$_get](0)), enrollmentTimestamp: core.double.as(dart.nullCheck(result[S$.$_get](1))), factorId: T$.StringN().as(result[S$.$_get](2)), uid: core.String.as(dart.nullCheck(result[S$.$_get](3))), phoneNumber: T$.StringN().as(result[S$.$_get](4))});
    }
  };
  (messages$46pigeon$0.PigeonMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[S$.displayName] = displayName;
    this[S$.enrollmentTimestamp] = enrollmentTimestamp;
    this[S$.factorId] = factorId;
    this[S$.uid] = uid;
    this[S$.phoneNumber$1] = phoneNumber;
    ;
  }).prototype = messages$46pigeon$0.PigeonMultiFactorInfo.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonMultiFactorInfo);
  dart.addTypeCaches(messages$46pigeon$0.PigeonMultiFactorInfo);
  dart.setMethodSignature(messages$46pigeon$0.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonMultiFactorInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonMultiFactorInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonMultiFactorInfo, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonMultiFactorInfo.__proto__),
    displayName: dart.fieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.fieldType(core.double),
    factorId: dart.fieldType(dart.nullable(core.String)),
    uid: dart.fieldType(core.String),
    phoneNumber: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.AuthPigeonFirebaseApp = class AuthPigeonFirebaseApp extends core.Object {
    get appName() {
      return this[S$.appName$1];
    }
    set appName(value) {
      this[S$.appName$1] = value;
    }
    get tenantId() {
      return this[S$.tenantId$2];
    }
    set tenantId(value) {
      this[S$.tenantId$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appName = opts && 'appName' in opts ? opts.appName : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      return new messages$46pigeon$0.AuthPigeonFirebaseApp.new({appName: appName, tenantId: tenantId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appName, this.tenantId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.AuthPigeonFirebaseApp.new({appName: core.String.as(dart.nullCheck(result[S$.$_get](0))), tenantId: T$.StringN().as(result[S$.$_get](1))});
    }
  };
  (messages$46pigeon$0.AuthPigeonFirebaseApp.new = function(opts) {
    let appName = opts && 'appName' in opts ? opts.appName : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    this[S$.appName$1] = appName;
    this[S$.tenantId$2] = tenantId;
    ;
  }).prototype = messages$46pigeon$0.AuthPigeonFirebaseApp.prototype;
  dart.addTypeTests(messages$46pigeon$0.AuthPigeonFirebaseApp);
  dart.addTypeCaches(messages$46pigeon$0.AuthPigeonFirebaseApp);
  dart.setMethodSignature(messages$46pigeon$0.AuthPigeonFirebaseApp, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.AuthPigeonFirebaseApp.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.AuthPigeonFirebaseApp, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.AuthPigeonFirebaseApp, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.AuthPigeonFirebaseApp, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.AuthPigeonFirebaseApp.__proto__),
    appName: dart.fieldType(core.String),
    tenantId: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.PigeonActionCodeInfoData = class PigeonActionCodeInfoData extends core.Object {
    get email() {
      return this[S$.email$2];
    }
    set email(value) {
      this[S$.email$2] = value;
    }
    get previousEmail() {
      return this[S$.previousEmail$1];
    }
    set previousEmail(value) {
      this[S$.previousEmail$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
      return new messages$46pigeon$0.PigeonActionCodeInfoData.new({email: email, previousEmail: previousEmail});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.email, this.previousEmail]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonActionCodeInfoData.new({email: T$.StringN().as(result[S$.$_get](0)), previousEmail: T$.StringN().as(result[S$.$_get](1))});
    }
  };
  (messages$46pigeon$0.PigeonActionCodeInfoData.new = function(opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
    this[S$.email$2] = email;
    this[S$.previousEmail$1] = previousEmail;
    ;
  }).prototype = messages$46pigeon$0.PigeonActionCodeInfoData.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonActionCodeInfoData);
  dart.addTypeCaches(messages$46pigeon$0.PigeonActionCodeInfoData);
  dart.setMethodSignature(messages$46pigeon$0.PigeonActionCodeInfoData, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonActionCodeInfoData.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonActionCodeInfoData, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonActionCodeInfoData, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonActionCodeInfoData, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonActionCodeInfoData.__proto__),
    email: dart.fieldType(dart.nullable(core.String)),
    previousEmail: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.PigeonActionCodeInfo = class PigeonActionCodeInfo extends core.Object {
    get operation() {
      return this[S$.operation$1];
    }
    set operation(value) {
      this[S$.operation$1] = value;
    }
    get data() {
      return this[S$.data$4];
    }
    set data(value) {
      this[S$.data$4] = value;
    }
    static ['_#new#tearOff'](opts) {
      let operation = opts && 'operation' in opts ? opts.operation : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new messages$46pigeon$0.PigeonActionCodeInfo.new({operation: operation, data: data});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.operation.index, this.data.encode()]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonActionCodeInfo.new({operation: messages$46pigeon$0.ActionCodeInfoOperation.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), data: messages$46pigeon$0.PigeonActionCodeInfoData.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1))))});
    }
  };
  (messages$46pigeon$0.PigeonActionCodeInfo.new = function(opts) {
    let operation = opts && 'operation' in opts ? opts.operation : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[S$.operation$1] = operation;
    this[S$.data$4] = data;
    ;
  }).prototype = messages$46pigeon$0.PigeonActionCodeInfo.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonActionCodeInfo);
  dart.addTypeCaches(messages$46pigeon$0.PigeonActionCodeInfo);
  dart.setMethodSignature(messages$46pigeon$0.PigeonActionCodeInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonActionCodeInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonActionCodeInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonActionCodeInfo, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonActionCodeInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonActionCodeInfo.__proto__),
    operation: dart.fieldType(messages$46pigeon$0.ActionCodeInfoOperation),
    data: dart.fieldType(messages$46pigeon$0.PigeonActionCodeInfoData)
  }));
  messages$46pigeon$0.PigeonAdditionalUserInfo = class PigeonAdditionalUserInfo extends core.Object {
    get isNewUser() {
      return this[S$.isNewUser$1];
    }
    set isNewUser(value) {
      this[S$.isNewUser$1] = value;
    }
    get providerId() {
      return this[S$.providerId$3];
    }
    set providerId(value) {
      this[S$.providerId$3] = value;
    }
    get username() {
      return this[S$.username$1];
    }
    set username(value) {
      this[S$.username$1] = value;
    }
    get authorizationCode() {
      return this[S$.authorizationCode$1];
    }
    set authorizationCode(value) {
      this[S$.authorizationCode$1] = value;
    }
    get profile() {
      return this[S$.profile$1];
    }
    set profile(value) {
      this[S$.profile$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let username = opts && 'username' in opts ? opts.username : null;
      let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
      let profile = opts && 'profile' in opts ? opts.profile : null;
      return new messages$46pigeon$0.PigeonAdditionalUserInfo.new({isNewUser: isNewUser, providerId: providerId, username: username, authorizationCode: authorizationCode, profile: profile});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.isNewUser, this.providerId, this.username, this.authorizationCode, this.profile]);
    }
    static decode(result) {
      let t184;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonAdditionalUserInfo.new({isNewUser: core.bool.as(dart.nullCheck(result[S$.$_get](0))), providerId: T$.StringN().as(result[S$.$_get](1)), username: T$.StringN().as(result[S$.$_get](2)), authorizationCode: T$.StringN().as(result[S$.$_get](3)), profile: (t184 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](4)), t184 == null ? null : t184[S$.$cast](T$.StringN(), T$.ObjectN()))});
    }
  };
  (messages$46pigeon$0.PigeonAdditionalUserInfo.new = function(opts) {
    let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let username = opts && 'username' in opts ? opts.username : null;
    let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
    let profile = opts && 'profile' in opts ? opts.profile : null;
    this[S$.isNewUser$1] = isNewUser;
    this[S$.providerId$3] = providerId;
    this[S$.username$1] = username;
    this[S$.authorizationCode$1] = authorizationCode;
    this[S$.profile$1] = profile;
    ;
  }).prototype = messages$46pigeon$0.PigeonAdditionalUserInfo.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonAdditionalUserInfo);
  dart.addTypeCaches(messages$46pigeon$0.PigeonAdditionalUserInfo);
  dart.setMethodSignature(messages$46pigeon$0.PigeonAdditionalUserInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonAdditionalUserInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonAdditionalUserInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonAdditionalUserInfo, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonAdditionalUserInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonAdditionalUserInfo.__proto__),
    isNewUser: dart.fieldType(core.bool),
    providerId: dart.fieldType(dart.nullable(core.String)),
    username: dart.fieldType(dart.nullable(core.String)),
    authorizationCode: dart.fieldType(dart.nullable(core.String)),
    profile: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))))
  }));
  messages$46pigeon$0.PigeonAuthCredential = class PigeonAuthCredential extends core.Object {
    get providerId() {
      return this[S$.providerId$4];
    }
    set providerId(value) {
      this[S$.providerId$4] = value;
    }
    get signInMethod() {
      return this[S$.signInMethod$1];
    }
    set signInMethod(value) {
      this[S$.signInMethod$1] = value;
    }
    get nativeId() {
      return this[S.nativeId];
    }
    set nativeId(value) {
      this[S.nativeId] = value;
    }
    get accessToken() {
      return this[S.accessToken$1];
    }
    set accessToken(value) {
      this[S.accessToken$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let nativeId = opts && 'nativeId' in opts ? opts.nativeId : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new messages$46pigeon$0.PigeonAuthCredential.new({providerId: providerId, signInMethod: signInMethod, nativeId: nativeId, accessToken: accessToken});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.providerId, this.signInMethod, this.nativeId, this.accessToken]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonAuthCredential.new({providerId: core.String.as(dart.nullCheck(result[S$.$_get](0))), signInMethod: core.String.as(dart.nullCheck(result[S$.$_get](1))), nativeId: core.int.as(dart.nullCheck(result[S$.$_get](2))), accessToken: T$.StringN().as(result[S$.$_get](3))});
    }
  };
  (messages$46pigeon$0.PigeonAuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let nativeId = opts && 'nativeId' in opts ? opts.nativeId : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    this[S$.providerId$4] = providerId;
    this[S$.signInMethod$1] = signInMethod;
    this[S.nativeId] = nativeId;
    this[S.accessToken$1] = accessToken;
    ;
  }).prototype = messages$46pigeon$0.PigeonAuthCredential.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonAuthCredential);
  dart.addTypeCaches(messages$46pigeon$0.PigeonAuthCredential);
  dart.setMethodSignature(messages$46pigeon$0.PigeonAuthCredential, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonAuthCredential.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonAuthCredential, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonAuthCredential, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonAuthCredential, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonAuthCredential.__proto__),
    providerId: dart.fieldType(core.String),
    signInMethod: dart.fieldType(core.String),
    nativeId: dart.fieldType(core.int),
    accessToken: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.PigeonUserInfo = class PigeonUserInfo extends core.Object {
    get uid() {
      return this[S.uid$1];
    }
    set uid(value) {
      this[S.uid$1] = value;
    }
    get email() {
      return this[S.email$3];
    }
    set email(value) {
      this[S.email$3] = value;
    }
    get displayName() {
      return this[S.displayName$1];
    }
    set displayName(value) {
      this[S.displayName$1] = value;
    }
    get photoUrl() {
      return this[S.photoUrl];
    }
    set photoUrl(value) {
      this[S.photoUrl] = value;
    }
    get phoneNumber() {
      return this[S.phoneNumber$2];
    }
    set phoneNumber(value) {
      this[S.phoneNumber$2] = value;
    }
    get isAnonymous() {
      return this[S.isAnonymous];
    }
    set isAnonymous(value) {
      this[S.isAnonymous] = value;
    }
    get isEmailVerified() {
      return this[S.isEmailVerified];
    }
    set isEmailVerified(value) {
      this[S.isEmailVerified] = value;
    }
    get providerId() {
      return this[S.providerId$5];
    }
    set providerId(value) {
      this[S.providerId$5] = value;
    }
    get tenantId() {
      return this[S.tenantId$3];
    }
    set tenantId(value) {
      this[S.tenantId$3] = value;
    }
    get refreshToken() {
      return this[S.refreshToken];
    }
    set refreshToken(value) {
      this[S.refreshToken] = value;
    }
    get creationTimestamp() {
      return this[S.creationTimestamp];
    }
    set creationTimestamp(value) {
      this[S.creationTimestamp] = value;
    }
    get lastSignInTimestamp() {
      return this[S.lastSignInTimestamp];
    }
    set lastSignInTimestamp(value) {
      this[S.lastSignInTimestamp] = value;
    }
    static ['_#new#tearOff'](opts) {
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let isAnonymous = opts && 'isAnonymous' in opts ? opts.isAnonymous : null;
      let isEmailVerified = opts && 'isEmailVerified' in opts ? opts.isEmailVerified : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let refreshToken = opts && 'refreshToken' in opts ? opts.refreshToken : null;
      let creationTimestamp = opts && 'creationTimestamp' in opts ? opts.creationTimestamp : null;
      let lastSignInTimestamp = opts && 'lastSignInTimestamp' in opts ? opts.lastSignInTimestamp : null;
      return new messages$46pigeon$0.PigeonUserInfo.new({uid: uid, email: email, displayName: displayName, photoUrl: photoUrl, phoneNumber: phoneNumber, isAnonymous: isAnonymous, isEmailVerified: isEmailVerified, providerId: providerId, tenantId: tenantId, refreshToken: refreshToken, creationTimestamp: creationTimestamp, lastSignInTimestamp: lastSignInTimestamp});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.uid, this.email, this.displayName, this.photoUrl, this.phoneNumber, this.isAnonymous, this.isEmailVerified, this.providerId, this.tenantId, this.refreshToken, this.creationTimestamp, this.lastSignInTimestamp]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonUserInfo.new({uid: core.String.as(dart.nullCheck(result[S$.$_get](0))), email: T$.StringN().as(result[S$.$_get](1)), displayName: T$.StringN().as(result[S$.$_get](2)), photoUrl: T$.StringN().as(result[S$.$_get](3)), phoneNumber: T$.StringN().as(result[S$.$_get](4)), isAnonymous: core.bool.as(dart.nullCheck(result[S$.$_get](5))), isEmailVerified: core.bool.as(dart.nullCheck(result[S$.$_get](6))), providerId: T$.StringN().as(result[S$.$_get](7)), tenantId: T$.StringN().as(result[S$.$_get](8)), refreshToken: T$.StringN().as(result[S$.$_get](9)), creationTimestamp: T$.intN().as(result[S$.$_get](10)), lastSignInTimestamp: T$.intN().as(result[S$.$_get](11))});
    }
  };
  (messages$46pigeon$0.PigeonUserInfo.new = function(opts) {
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let isAnonymous = opts && 'isAnonymous' in opts ? opts.isAnonymous : null;
    let isEmailVerified = opts && 'isEmailVerified' in opts ? opts.isEmailVerified : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let refreshToken = opts && 'refreshToken' in opts ? opts.refreshToken : null;
    let creationTimestamp = opts && 'creationTimestamp' in opts ? opts.creationTimestamp : null;
    let lastSignInTimestamp = opts && 'lastSignInTimestamp' in opts ? opts.lastSignInTimestamp : null;
    this[S.uid$1] = uid;
    this[S.email$3] = email;
    this[S.displayName$1] = displayName;
    this[S.photoUrl] = photoUrl;
    this[S.phoneNumber$2] = phoneNumber;
    this[S.isAnonymous] = isAnonymous;
    this[S.isEmailVerified] = isEmailVerified;
    this[S.providerId$5] = providerId;
    this[S.tenantId$3] = tenantId;
    this[S.refreshToken] = refreshToken;
    this[S.creationTimestamp] = creationTimestamp;
    this[S.lastSignInTimestamp] = lastSignInTimestamp;
    ;
  }).prototype = messages$46pigeon$0.PigeonUserInfo.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonUserInfo);
  dart.addTypeCaches(messages$46pigeon$0.PigeonUserInfo);
  dart.setMethodSignature(messages$46pigeon$0.PigeonUserInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonUserInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonUserInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonUserInfo, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonUserInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonUserInfo.__proto__),
    uid: dart.fieldType(core.String),
    email: dart.fieldType(dart.nullable(core.String)),
    displayName: dart.fieldType(dart.nullable(core.String)),
    photoUrl: dart.fieldType(dart.nullable(core.String)),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    isAnonymous: dart.fieldType(core.bool),
    isEmailVerified: dart.fieldType(core.bool),
    providerId: dart.fieldType(dart.nullable(core.String)),
    tenantId: dart.fieldType(dart.nullable(core.String)),
    refreshToken: dart.fieldType(dart.nullable(core.String)),
    creationTimestamp: dart.fieldType(dart.nullable(core.int)),
    lastSignInTimestamp: dart.fieldType(dart.nullable(core.int))
  }));
  messages$46pigeon$0.PigeonUserDetails = class PigeonUserDetails extends core.Object {
    get userInfo() {
      return this[S.userInfo];
    }
    set userInfo(value) {
      this[S.userInfo] = value;
    }
    get providerData() {
      return this[S.providerData];
    }
    set providerData(value) {
      this[S.providerData] = value;
    }
    static ['_#new#tearOff'](opts) {
      let userInfo = opts && 'userInfo' in opts ? opts.userInfo : null;
      let providerData = opts && 'providerData' in opts ? opts.providerData : null;
      return new messages$46pigeon$0.PigeonUserDetails.new({userInfo: userInfo, providerData: providerData});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.userInfo.encode(), this.providerData]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonUserDetails.new({userInfo: messages$46pigeon$0.PigeonUserInfo.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](0)))), providerData: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](1)))[S$.$cast](T$.MapNOfObjectN$ObjectN())});
    }
  };
  (messages$46pigeon$0.PigeonUserDetails.new = function(opts) {
    let userInfo = opts && 'userInfo' in opts ? opts.userInfo : null;
    let providerData = opts && 'providerData' in opts ? opts.providerData : null;
    this[S.userInfo] = userInfo;
    this[S.providerData] = providerData;
    ;
  }).prototype = messages$46pigeon$0.PigeonUserDetails.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonUserDetails);
  dart.addTypeCaches(messages$46pigeon$0.PigeonUserDetails);
  dart.setMethodSignature(messages$46pigeon$0.PigeonUserDetails, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonUserDetails.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonUserDetails, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonUserDetails, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonUserDetails, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonUserDetails.__proto__),
    userInfo: dart.fieldType(messages$46pigeon$0.PigeonUserInfo),
    providerData: dart.fieldType(core.List$(dart.nullable(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))))
  }));
  messages$46pigeon$0.PigeonUserCredential = class PigeonUserCredential extends core.Object {
    get user() {
      return this[S.user$1];
    }
    set user(value) {
      this[S.user$1] = value;
    }
    get additionalUserInfo() {
      return this[S.additionalUserInfo$1];
    }
    set additionalUserInfo(value) {
      this[S.additionalUserInfo$1] = value;
    }
    get credential() {
      return this[S.credential$2];
    }
    set credential(value) {
      this[S.credential$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let user = opts && 'user' in opts ? opts.user : null;
      let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      return new messages$46pigeon$0.PigeonUserCredential.new({user: user, additionalUserInfo: additionalUserInfo, credential: credential});
    }
    encode() {
      let t184, t184$, t184$0;
      return T$.JSArrayOfObjectN().of([(t184 = this.user, t184 == null ? null : t184.encode()), (t184$ = this.additionalUserInfo, t184$ == null ? null : t184$.encode()), (t184$0 = this.credential, t184$0 == null ? null : t184$0.encode())]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonUserCredential.new({user: result[S$.$_get](0) != null ? messages$46pigeon$0.PigeonUserDetails.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](0)))) : null, additionalUserInfo: result[S$.$_get](1) != null ? messages$46pigeon$0.PigeonAdditionalUserInfo.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))) : null, credential: result[S$.$_get](2) != null ? messages$46pigeon$0.PigeonAuthCredential.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2)))) : null});
    }
  };
  (messages$46pigeon$0.PigeonUserCredential.new = function(opts) {
    let user = opts && 'user' in opts ? opts.user : null;
    let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    this[S.user$1] = user;
    this[S.additionalUserInfo$1] = additionalUserInfo;
    this[S.credential$2] = credential;
    ;
  }).prototype = messages$46pigeon$0.PigeonUserCredential.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonUserCredential);
  dart.addTypeCaches(messages$46pigeon$0.PigeonUserCredential);
  dart.setMethodSignature(messages$46pigeon$0.PigeonUserCredential, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonUserCredential.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonUserCredential, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonUserCredential, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonUserCredential, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonUserCredential.__proto__),
    user: dart.fieldType(dart.nullable(messages$46pigeon$0.PigeonUserDetails)),
    additionalUserInfo: dart.fieldType(dart.nullable(messages$46pigeon$0.PigeonAdditionalUserInfo)),
    credential: dart.fieldType(dart.nullable(messages$46pigeon$0.PigeonAuthCredential))
  }));
  messages$46pigeon$0.PigeonActionCodeSettings = class PigeonActionCodeSettings extends core.Object {
    get url() {
      return this[S.url$1];
    }
    set url(value) {
      this[S.url$1] = value;
    }
    get dynamicLinkDomain() {
      return this[S.dynamicLinkDomain$1];
    }
    set dynamicLinkDomain(value) {
      this[S.dynamicLinkDomain$1] = value;
    }
    get handleCodeInApp() {
      return this[S.handleCodeInApp$1];
    }
    set handleCodeInApp(value) {
      this[S.handleCodeInApp$1] = value;
    }
    get iOSBundleId() {
      return this[S.iOSBundleId$1];
    }
    set iOSBundleId(value) {
      this[S.iOSBundleId$1] = value;
    }
    get androidPackageName() {
      return this[S.androidPackageName$1];
    }
    set androidPackageName(value) {
      this[S.androidPackageName$1] = value;
    }
    get androidInstallApp() {
      return this[S.androidInstallApp$1];
    }
    set androidInstallApp(value) {
      this[S.androidInstallApp$1] = value;
    }
    get androidMinimumVersion() {
      return this[S.androidMinimumVersion$1];
    }
    set androidMinimumVersion(value) {
      this[S.androidMinimumVersion$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let url = opts && 'url' in opts ? opts.url : null;
      let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
      let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
      let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
      let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
      let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
      let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
      return new messages$46pigeon$0.PigeonActionCodeSettings.new({url: url, dynamicLinkDomain: dynamicLinkDomain, handleCodeInApp: handleCodeInApp, iOSBundleId: iOSBundleId, androidPackageName: androidPackageName, androidInstallApp: androidInstallApp, androidMinimumVersion: androidMinimumVersion});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.url, this.dynamicLinkDomain, this.handleCodeInApp, this.iOSBundleId, this.androidPackageName, this.androidInstallApp, this.androidMinimumVersion]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonActionCodeSettings.new({url: core.String.as(dart.nullCheck(result[S$.$_get](0))), dynamicLinkDomain: T$.StringN().as(result[S$.$_get](1)), handleCodeInApp: core.bool.as(dart.nullCheck(result[S$.$_get](2))), iOSBundleId: T$.StringN().as(result[S$.$_get](3)), androidPackageName: T$.StringN().as(result[S$.$_get](4)), androidInstallApp: core.bool.as(dart.nullCheck(result[S$.$_get](5))), androidMinimumVersion: T$.StringN().as(result[S$.$_get](6))});
    }
  };
  (messages$46pigeon$0.PigeonActionCodeSettings.new = function(opts) {
    let url = opts && 'url' in opts ? opts.url : null;
    let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
    let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
    let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
    let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
    let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
    let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
    this[S.url$1] = url;
    this[S.dynamicLinkDomain$1] = dynamicLinkDomain;
    this[S.handleCodeInApp$1] = handleCodeInApp;
    this[S.iOSBundleId$1] = iOSBundleId;
    this[S.androidPackageName$1] = androidPackageName;
    this[S.androidInstallApp$1] = androidInstallApp;
    this[S.androidMinimumVersion$1] = androidMinimumVersion;
    ;
  }).prototype = messages$46pigeon$0.PigeonActionCodeSettings.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonActionCodeSettings);
  dart.addTypeCaches(messages$46pigeon$0.PigeonActionCodeSettings);
  dart.setMethodSignature(messages$46pigeon$0.PigeonActionCodeSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonActionCodeSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonActionCodeSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonActionCodeSettings, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonActionCodeSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonActionCodeSettings.__proto__),
    url: dart.fieldType(core.String),
    dynamicLinkDomain: dart.fieldType(dart.nullable(core.String)),
    handleCodeInApp: dart.fieldType(core.bool),
    iOSBundleId: dart.fieldType(dart.nullable(core.String)),
    androidPackageName: dart.fieldType(dart.nullable(core.String)),
    androidInstallApp: dart.fieldType(core.bool),
    androidMinimumVersion: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.PigeonFirebaseAuthSettings = class PigeonFirebaseAuthSettings extends core.Object {
    get appVerificationDisabledForTesting() {
      return this[S.appVerificationDisabledForTesting];
    }
    set appVerificationDisabledForTesting(value) {
      this[S.appVerificationDisabledForTesting] = value;
    }
    get userAccessGroup() {
      return this[S.userAccessGroup];
    }
    set userAccessGroup(value) {
      this[S.userAccessGroup] = value;
    }
    get phoneNumber() {
      return this[S.phoneNumber$3];
    }
    set phoneNumber(value) {
      this[S.phoneNumber$3] = value;
    }
    get smsCode() {
      return this[S.smsCode];
    }
    set smsCode(value) {
      this[S.smsCode] = value;
    }
    get forceRecaptchaFlow() {
      return this[S.forceRecaptchaFlow];
    }
    set forceRecaptchaFlow(value) {
      this[S.forceRecaptchaFlow] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return new messages$46pigeon$0.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appVerificationDisabledForTesting, this.userAccessGroup, this.phoneNumber, this.smsCode, this.forceRecaptchaFlow]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: core.bool.as(dart.nullCheck(result[S$.$_get](0))), userAccessGroup: T$.StringN().as(result[S$.$_get](1)), phoneNumber: T$.StringN().as(result[S$.$_get](2)), smsCode: T$.StringN().as(result[S$.$_get](3)), forceRecaptchaFlow: T$.boolN().as(result[S$.$_get](4))});
    }
  };
  (messages$46pigeon$0.PigeonFirebaseAuthSettings.new = function(opts) {
    let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
    let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
    let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
    this[S.appVerificationDisabledForTesting] = appVerificationDisabledForTesting;
    this[S.userAccessGroup] = userAccessGroup;
    this[S.phoneNumber$3] = phoneNumber;
    this[S.smsCode] = smsCode;
    this[S.forceRecaptchaFlow] = forceRecaptchaFlow;
    ;
  }).prototype = messages$46pigeon$0.PigeonFirebaseAuthSettings.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonFirebaseAuthSettings);
  dart.addTypeCaches(messages$46pigeon$0.PigeonFirebaseAuthSettings);
  dart.setMethodSignature(messages$46pigeon$0.PigeonFirebaseAuthSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonFirebaseAuthSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonFirebaseAuthSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonFirebaseAuthSettings, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonFirebaseAuthSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonFirebaseAuthSettings.__proto__),
    appVerificationDisabledForTesting: dart.fieldType(core.bool),
    userAccessGroup: dart.fieldType(dart.nullable(core.String)),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    smsCode: dart.fieldType(dart.nullable(core.String)),
    forceRecaptchaFlow: dart.fieldType(dart.nullable(core.bool))
  }));
  messages$46pigeon$0.PigeonSignInProvider = class PigeonSignInProvider extends core.Object {
    get providerId() {
      return this[S.providerId$6];
    }
    set providerId(value) {
      this[S.providerId$6] = value;
    }
    get scopes() {
      return this[S.scopes];
    }
    set scopes(value) {
      this[S.scopes] = value;
    }
    get customParameters() {
      return this[S.customParameters];
    }
    set customParameters(value) {
      this[S.customParameters] = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let scopes = opts && 'scopes' in opts ? opts.scopes : null;
      let customParameters = opts && 'customParameters' in opts ? opts.customParameters : null;
      return new messages$46pigeon$0.PigeonSignInProvider.new({providerId: providerId, scopes: scopes, customParameters: customParameters});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.providerId, this.scopes, this.customParameters]);
    }
    static decode(result) {
      let t184, t184$;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonSignInProvider.new({providerId: core.String.as(dart.nullCheck(result[S$.$_get](0))), scopes: (t184 = T$.ListNOfObjectN().as(result[S$.$_get](1)), t184 == null ? null : t184[S$.$cast](T$.StringN())), customParameters: (t184$ = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](2)), t184$ == null ? null : t184$[S$.$cast](T$.StringN(), T$.StringN()))});
    }
  };
  (messages$46pigeon$0.PigeonSignInProvider.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let scopes = opts && 'scopes' in opts ? opts.scopes : null;
    let customParameters = opts && 'customParameters' in opts ? opts.customParameters : null;
    this[S.providerId$6] = providerId;
    this[S.scopes] = scopes;
    this[S.customParameters] = customParameters;
    ;
  }).prototype = messages$46pigeon$0.PigeonSignInProvider.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonSignInProvider);
  dart.addTypeCaches(messages$46pigeon$0.PigeonSignInProvider);
  dart.setMethodSignature(messages$46pigeon$0.PigeonSignInProvider, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonSignInProvider.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonSignInProvider, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonSignInProvider, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonSignInProvider, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonSignInProvider.__proto__),
    providerId: dart.fieldType(core.String),
    scopes: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.String)))),
    customParameters: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.String))))
  }));
  messages$46pigeon$0.PigeonVerifyPhoneNumberRequest = class PigeonVerifyPhoneNumberRequest extends core.Object {
    get phoneNumber() {
      return this[S.phoneNumber$4];
    }
    set phoneNumber(value) {
      this[S.phoneNumber$4] = value;
    }
    get timeout() {
      return this[S.timeout];
    }
    set timeout(value) {
      this[S.timeout] = value;
    }
    get forceResendingToken() {
      return this[S.forceResendingToken];
    }
    set forceResendingToken(value) {
      this[S.forceResendingToken] = value;
    }
    get autoRetrievedSmsCodeForTesting() {
      return this[S.autoRetrievedSmsCodeForTesting];
    }
    set autoRetrievedSmsCodeForTesting(value) {
      this[S.autoRetrievedSmsCodeForTesting] = value;
    }
    get multiFactorInfoId() {
      return this[S.multiFactorInfoId];
    }
    set multiFactorInfoId(value) {
      this[S.multiFactorInfoId] = value;
    }
    get multiFactorSessionId() {
      return this[S.multiFactorSessionId];
    }
    set multiFactorSessionId(value) {
      this[S.multiFactorSessionId] = value;
    }
    static ['_#new#tearOff'](opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : null;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let multiFactorInfoId = opts && 'multiFactorInfoId' in opts ? opts.multiFactorInfoId : null;
      let multiFactorSessionId = opts && 'multiFactorSessionId' in opts ? opts.multiFactorSessionId : null;
      return new messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.new({phoneNumber: phoneNumber, timeout: timeout, forceResendingToken: forceResendingToken, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorInfoId: multiFactorInfoId, multiFactorSessionId: multiFactorSessionId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.phoneNumber, this.timeout, this.forceResendingToken, this.autoRetrievedSmsCodeForTesting, this.multiFactorInfoId, this.multiFactorSessionId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.new({phoneNumber: T$.StringN().as(result[S$.$_get](0)), timeout: core.int.as(dart.nullCheck(result[S$.$_get](1))), forceResendingToken: T$.intN().as(result[S$.$_get](2)), autoRetrievedSmsCodeForTesting: T$.StringN().as(result[S$.$_get](3)), multiFactorInfoId: T$.StringN().as(result[S$.$_get](4)), multiFactorSessionId: T$.StringN().as(result[S$.$_get](5))});
    }
  };
  (messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.new = function(opts) {
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let timeout = opts && 'timeout' in opts ? opts.timeout : null;
    let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
    let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
    let multiFactorInfoId = opts && 'multiFactorInfoId' in opts ? opts.multiFactorInfoId : null;
    let multiFactorSessionId = opts && 'multiFactorSessionId' in opts ? opts.multiFactorSessionId : null;
    this[S.phoneNumber$4] = phoneNumber;
    this[S.timeout] = timeout;
    this[S.forceResendingToken] = forceResendingToken;
    this[S.autoRetrievedSmsCodeForTesting] = autoRetrievedSmsCodeForTesting;
    this[S.multiFactorInfoId] = multiFactorInfoId;
    this[S.multiFactorSessionId] = multiFactorSessionId;
    ;
  }).prototype = messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest);
  dart.addTypeCaches(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest);
  dart.setMethodSignature(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.__proto__),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    timeout: dart.fieldType(core.int),
    forceResendingToken: dart.fieldType(dart.nullable(core.int)),
    autoRetrievedSmsCodeForTesting: dart.fieldType(dart.nullable(core.String)),
    multiFactorInfoId: dart.fieldType(dart.nullable(core.String)),
    multiFactorSessionId: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.PigeonIdTokenResult = class PigeonIdTokenResult extends core.Object {
    get token() {
      return this[S.token$1];
    }
    set token(value) {
      this[S.token$1] = value;
    }
    get expirationTimestamp() {
      return this[S.expirationTimestamp];
    }
    set expirationTimestamp(value) {
      this[S.expirationTimestamp] = value;
    }
    get authTimestamp() {
      return this[S.authTimestamp];
    }
    set authTimestamp(value) {
      this[S.authTimestamp] = value;
    }
    get issuedAtTimestamp() {
      return this[S.issuedAtTimestamp];
    }
    set issuedAtTimestamp(value) {
      this[S.issuedAtTimestamp] = value;
    }
    get signInProvider() {
      return this[S.signInProvider];
    }
    set signInProvider(value) {
      this[S.signInProvider] = value;
    }
    get claims() {
      return this[S.claims];
    }
    set claims(value) {
      this[S.claims] = value;
    }
    get signInSecondFactor() {
      return this[S.signInSecondFactor];
    }
    set signInSecondFactor(value) {
      this[S.signInSecondFactor] = value;
    }
    static ['_#new#tearOff'](opts) {
      let token = opts && 'token' in opts ? opts.token : null;
      let expirationTimestamp = opts && 'expirationTimestamp' in opts ? opts.expirationTimestamp : null;
      let authTimestamp = opts && 'authTimestamp' in opts ? opts.authTimestamp : null;
      let issuedAtTimestamp = opts && 'issuedAtTimestamp' in opts ? opts.issuedAtTimestamp : null;
      let signInProvider = opts && 'signInProvider' in opts ? opts.signInProvider : null;
      let claims = opts && 'claims' in opts ? opts.claims : null;
      let signInSecondFactor = opts && 'signInSecondFactor' in opts ? opts.signInSecondFactor : null;
      return new messages$46pigeon$0.PigeonIdTokenResult.new({token: token, expirationTimestamp: expirationTimestamp, authTimestamp: authTimestamp, issuedAtTimestamp: issuedAtTimestamp, signInProvider: signInProvider, claims: claims, signInSecondFactor: signInSecondFactor});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.token, this.expirationTimestamp, this.authTimestamp, this.issuedAtTimestamp, this.signInProvider, this.claims, this.signInSecondFactor]);
    }
    static decode(result) {
      let t184;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonIdTokenResult.new({token: T$.StringN().as(result[S$.$_get](0)), expirationTimestamp: T$.intN().as(result[S$.$_get](1)), authTimestamp: T$.intN().as(result[S$.$_get](2)), issuedAtTimestamp: T$.intN().as(result[S$.$_get](3)), signInProvider: T$.StringN().as(result[S$.$_get](4)), claims: (t184 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](5)), t184 == null ? null : t184[S$.$cast](T$.StringN(), T$.ObjectN())), signInSecondFactor: T$.StringN().as(result[S$.$_get](6))});
    }
  };
  (messages$46pigeon$0.PigeonIdTokenResult.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    let expirationTimestamp = opts && 'expirationTimestamp' in opts ? opts.expirationTimestamp : null;
    let authTimestamp = opts && 'authTimestamp' in opts ? opts.authTimestamp : null;
    let issuedAtTimestamp = opts && 'issuedAtTimestamp' in opts ? opts.issuedAtTimestamp : null;
    let signInProvider = opts && 'signInProvider' in opts ? opts.signInProvider : null;
    let claims = opts && 'claims' in opts ? opts.claims : null;
    let signInSecondFactor = opts && 'signInSecondFactor' in opts ? opts.signInSecondFactor : null;
    this[S.token$1] = token;
    this[S.expirationTimestamp] = expirationTimestamp;
    this[S.authTimestamp] = authTimestamp;
    this[S.issuedAtTimestamp] = issuedAtTimestamp;
    this[S.signInProvider] = signInProvider;
    this[S.claims] = claims;
    this[S.signInSecondFactor] = signInSecondFactor;
    ;
  }).prototype = messages$46pigeon$0.PigeonIdTokenResult.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonIdTokenResult);
  dart.addTypeCaches(messages$46pigeon$0.PigeonIdTokenResult);
  dart.setMethodSignature(messages$46pigeon$0.PigeonIdTokenResult, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonIdTokenResult.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonIdTokenResult, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonIdTokenResult, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonIdTokenResult, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonIdTokenResult.__proto__),
    token: dart.fieldType(dart.nullable(core.String)),
    expirationTimestamp: dart.fieldType(dart.nullable(core.int)),
    authTimestamp: dart.fieldType(dart.nullable(core.int)),
    issuedAtTimestamp: dart.fieldType(dart.nullable(core.int)),
    signInProvider: dart.fieldType(dart.nullable(core.String)),
    claims: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    signInSecondFactor: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.PigeonUserProfile = class PigeonUserProfile extends core.Object {
    get displayName() {
      return this[S.displayName$2];
    }
    set displayName(value) {
      this[S.displayName$2] = value;
    }
    get photoUrl() {
      return this[S.photoUrl$1];
    }
    set photoUrl(value) {
      this[S.photoUrl$1] = value;
    }
    get displayNameChanged() {
      return this[S.displayNameChanged];
    }
    set displayNameChanged(value) {
      this[S.displayNameChanged] = value;
    }
    get photoUrlChanged() {
      return this[S.photoUrlChanged];
    }
    set photoUrlChanged(value) {
      this[S.photoUrlChanged] = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
      let displayNameChanged = opts && 'displayNameChanged' in opts ? opts.displayNameChanged : null;
      let photoUrlChanged = opts && 'photoUrlChanged' in opts ? opts.photoUrlChanged : null;
      return new messages$46pigeon$0.PigeonUserProfile.new({displayName: displayName, photoUrl: photoUrl, displayNameChanged: displayNameChanged, photoUrlChanged: photoUrlChanged});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.displayName, this.photoUrl, this.displayNameChanged, this.photoUrlChanged]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonUserProfile.new({displayName: T$.StringN().as(result[S$.$_get](0)), photoUrl: T$.StringN().as(result[S$.$_get](1)), displayNameChanged: core.bool.as(dart.nullCheck(result[S$.$_get](2))), photoUrlChanged: core.bool.as(dart.nullCheck(result[S$.$_get](3)))});
    }
  };
  (messages$46pigeon$0.PigeonUserProfile.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
    let displayNameChanged = opts && 'displayNameChanged' in opts ? opts.displayNameChanged : null;
    let photoUrlChanged = opts && 'photoUrlChanged' in opts ? opts.photoUrlChanged : null;
    this[S.displayName$2] = displayName;
    this[S.photoUrl$1] = photoUrl;
    this[S.displayNameChanged] = displayNameChanged;
    this[S.photoUrlChanged] = photoUrlChanged;
    ;
  }).prototype = messages$46pigeon$0.PigeonUserProfile.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonUserProfile);
  dart.addTypeCaches(messages$46pigeon$0.PigeonUserProfile);
  dart.setMethodSignature(messages$46pigeon$0.PigeonUserProfile, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonUserProfile.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonUserProfile, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonUserProfile, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonUserProfile, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonUserProfile.__proto__),
    displayName: dart.fieldType(dart.nullable(core.String)),
    photoUrl: dart.fieldType(dart.nullable(core.String)),
    displayNameChanged: dart.fieldType(core.bool),
    photoUrlChanged: dart.fieldType(core.bool)
  }));
  messages$46pigeon$0.PigeonTotpSecret = class PigeonTotpSecret extends core.Object {
    get codeIntervalSeconds() {
      return this[S.codeIntervalSeconds$2];
    }
    set codeIntervalSeconds(value) {
      this[S.codeIntervalSeconds$2] = value;
    }
    get codeLength() {
      return this[S.codeLength$2];
    }
    set codeLength(value) {
      this[S.codeLength$2] = value;
    }
    get enrollmentCompletionDeadline() {
      return this[S.enrollmentCompletionDeadline$2];
    }
    set enrollmentCompletionDeadline(value) {
      this[S.enrollmentCompletionDeadline$2] = value;
    }
    get hashingAlgorithm() {
      return this[S.hashingAlgorithm$2];
    }
    set hashingAlgorithm(value) {
      this[S.hashingAlgorithm$2] = value;
    }
    get secretKey() {
      return this[S.secretKey$2];
    }
    set secretKey(value) {
      this[S.secretKey$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let codeIntervalSeconds = opts && 'codeIntervalSeconds' in opts ? opts.codeIntervalSeconds : null;
      let codeLength = opts && 'codeLength' in opts ? opts.codeLength : null;
      let enrollmentCompletionDeadline = opts && 'enrollmentCompletionDeadline' in opts ? opts.enrollmentCompletionDeadline : null;
      let hashingAlgorithm = opts && 'hashingAlgorithm' in opts ? opts.hashingAlgorithm : null;
      let secretKey = opts && 'secretKey' in opts ? opts.secretKey : null;
      return new messages$46pigeon$0.PigeonTotpSecret.new({codeIntervalSeconds: codeIntervalSeconds, codeLength: codeLength, enrollmentCompletionDeadline: enrollmentCompletionDeadline, hashingAlgorithm: hashingAlgorithm, secretKey: secretKey});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.codeIntervalSeconds, this.codeLength, this.enrollmentCompletionDeadline, this.hashingAlgorithm, this.secretKey]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonTotpSecret.new({codeIntervalSeconds: T$.intN().as(result[S$.$_get](0)), codeLength: T$.intN().as(result[S$.$_get](1)), enrollmentCompletionDeadline: T$.intN().as(result[S$.$_get](2)), hashingAlgorithm: T$.StringN().as(result[S$.$_get](3)), secretKey: core.String.as(dart.nullCheck(result[S$.$_get](4)))});
    }
  };
  (messages$46pigeon$0.PigeonTotpSecret.new = function(opts) {
    let codeIntervalSeconds = opts && 'codeIntervalSeconds' in opts ? opts.codeIntervalSeconds : null;
    let codeLength = opts && 'codeLength' in opts ? opts.codeLength : null;
    let enrollmentCompletionDeadline = opts && 'enrollmentCompletionDeadline' in opts ? opts.enrollmentCompletionDeadline : null;
    let hashingAlgorithm = opts && 'hashingAlgorithm' in opts ? opts.hashingAlgorithm : null;
    let secretKey = opts && 'secretKey' in opts ? opts.secretKey : null;
    this[S.codeIntervalSeconds$2] = codeIntervalSeconds;
    this[S.codeLength$2] = codeLength;
    this[S.enrollmentCompletionDeadline$2] = enrollmentCompletionDeadline;
    this[S.hashingAlgorithm$2] = hashingAlgorithm;
    this[S.secretKey$2] = secretKey;
    ;
  }).prototype = messages$46pigeon$0.PigeonTotpSecret.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonTotpSecret);
  dart.addTypeCaches(messages$46pigeon$0.PigeonTotpSecret);
  dart.setMethodSignature(messages$46pigeon$0.PigeonTotpSecret, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonTotpSecret.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonTotpSecret, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonTotpSecret, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonTotpSecret, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonTotpSecret.__proto__),
    codeIntervalSeconds: dart.fieldType(dart.nullable(core.int)),
    codeLength: dart.fieldType(dart.nullable(core.int)),
    enrollmentCompletionDeadline: dart.fieldType(dart.nullable(core.int)),
    hashingAlgorithm: dart.fieldType(dart.nullable(core.String)),
    secretKey: dart.fieldType(core.String)
  }));
  messages$46pigeon$0._FirebaseAuthHostApiCodec = class _FirebaseAuthHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$0._FirebaseAuthHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$0.AuthPigeonFirebaseApp.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonActionCodeInfo.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonActionCodeInfoData.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonActionCodeSettings.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonAuthCredential.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonFirebaseAuthSettings.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonIdTokenResult.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonSignInProvider.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonTotpSecret.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserCredential.is(value)) {
        buffer.putUint8(141);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserDetails.is(value)) {
        buffer.putUint8(142);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserInfo.is(value)) {
        buffer.putUint8(143);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserProfile.is(value)) {
        buffer.putUint8(144);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.is(value)) {
        buffer.putUint8(145);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$0.AuthPigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$0.PigeonActionCodeInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$0.PigeonActionCodeInfoData.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon$0.PigeonActionCodeSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon$0.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon$0.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon$0.PigeonFirebaseAuthSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon$0.PigeonIdTokenResult.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon$0.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon$0.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon$0.PigeonSignInProvider.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon$0.PigeonTotpSecret.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 141:
          {
            return messages$46pigeon$0.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 142:
          {
            return messages$46pigeon$0.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 143:
          {
            return messages$46pigeon$0.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 144:
          {
            return messages$46pigeon$0.PigeonUserProfile.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 145:
          {
            return messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$0._FirebaseAuthHostApiCodec.new = function() {
    messages$46pigeon$0._FirebaseAuthHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$0._FirebaseAuthHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$0._FirebaseAuthHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$0._FirebaseAuthHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$0._FirebaseAuthHostApiCodec, I[127]);
  messages$46pigeon$0.FirebaseAuthHostApi = class FirebaseAuthHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.FirebaseAuthHostApi.new({binaryMessenger: binaryMessenger});
    }
    registerIdTokenListener(arg_app) {
      return async.async(core.String, (function* registerIdTokenListener() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.registerIdTokenListener", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    registerAuthStateListener(arg_app) {
      return async.async(core.String, (function* registerAuthStateListener() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.registerAuthStateListener", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    useEmulator(arg_app, arg_host, arg_port) {
      return async.async(dart.void, (function* useEmulator() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.useEmulator", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_host, arg_port])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    applyActionCode(arg_app, arg_code) {
      return async.async(dart.void, (function* applyActionCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.applyActionCode", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    checkActionCode(arg_app, arg_code) {
      return async.async(messages$46pigeon$0.PigeonActionCodeInfo, (function* checkActionCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.checkActionCode", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonActionCodeInfoN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    confirmPasswordReset(arg_app, arg_code, arg_newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.confirmPasswordReset", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code, arg_newPassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(arg_app, arg_email, arg_password) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* createUserWithEmailAndPassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithEmailAndPassword", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_password])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInAnonymously(arg_app) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* signInAnonymously() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInAnonymously", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* signInWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithCredential", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithCustomToken(arg_app, arg_token) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* signInWithCustomToken() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithCustomToken", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_token])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(arg_app, arg_email, arg_password) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* signInWithEmailAndPassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithEmailAndPassword", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_password])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithEmailLink(arg_app, arg_email, arg_emailLink) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* signInWithEmailLink() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithEmailLink", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_emailLink])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* signInWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithProvider", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signOut(arg_app) {
      return async.async(dart.void, (function* signOut() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signOut", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(arg_app, arg_email) {
      return async.async(T$.ListOfStringN(), (function* fetchSignInMethodsForEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.fetchSignInMethodsForEmail", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.StringN());
        }
      }).bind(this));
    }
    sendPasswordResetEmail(arg_app, arg_email, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.sendPasswordResetEmail", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(arg_app, arg_email, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.sendSignInLinkToEmail", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setLanguageCode(arg_app, arg_languageCode) {
      return async.async(core.String, (function* setLanguageCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.setLanguageCode", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_languageCode])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    setSettings(arg_app, arg_settings) {
      return async.async(dart.void, (function* setSettings() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.setSettings", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_settings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(arg_app, arg_code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.verifyPasswordResetCode", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    verifyPhoneNumber(arg_app, arg_request) {
      return async.async(core.String, (function* verifyPhoneNumber() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.verifyPhoneNumber", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    revokeTokenWithAuthorizationCode(arg_app, arg_authorizationCode) {
      return async.async(dart.void, (function* revokeTokenWithAuthorizationCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.revokeTokenWithAuthorizationCode", messages$46pigeon$0.FirebaseAuthHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_authorizationCode])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.FirebaseAuthHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.FirebaseAuthHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$0.FirebaseAuthHostApi);
  dart.addTypeCaches(messages$46pigeon$0.FirebaseAuthHostApi);
  dart.setMethodSignature(messages$46pigeon$0.FirebaseAuthHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.FirebaseAuthHostApi.__proto__),
    registerIdTokenListener: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.AuthPigeonFirebaseApp]),
    registerAuthStateListener: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.AuthPigeonFirebaseApp]),
    useEmulator: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, core.int]),
    applyActionCode: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    checkActionCode: dart.fnType(async.Future$(messages$46pigeon$0.PigeonActionCodeInfo), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, core.String]),
    signInAnonymously: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp]),
    signInWithCredential: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    signInWithCustomToken: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, core.String]),
    signInWithProvider: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, messages$46pigeon$0.PigeonSignInProvider]),
    signOut: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(dart.nullable(core.String))), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, dart.nullable(messages$46pigeon$0.PigeonActionCodeSettings)]),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, messages$46pigeon$0.PigeonActionCodeSettings]),
    setLanguageCode: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.AuthPigeonFirebaseApp, dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, messages$46pigeon$0.PigeonFirebaseAuthSettings]),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.AuthPigeonFirebaseApp, messages$46pigeon$0.PigeonVerifyPhoneNumberRequest]),
    revokeTokenWithAuthorizationCode: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String])
  }));
  dart.setLibraryUri(messages$46pigeon$0.FirebaseAuthHostApi, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.FirebaseAuthHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.FirebaseAuthHostApi.__proto__),
    [S._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.FirebaseAuthHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.FirebaseAuthHostApi, {
    /*messages$46pigeon$0.FirebaseAuthHostApi.codec*/get codec() {
      return C[103] || CT.C103;
    }
  }, false);
  messages$46pigeon$0._FirebaseAuthUserHostApiCodec = class _FirebaseAuthUserHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$0._FirebaseAuthUserHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$0.AuthPigeonFirebaseApp.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonActionCodeInfo.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonActionCodeInfoData.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonActionCodeSettings.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonAuthCredential.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonFirebaseAuthSettings.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonIdTokenResult.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonSignInProvider.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonTotpSecret.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserCredential.is(value)) {
        buffer.putUint8(141);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserDetails.is(value)) {
        buffer.putUint8(142);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserInfo.is(value)) {
        buffer.putUint8(143);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserProfile.is(value)) {
        buffer.putUint8(144);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.is(value)) {
        buffer.putUint8(145);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$0.AuthPigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$0.PigeonActionCodeInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$0.PigeonActionCodeInfoData.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon$0.PigeonActionCodeSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon$0.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon$0.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon$0.PigeonFirebaseAuthSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon$0.PigeonIdTokenResult.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon$0.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon$0.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon$0.PigeonSignInProvider.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon$0.PigeonTotpSecret.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 141:
          {
            return messages$46pigeon$0.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 142:
          {
            return messages$46pigeon$0.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 143:
          {
            return messages$46pigeon$0.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 144:
          {
            return messages$46pigeon$0.PigeonUserProfile.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 145:
          {
            return messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$0._FirebaseAuthUserHostApiCodec.new = function() {
    messages$46pigeon$0._FirebaseAuthUserHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$0._FirebaseAuthUserHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$0._FirebaseAuthUserHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$0._FirebaseAuthUserHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$0._FirebaseAuthUserHostApiCodec, I[127]);
  messages$46pigeon$0.FirebaseAuthUserHostApi = class FirebaseAuthUserHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.FirebaseAuthUserHostApi.new({binaryMessenger: binaryMessenger});
    }
    delete(arg_app) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.delete", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getIdToken(arg_app, arg_forceRefresh) {
      return async.async(messages$46pigeon$0.PigeonIdTokenResult, (function* getIdToken() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.getIdToken", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_forceRefresh])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonIdTokenResultN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    linkWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* linkWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.linkWithCredential", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    linkWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* linkWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.linkWithProvider", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    reauthenticateWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* reauthenticateWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.reauthenticateWithCredential", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    reauthenticateWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* reauthenticateWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.reauthenticateWithProvider", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    reload(arg_app) {
      return async.async(messages$46pigeon$0.PigeonUserDetails, (function* reload() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.reload", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    sendEmailVerification(arg_app, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendEmailVerification() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.sendEmailVerification", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    unlink(arg_app, arg_providerId) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* unlink() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.unlink", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_providerId])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updateEmail(arg_app, arg_newEmail) {
      return async.async(messages$46pigeon$0.PigeonUserDetails, (function* updateEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updateEmail", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newEmail])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updatePassword(arg_app, arg_newPassword) {
      return async.async(messages$46pigeon$0.PigeonUserDetails, (function* updatePassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updatePassword", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newPassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updatePhoneNumber(arg_app, arg_input) {
      return async.async(messages$46pigeon$0.PigeonUserDetails, (function* updatePhoneNumber() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updatePhoneNumber", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updateProfile(arg_app, arg_profile) {
      return async.async(messages$46pigeon$0.PigeonUserDetails, (function* updateProfile() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updateProfile", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_profile])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(arg_app, arg_newEmail, arg_actionCodeSettings) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.verifyBeforeUpdateEmail", messages$46pigeon$0.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newEmail, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.FirebaseAuthUserHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.FirebaseAuthUserHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$0.FirebaseAuthUserHostApi);
  dart.addTypeCaches(messages$46pigeon$0.FirebaseAuthUserHostApi);
  dart.setMethodSignature(messages$46pigeon$0.FirebaseAuthUserHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.FirebaseAuthUserHostApi.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp]),
    getIdToken: dart.fnType(async.Future$(messages$46pigeon$0.PigeonIdTokenResult), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.bool]),
    linkWithCredential: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    linkWithProvider: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, messages$46pigeon$0.PigeonSignInProvider]),
    reauthenticateWithCredential: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    reauthenticateWithProvider: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, messages$46pigeon$0.PigeonSignInProvider]),
    reload: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserDetails), [messages$46pigeon$0.AuthPigeonFirebaseApp]),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, dart.nullable(messages$46pigeon$0.PigeonActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    updateEmail: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserDetails), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    updatePassword: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserDetails), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserDetails), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    updateProfile: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserDetails), [messages$46pigeon$0.AuthPigeonFirebaseApp, messages$46pigeon$0.PigeonUserProfile]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, dart.nullable(messages$46pigeon$0.PigeonActionCodeSettings)])
  }));
  dart.setLibraryUri(messages$46pigeon$0.FirebaseAuthUserHostApi, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.FirebaseAuthUserHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.FirebaseAuthUserHostApi.__proto__),
    [S._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.FirebaseAuthUserHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.FirebaseAuthUserHostApi, {
    /*messages$46pigeon$0.FirebaseAuthUserHostApi.codec*/get codec() {
      return C[104] || CT.C104;
    }
  }, false);
  messages$46pigeon$0._MultiFactorUserHostApiCodec = class _MultiFactorUserHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$0._MultiFactorUserHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$0.AuthPigeonFirebaseApp.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$0.AuthPigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$0.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$0.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$0._MultiFactorUserHostApiCodec.new = function() {
    messages$46pigeon$0._MultiFactorUserHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$0._MultiFactorUserHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$0._MultiFactorUserHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$0._MultiFactorUserHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$0._MultiFactorUserHostApiCodec, I[127]);
  messages$46pigeon$0.MultiFactorUserHostApi = class MultiFactorUserHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.MultiFactorUserHostApi.new({binaryMessenger: binaryMessenger});
    }
    enrollPhone(arg_app, arg_assertion, arg_displayName) {
      return async.async(dart.void, (function* enrollPhone() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.enrollPhone", messages$46pigeon$0.MultiFactorUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_assertion, arg_displayName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    enrollTotp(arg_app, arg_assertionId, arg_displayName) {
      return async.async(dart.void, (function* enrollTotp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.enrollTotp", messages$46pigeon$0.MultiFactorUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_assertionId, arg_displayName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getSession(arg_app) {
      return async.async(messages$46pigeon$0.PigeonMultiFactorSession, (function* getSession() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.getSession", messages$46pigeon$0.MultiFactorUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonMultiFactorSessionN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    unenroll(arg_app, arg_factorUid) {
      return async.async(dart.void, (function* unenroll() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.unenroll", messages$46pigeon$0.MultiFactorUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_factorUid])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getEnrolledFactors(arg_app) {
      return async.async(T$.ListOfPigeonMultiFactorInfoN(), (function* getEnrolledFactors() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.getEnrolledFactors", messages$46pigeon$0.MultiFactorUserHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.PigeonMultiFactorInfoN());
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.MultiFactorUserHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.MultiFactorUserHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$0.MultiFactorUserHostApi);
  dart.addTypeCaches(messages$46pigeon$0.MultiFactorUserHostApi);
  dart.setMethodSignature(messages$46pigeon$0.MultiFactorUserHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.MultiFactorUserHostApi.__proto__),
    enrollPhone: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, messages$46pigeon$0.PigeonPhoneMultiFactorAssertion, dart.nullable(core.String)]),
    enrollTotp: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String, dart.nullable(core.String)]),
    getSession: dart.fnType(async.Future$(messages$46pigeon$0.PigeonMultiFactorSession), [messages$46pigeon$0.AuthPigeonFirebaseApp]),
    unenroll: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.AuthPigeonFirebaseApp, core.String]),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$0.PigeonMultiFactorInfo))), [messages$46pigeon$0.AuthPigeonFirebaseApp])
  }));
  dart.setLibraryUri(messages$46pigeon$0.MultiFactorUserHostApi, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.MultiFactorUserHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.MultiFactorUserHostApi.__proto__),
    [S._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.MultiFactorUserHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.MultiFactorUserHostApi, {
    /*messages$46pigeon$0.MultiFactorUserHostApi.codec*/get codec() {
      return C[105] || CT.C105;
    }
  }, false);
  messages$46pigeon$0._MultiFactoResolverHostApiCodec = class _MultiFactoResolverHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$0._MultiFactoResolverHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$0.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonAuthCredential.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserCredential.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserDetails.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonUserInfo.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$0.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$0.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon$0.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon$0.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon$0.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$0._MultiFactoResolverHostApiCodec.new = function() {
    messages$46pigeon$0._MultiFactoResolverHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$0._MultiFactoResolverHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$0._MultiFactoResolverHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$0._MultiFactoResolverHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$0._MultiFactoResolverHostApiCodec, I[127]);
  messages$46pigeon$0.MultiFactoResolverHostApi = class MultiFactoResolverHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.MultiFactoResolverHostApi.new({binaryMessenger: binaryMessenger});
    }
    resolveSignIn(arg_resolverId, arg_assertion, arg_totpAssertionId) {
      return async.async(messages$46pigeon$0.PigeonUserCredential, (function* resolveSignIn() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactoResolverHostApi.resolveSignIn", messages$46pigeon$0.MultiFactoResolverHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_resolverId, arg_assertion, arg_totpAssertionId])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.MultiFactoResolverHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.MultiFactoResolverHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$0.MultiFactoResolverHostApi);
  dart.addTypeCaches(messages$46pigeon$0.MultiFactoResolverHostApi);
  dart.setMethodSignature(messages$46pigeon$0.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.MultiFactoResolverHostApi.__proto__),
    resolveSignIn: dart.fnType(async.Future$(messages$46pigeon$0.PigeonUserCredential), [core.String, dart.nullable(messages$46pigeon$0.PigeonPhoneMultiFactorAssertion), dart.nullable(core.String)])
  }));
  dart.setLibraryUri(messages$46pigeon$0.MultiFactoResolverHostApi, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.MultiFactoResolverHostApi.__proto__),
    [S._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.MultiFactoResolverHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.MultiFactoResolverHostApi, {
    /*messages$46pigeon$0.MultiFactoResolverHostApi.codec*/get codec() {
      return C[106] || CT.C106;
    }
  }, false);
  messages$46pigeon$0._MultiFactorTotpHostApiCodec = class _MultiFactorTotpHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$0._MultiFactorTotpHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$0.PigeonTotpSecret.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$0.PigeonTotpSecret.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$0._MultiFactorTotpHostApiCodec.new = function() {
    messages$46pigeon$0._MultiFactorTotpHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$0._MultiFactorTotpHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$0._MultiFactorTotpHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$0._MultiFactorTotpHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$0._MultiFactorTotpHostApiCodec, I[127]);
  messages$46pigeon$0.MultiFactorTotpHostApi = class MultiFactorTotpHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.MultiFactorTotpHostApi.new({binaryMessenger: binaryMessenger});
    }
    generateSecret(arg_sessionId) {
      return async.async(messages$46pigeon$0.PigeonTotpSecret, (function* generateSecret() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpHostApi.generateSecret", messages$46pigeon$0.MultiFactorTotpHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_sessionId])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonTotpSecretN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    getAssertionForEnrollment(arg_secretKey, arg_oneTimePassword) {
      return async.async(core.String, (function* getAssertionForEnrollment() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpHostApi.getAssertionForEnrollment", messages$46pigeon$0.MultiFactorTotpHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_secretKey, arg_oneTimePassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    getAssertionForSignIn(arg_enrollmentId, arg_oneTimePassword) {
      return async.async(core.String, (function* getAssertionForSignIn() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpHostApi.getAssertionForSignIn", messages$46pigeon$0.MultiFactorTotpHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_enrollmentId, arg_oneTimePassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.MultiFactorTotpHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.MultiFactorTotpHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$0.MultiFactorTotpHostApi);
  dart.addTypeCaches(messages$46pigeon$0.MultiFactorTotpHostApi);
  dart.setMethodSignature(messages$46pigeon$0.MultiFactorTotpHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.MultiFactorTotpHostApi.__proto__),
    generateSecret: dart.fnType(async.Future$(messages$46pigeon$0.PigeonTotpSecret), [core.String]),
    getAssertionForEnrollment: dart.fnType(async.Future$(core.String), [core.String, core.String]),
    getAssertionForSignIn: dart.fnType(async.Future$(core.String), [core.String, core.String])
  }));
  dart.setLibraryUri(messages$46pigeon$0.MultiFactorTotpHostApi, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.MultiFactorTotpHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.MultiFactorTotpHostApi.__proto__),
    [S._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.MultiFactorTotpHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.MultiFactorTotpHostApi, {
    /*messages$46pigeon$0.MultiFactorTotpHostApi.codec*/get codec() {
      return C[107] || CT.C107;
    }
  }, false);
  messages$46pigeon$0.MultiFactorTotpSecretHostApi = class MultiFactorTotpSecretHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.MultiFactorTotpSecretHostApi.new({binaryMessenger: binaryMessenger});
    }
    generateQrCodeUrl(arg_secretKey, arg_accountName, arg_issuer) {
      return async.async(core.String, (function* generateQrCodeUrl() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpSecretHostApi.generateQrCodeUrl", messages$46pigeon$0.MultiFactorTotpSecretHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_secretKey, arg_accountName, arg_issuer])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    openInOtpApp(arg_secretKey, arg_qrCodeUrl) {
      return async.async(dart.void, (function* openInOtpApp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpSecretHostApi.openInOtpApp", messages$46pigeon$0.MultiFactorTotpSecretHostApi.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_secretKey, arg_qrCodeUrl])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.MultiFactorTotpSecretHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.MultiFactorTotpSecretHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$0.MultiFactorTotpSecretHostApi);
  dart.addTypeCaches(messages$46pigeon$0.MultiFactorTotpSecretHostApi);
  dart.setMethodSignature(messages$46pigeon$0.MultiFactorTotpSecretHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.MultiFactorTotpSecretHostApi.__proto__),
    generateQrCodeUrl: dart.fnType(async.Future$(core.String), [core.String, dart.nullable(core.String), dart.nullable(core.String)]),
    openInOtpApp: dart.fnType(async.Future$(dart.void), [core.String, core.String])
  }));
  dart.setLibraryUri(messages$46pigeon$0.MultiFactorTotpSecretHostApi, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.MultiFactorTotpSecretHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.MultiFactorTotpSecretHostApi.__proto__),
    [S._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.MultiFactorTotpSecretHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.MultiFactorTotpSecretHostApi, {
    /*messages$46pigeon$0.MultiFactorTotpSecretHostApi.codec*/get codec() {
      return C[52] || CT.C52;
    }
  }, false);
  messages$46pigeon$0._GenerateInterfacesCodec = class _GenerateInterfacesCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$0._GenerateInterfacesCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$0.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$0.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$0._GenerateInterfacesCodec.new = function() {
    messages$46pigeon$0._GenerateInterfacesCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$0._GenerateInterfacesCodec.prototype;
  dart.addTypeTests(messages$46pigeon$0._GenerateInterfacesCodec);
  dart.addTypeCaches(messages$46pigeon$0._GenerateInterfacesCodec);
  dart.setLibraryUri(messages$46pigeon$0._GenerateInterfacesCodec, I[127]);
  messages$46pigeon$0.GenerateInterfaces = class GenerateInterfaces extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.GenerateInterfaces.new({binaryMessenger: binaryMessenger});
    }
    pigeonInterface(arg_info) {
      return async.async(dart.void, (function* pigeonInterface() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.GenerateInterfaces.pigeonInterface", messages$46pigeon$0.GenerateInterfaces.codec, {binaryMessenger: this[S._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_info])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.GenerateInterfaces.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.GenerateInterfaces.prototype;
  dart.addTypeTests(messages$46pigeon$0.GenerateInterfaces);
  dart.addTypeCaches(messages$46pigeon$0.GenerateInterfaces);
  dart.setMethodSignature(messages$46pigeon$0.GenerateInterfaces, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.GenerateInterfaces.__proto__),
    pigeonInterface: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.PigeonMultiFactorInfo])
  }));
  dart.setLibraryUri(messages$46pigeon$0.GenerateInterfaces, I[127]);
  dart.setFieldSignature(messages$46pigeon$0.GenerateInterfaces, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.GenerateInterfaces.__proto__),
    [S._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.GenerateInterfaces, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.GenerateInterfaces, {
    /*messages$46pigeon$0.GenerateInterfaces.codec*/get codec() {
      return C[108] || CT.C108;
    }
  }, false);
  platform_interface_multi_factor.MultiFactorInfo = class MultiFactorInfo extends core.Object {
    get displayName() {
      return this[S.displayName$3];
    }
    set displayName(value) {
      super.displayName = value;
    }
    get enrollmentTimestamp() {
      return this[S.enrollmentTimestamp$1];
    }
    set enrollmentTimestamp(value) {
      super.enrollmentTimestamp = value;
    }
    get factorId() {
      return this[S.factorId$1];
    }
    set factorId(value) {
      super.factorId = value;
    }
    get uid() {
      return this[S.uid$2];
    }
    set uid(value) {
      super.uid = value;
    }
    static ['_#new#tearOff'](opts) {
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      return new platform_interface_multi_factor.MultiFactorInfo.new({factorId: factorId, enrollmentTimestamp: enrollmentTimestamp, displayName: displayName, uid: uid});
    }
    toString() {
      return "MultiFactorInfo{enrollmentTimestamp: " + dart.str(this.enrollmentTimestamp) + ", displayName: " + dart.str(this.displayName) + ", uid: " + this.uid + "}";
    }
  };
  (platform_interface_multi_factor.MultiFactorInfo.new = function(opts) {
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    this[S.factorId$1] = factorId;
    this[S.enrollmentTimestamp$1] = enrollmentTimestamp;
    this[S.displayName$3] = displayName;
    this[S.uid$2] = uid;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorInfo, I[68]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorInfo.__proto__),
    displayName: dart.finalFieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.finalFieldType(core.double),
    factorId: dart.finalFieldType(core.String),
    uid: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(platform_interface_multi_factor.MultiFactorInfo, ['toString']);
  platform_interface_multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends platform_interface_multi_factor.MultiFactorInfo {
    get phoneNumber() {
      return this[S.phoneNumber$5];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[S.phoneNumber$5] = phoneNumber;
    platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__.new.call(this, {displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorInfo, I[68]);
  dart.setFieldSignature(platform_interface_multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: dart.finalFieldType(core.String)
  }));
  platform_interface_multi_factor.TotpMultiFactorInfo = class TotpMultiFactorInfo extends platform_interface_multi_factor.MultiFactorInfo {
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      return new platform_interface_multi_factor.TotpMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    }
  };
  (platform_interface_multi_factor.TotpMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    platform_interface_multi_factor.TotpMultiFactorInfo.__proto__.new.call(this, {displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    ;
  }).prototype = platform_interface_multi_factor.TotpMultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.TotpMultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.TotpMultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.TotpMultiFactorInfo, I[68]);
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize = class RecaptchaVerifierSize extends core._Enum {
    [S$._enumToString]() {
      return "RecaptchaVerifierSize." + this[S$._name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, I[73]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ['values', 'normal', 'compact']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.values*/get values() {
      return C[109] || CT.C109;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.normal*/get normal() {
      return C[18] || CT.C18;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.compact*/get compact() {
      return C[37] || CT.C37;
    }
  }, false);
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme = class RecaptchaVerifierTheme extends core._Enum {
    [S$._enumToString]() {
      return "RecaptchaVerifierTheme." + this[S$._name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, I[73]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ['values', 'light', 'dark']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.values*/get values() {
      return C[110] || CT.C110;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.light*/get light() {
      return C[19] || CT.C19;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.dark*/get dark() {
      return C[38] || CT.C38;
    }
  }, false);
  apple_auth.AppleAuthProvider = class AppleAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new apple_auth.AppleAuthProvider.new();
    }
    static credential(accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
    static get APPLE_SIGN_IN_METHOD() {
      return "apple.com";
    }
    static get PROVIDER_ID() {
      return "apple.com";
    }
    get scopes() {
      return this[S._scopes];
    }
    get parameters() {
      return this[S._parameters];
    }
    addScope(scope) {
      this[S._scopes][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters] = customOAuthParameters;
      return this;
    }
  };
  (apple_auth.AppleAuthProvider.new = function() {
    this[S._scopes] = T$.JSArrayOfString().of([]);
    this[S._parameters] = new (T$.IdentityMapOfString$String()).new();
    apple_auth.AppleAuthProvider.__proto__.new.call(this, "apple.com");
    ;
  }).prototype = apple_auth.AppleAuthProvider.prototype;
  dart.addTypeTests(apple_auth.AppleAuthProvider);
  dart.addTypeCaches(apple_auth.AppleAuthProvider);
  dart.setMethodSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getMethods(apple_auth.AppleAuthProvider.__proto__),
    addScope: dart.fnType(apple_auth.AppleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(apple_auth.AppleAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(apple_auth.AppleAuthProvider, () => ['credential']);
  dart.setGetterSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getGetters(apple_auth.AppleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(apple_auth.AppleAuthProvider, () => ['APPLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(apple_auth.AppleAuthProvider, I[128]);
  dart.setFieldSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getFields(apple_auth.AppleAuthProvider.__proto__),
    [S._scopes]: dart.fieldType(core.List$(core.String)),
    [S._parameters]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  oauth.OAuthCredential = class OAuthCredential extends auth_credential.AuthCredential {
    get idToken() {
      return this[S.idToken];
    }
    set idToken(value) {
      super.idToken = value;
    }
    get secret() {
      return this[S.secret];
    }
    set secret(value) {
      super.secret = value;
    }
    get rawNonce() {
      return this[S.rawNonce];
    }
    set rawNonce(value) {
      super.rawNonce = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      return new oauth.OAuthCredential.new({providerId: providerId, signInMethod: signInMethod, accessToken: accessToken, idToken: idToken, secret: secret, rawNonce: rawNonce});
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "idToken", this.idToken, "accessToken", this.accessToken, "secret", this.secret, "rawNonce", this.rawNonce]);
    }
  };
  (oauth.OAuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
    this[S.idToken] = idToken;
    this[S.secret] = secret;
    this[S.rawNonce] = rawNonce;
    oauth.OAuthCredential.__proto__.new.call(this, {providerId: providerId, signInMethod: signInMethod, accessToken: accessToken});
    ;
  }).prototype = oauth.OAuthCredential.prototype;
  dart.addTypeTests(oauth.OAuthCredential);
  dart.addTypeCaches(oauth.OAuthCredential);
  dart.setMethodSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getMethods(oauth.OAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setLibraryUri(oauth.OAuthCredential, I[129]);
  dart.setFieldSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getFields(oauth.OAuthCredential.__proto__),
    idToken: dart.finalFieldType(dart.nullable(core.String)),
    secret: dart.finalFieldType(dart.nullable(core.String)),
    rawNonce: dart.finalFieldType(dart.nullable(core.String))
  }));
  apple_auth.AppleAuthCredential = class AppleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
  };
  (apple_auth.AppleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    apple_auth.AppleAuthCredential.__proto__.new.call(this, {providerId: "apple.com", signInMethod: "apple.com", accessToken: accessToken});
    ;
  }).prototype = apple_auth.AppleAuthCredential.prototype;
  dart.addTypeTests(apple_auth.AppleAuthCredential);
  dart.addTypeCaches(apple_auth.AppleAuthCredential);
  dart.setStaticMethodSignature(apple_auth.AppleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(apple_auth.AppleAuthCredential, I[128]);
  dart.defineLazy(apple_auth, {
    /*apple_auth._kProviderId*/get _kProviderId() {
      return "apple.com";
    }
  }, false);
  email_auth.EmailAuthProvider = class EmailAuthProvider extends auth_provider$.AuthProvider {
    static get EMAIL_LINK_SIGN_IN_METHOD() {
      return "emailLink";
    }
    static get EMAIL_PASSWORD_SIGN_IN_METHOD() {
      return "password";
    }
    static get PROVIDER_ID() {
      return "password";
    }
    static credential(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static credentialWithLink(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
  };
  (email_auth.EmailAuthProvider.new = function() {
    email_auth.EmailAuthProvider.__proto__.new.call(this, "password");
    ;
  }).prototype = email_auth.EmailAuthProvider.prototype;
  dart.addTypeTests(email_auth.EmailAuthProvider);
  dart.addTypeCaches(email_auth.EmailAuthProvider);
  dart.setStaticMethodSignature(email_auth.EmailAuthProvider, () => ['credential', 'credentialWithLink']);
  dart.setStaticGetterSignature(email_auth.EmailAuthProvider, () => ['EMAIL_LINK_SIGN_IN_METHOD', 'EMAIL_PASSWORD_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(email_auth.EmailAuthProvider, I[130]);
  email_auth.EmailAuthCredential = class EmailAuthCredential extends auth_credential.AuthCredential {
    get email() {
      return this[S.email$4];
    }
    set email(value) {
      super.email = value;
    }
    get password() {
      return this[S.password];
    }
    set password(value) {
      super.password = value;
    }
    get emailLink() {
      return this[S.emailLink];
    }
    set emailLink(value) {
      super.emailLink = value;
    }
    static ['_#_#tearOff'](_signInMethod, opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return new email_auth.EmailAuthCredential.__(_signInMethod, {email: email, password: password, emailLink: emailLink});
    }
    static _credential(email, password) {
      return new email_auth.EmailAuthCredential.__("password", {email: email, password: password});
    }
    static ['_#_credential#tearOff'](email, password) {
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static _credentialWithLink(email, emailLink) {
      return new email_auth.EmailAuthCredential.__("emailLink", {email: email, emailLink: emailLink});
    }
    static ['_#_credentialWithLink#tearOff'](email, emailLink) {
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "email", this.email, "emailLink", this.emailLink, "secret", this.password]);
    }
  };
  (email_auth.EmailAuthCredential.__ = function(_signInMethod, opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let password = opts && 'password' in opts ? opts.password : null;
    let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
    this[S.email$4] = email;
    this[S.password] = password;
    this[S.emailLink] = emailLink;
    email_auth.EmailAuthCredential.__proto__.new.call(this, {providerId: "password", signInMethod: _signInMethod});
    ;
  }).prototype = email_auth.EmailAuthCredential.prototype;
  dart.addTypeTests(email_auth.EmailAuthCredential);
  dart.addTypeCaches(email_auth.EmailAuthCredential);
  dart.setMethodSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getMethods(email_auth.EmailAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setStaticMethodSignature(email_auth.EmailAuthCredential, () => ['_credential', '_credentialWithLink']);
  dart.setLibraryUri(email_auth.EmailAuthCredential, I[130]);
  dart.setFieldSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getFields(email_auth.EmailAuthCredential.__proto__),
    email: dart.finalFieldType(core.String),
    password: dart.finalFieldType(dart.nullable(core.String)),
    emailLink: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(email_auth, {
    /*email_auth._kLinkProviderId*/get _kLinkProviderId() {
      return "emailLink";
    },
    /*email_auth._kProviderId*/get _kProviderId() {
      return "password";
    }
  }, false);
  facebook_auth.FacebookAuthProvider = class FacebookAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new facebook_auth.FacebookAuthProvider.new();
    }
    static credential(accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
    static get FACEBOOK_SIGN_IN_METHOD() {
      return "facebook.com";
    }
    static get PROVIDER_ID() {
      return "facebook.com";
    }
    get scopes() {
      return this[S._scopes$1];
    }
    get parameters() {
      return this[S._parameters$1];
    }
    addScope(scope) {
      this[S._scopes$1][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters$1] = customOAuthParameters;
      return this;
    }
  };
  (facebook_auth.FacebookAuthProvider.new = function() {
    this[S._scopes$1] = T$.JSArrayOfString().of([]);
    this[S._parameters$1] = new _js_helper.LinkedMap.new();
    facebook_auth.FacebookAuthProvider.__proto__.new.call(this, "facebook.com");
    ;
  }).prototype = facebook_auth.FacebookAuthProvider.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthProvider);
  dart.addTypeCaches(facebook_auth.FacebookAuthProvider);
  dart.setMethodSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(facebook_auth.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(facebook_auth.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(facebook_auth.FacebookAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthProvider, () => ['credential']);
  dart.setGetterSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getGetters(facebook_auth.FacebookAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(facebook_auth.FacebookAuthProvider, () => ['FACEBOOK_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(facebook_auth.FacebookAuthProvider, I[131]);
  dart.setFieldSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getFields(facebook_auth.FacebookAuthProvider.__proto__),
    [S._scopes$1]: dart.fieldType(core.List$(core.String)),
    [S._parameters$1]: dart.fieldType(core.Map)
  }));
  facebook_auth.FacebookAuthCredential = class FacebookAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
  };
  (facebook_auth.FacebookAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    facebook_auth.FacebookAuthCredential.__proto__.new.call(this, {providerId: "facebook.com", signInMethod: "facebook.com", accessToken: accessToken});
    ;
  }).prototype = facebook_auth.FacebookAuthCredential.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthCredential);
  dart.addTypeCaches(facebook_auth.FacebookAuthCredential);
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthCredential, () => ['_credential']);
  dart.setLibraryUri(facebook_auth.FacebookAuthCredential, I[131]);
  dart.defineLazy(facebook_auth, {
    /*facebook_auth._kProviderId*/get _kProviderId() {
      return "facebook.com";
    }
  }, false);
  github_auth.GithubAuthProvider = class GithubAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new github_auth.GithubAuthProvider.new();
    }
    static credential(accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
    static get GITHUB_SIGN_IN_METHOD() {
      return "github.com";
    }
    static get PROVIDER_ID() {
      return "github.com";
    }
    get scopes() {
      return this[S._scopes$2];
    }
    get parameters() {
      return this[S._parameters$2];
    }
    addScope(scope) {
      this[S._scopes$2][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters$2] = customOAuthParameters;
      return this;
    }
  };
  (github_auth.GithubAuthProvider.new = function() {
    this[S._scopes$2] = T$.JSArrayOfString().of([]);
    this[S._parameters$2] = new (T$.IdentityMapOfString$String()).new();
    github_auth.GithubAuthProvider.__proto__.new.call(this, "github.com");
    ;
  }).prototype = github_auth.GithubAuthProvider.prototype;
  dart.addTypeTests(github_auth.GithubAuthProvider);
  dart.addTypeCaches(github_auth.GithubAuthProvider);
  dart.setMethodSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(github_auth.GithubAuthProvider.__proto__),
    addScope: dart.fnType(github_auth.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(github_auth.GithubAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(github_auth.GithubAuthProvider, () => ['credential']);
  dart.setGetterSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getGetters(github_auth.GithubAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(github_auth.GithubAuthProvider, () => ['GITHUB_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(github_auth.GithubAuthProvider, I[132]);
  dart.setFieldSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getFields(github_auth.GithubAuthProvider.__proto__),
    [S._scopes$2]: dart.fieldType(core.List$(core.String)),
    [S._parameters$2]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  github_auth.GithubAuthCredential = class GithubAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
  };
  (github_auth.GithubAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    github_auth.GithubAuthCredential.__proto__.new.call(this, {providerId: "github.com", signInMethod: "github.com", accessToken: accessToken});
    ;
  }).prototype = github_auth.GithubAuthCredential.prototype;
  dart.addTypeTests(github_auth.GithubAuthCredential);
  dart.addTypeCaches(github_auth.GithubAuthCredential);
  dart.setStaticMethodSignature(github_auth.GithubAuthCredential, () => ['_credential']);
  dart.setLibraryUri(github_auth.GithubAuthCredential, I[132]);
  dart.defineLazy(github_auth, {
    /*github_auth._kProviderId*/get _kProviderId() {
      return "github.com";
    }
  }, false);
  google_auth.GoogleAuthProvider = class GoogleAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new google_auth.GoogleAuthProvider.new();
    }
    static credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      if (!(accessToken != null || idToken != null)) dart.assertFailed("At least one of ID token and access token is required", I[133], 43, 12, "accessToken != null || idToken != null");
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
    static get GOOGLE_SIGN_IN_METHOD() {
      return "google.com";
    }
    static get PROVIDER_ID() {
      return "google.com";
    }
    get scopes() {
      return this[S._scopes$3];
    }
    get parameters() {
      return this[S._parameters$3];
    }
    addScope(scope) {
      this[S._scopes$3][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters$3] = customOAuthParameters;
      return this;
    }
  };
  (google_auth.GoogleAuthProvider.new = function() {
    this[S._scopes$3] = T$.JSArrayOfString().of([]);
    this[S._parameters$3] = new _js_helper.LinkedMap.new();
    google_auth.GoogleAuthProvider.__proto__.new.call(this, "google.com");
    ;
  }).prototype = google_auth.GoogleAuthProvider.prototype;
  dart.addTypeTests(google_auth.GoogleAuthProvider);
  dart.addTypeCaches(google_auth.GoogleAuthProvider);
  dart.setMethodSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(google_auth.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(google_auth.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(google_auth.GoogleAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(google_auth.GoogleAuthProvider, () => ['credential']);
  dart.setGetterSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getGetters(google_auth.GoogleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(google_auth.GoogleAuthProvider, () => ['GOOGLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(google_auth.GoogleAuthProvider, I[134]);
  dart.setFieldSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getFields(google_auth.GoogleAuthProvider.__proto__),
    [S._scopes$3]: dart.fieldType(core.List$(core.String)),
    [S._parameters$3]: dart.fieldType(core.Map)
  }));
  google_auth.GoogleAuthCredential = class GoogleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static _credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static ['_#_credential#tearOff'](opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
  };
  (google_auth.GoogleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    google_auth.GoogleAuthCredential.__proto__.new.call(this, {providerId: "google.com", signInMethod: "google.com", accessToken: accessToken, idToken: idToken});
    ;
  }).prototype = google_auth.GoogleAuthCredential.prototype;
  dart.addTypeTests(google_auth.GoogleAuthCredential);
  dart.addTypeCaches(google_auth.GoogleAuthCredential);
  dart.setStaticMethodSignature(google_auth.GoogleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(google_auth.GoogleAuthCredential, I[134]);
  dart.defineLazy(google_auth, {
    /*google_auth._kProviderId*/get _kProviderId() {
      return "google.com";
    }
  }, false);
  microsoft_auth.MicrosoftAuthProvider = class MicrosoftAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new microsoft_auth.MicrosoftAuthProvider.new();
    }
    static credential(accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
    static get MICROSOFT_SIGN_IN_METHOD() {
      return "microsoft.com";
    }
    static get PROVIDER_ID() {
      return "microsoft.com";
    }
    get scopes() {
      return this[S._scopes$4];
    }
    get parameters() {
      return this[S._parameters$4];
    }
    addScope(scope) {
      this[S._scopes$4][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters$4] = customOAuthParameters;
      return this;
    }
  };
  (microsoft_auth.MicrosoftAuthProvider.new = function() {
    this[S._scopes$4] = T$.JSArrayOfString().of([]);
    this[S._parameters$4] = new (T$.IdentityMapOfString$String()).new();
    microsoft_auth.MicrosoftAuthProvider.__proto__.new.call(this, "microsoft.com");
    ;
  }).prototype = microsoft_auth.MicrosoftAuthProvider.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthProvider);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthProvider);
  dart.setMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getMethods(microsoft_auth.MicrosoftAuthProvider.__proto__),
    addScope: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ['credential']);
  dart.setGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getGetters(microsoft_auth.MicrosoftAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ['MICROSOFT_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthProvider, I[135]);
  dart.setFieldSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getFields(microsoft_auth.MicrosoftAuthProvider.__proto__),
    [S._scopes$4]: dart.fieldType(core.List$(core.String)),
    [S._parameters$4]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  microsoft_auth.MicrosoftAuthCredential = class MicrosoftAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
  };
  (microsoft_auth.MicrosoftAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    microsoft_auth.MicrosoftAuthCredential.__proto__.new.call(this, {providerId: "microsoft.com", signInMethod: "microsoft.com", accessToken: accessToken});
    ;
  }).prototype = microsoft_auth.MicrosoftAuthCredential.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthCredential);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthCredential);
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthCredential, () => ['_credential']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthCredential, I[135]);
  dart.defineLazy(microsoft_auth, {
    /*microsoft_auth._kProviderId*/get _kProviderId() {
      return "microsoft.com";
    }
  }, false);
  oauth.OAuthProvider = class OAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new oauth.OAuthProvider.new(providerId);
    }
    get scopes() {
      return this[S._scopes$5];
    }
    get parameters() {
      return this[S._parameters$5];
    }
    setScopes(scopes) {
      this[S._scopes$5] = scopes;
      return this;
    }
    addScope(scope) {
      this[S._scopes$5][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters$5] = customOAuthParameters;
      return this;
    }
    credential(opts) {
      let t188;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      return new oauth.OAuthCredential.new({providerId: this.providerId, signInMethod: (t188 = signInMethod, t188 == null ? "oauth" : t188), accessToken: accessToken, secret: secret, idToken: idToken, rawNonce: rawNonce});
    }
  };
  (oauth.OAuthProvider.new = function(providerId) {
    this[S._scopes$5] = T$.JSArrayOfString().of([]);
    this[S._parameters$5] = new (T$.IdentityMapOfString$String()).new();
    oauth.OAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = oauth.OAuthProvider.prototype;
  dart.addTypeTests(oauth.OAuthProvider);
  dart.addTypeCaches(oauth.OAuthProvider);
  dart.setMethodSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getMethods(oauth.OAuthProvider.__proto__),
    setScopes: dart.fnType(oauth.OAuthProvider, [core.List$(core.String)]),
    addScope: dart.fnType(oauth.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(oauth.OAuthProvider, [core.Map$(core.String, core.String)]),
    credential: dart.fnType(oauth.OAuthCredential, [], {accessToken: dart.nullable(core.String), idToken: dart.nullable(core.String), rawNonce: dart.nullable(core.String), secret: dart.nullable(core.String), signInMethod: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getGetters(oauth.OAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setLibraryUri(oauth.OAuthProvider, I[129]);
  dart.setFieldSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getFields(oauth.OAuthProvider.__proto__),
    [S._scopes$5]: dart.fieldType(core.List$(core.String)),
    [S._parameters$5]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  phone_auth.PhoneAuthProvider = class PhoneAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new phone_auth.PhoneAuthProvider.new();
    }
    static get PHONE_SIGN_IN_METHOD() {
      return "phone";
    }
    static get PROVIDER_ID() {
      return "phone";
    }
    static credential(opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
  };
  (phone_auth.PhoneAuthProvider.new = function() {
    phone_auth.PhoneAuthProvider.__proto__.new.call(this, "phone");
    ;
  }).prototype = phone_auth.PhoneAuthProvider.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthProvider);
  dart.addTypeCaches(phone_auth.PhoneAuthProvider);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthProvider, () => ['credential', 'credentialFromToken']);
  dart.setStaticGetterSignature(phone_auth.PhoneAuthProvider, () => ['PHONE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(phone_auth.PhoneAuthProvider, I[136]);
  phone_auth.PhoneAuthCredential = class PhoneAuthCredential extends auth_credential.AuthCredential {
    get verificationId() {
      return this[S.verificationId$2];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    get smsCode() {
      return this[S.smsCode$1];
    }
    set smsCode(value) {
      super.smsCode = value;
    }
    static ['_#_#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let token = opts && 'token' in opts ? opts.token : null;
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode, token: token});
    }
    static _credential(verificationId, smsCode) {
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode});
    }
    static ['_#_credential#tearOff'](verificationId, smsCode) {
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static _credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return new phone_auth.PhoneAuthCredential.__({token: token, smsCode: smsCode});
    }
    static ['_#_credentialFromToken#tearOff'](token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "verificationId", this.verificationId, "smsCode", this.smsCode, "token", this.token]);
    }
  };
  (phone_auth.PhoneAuthCredential.__ = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
    let token = opts && 'token' in opts ? opts.token : null;
    this[S.verificationId$2] = verificationId;
    this[S.smsCode$1] = smsCode;
    phone_auth.PhoneAuthCredential.__proto__.new.call(this, {providerId: "phone", signInMethod: "phone", token: token});
    ;
  }).prototype = phone_auth.PhoneAuthCredential.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthCredential);
  dart.addTypeCaches(phone_auth.PhoneAuthCredential);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthCredential, () => ['_credential', '_credentialFromToken']);
  dart.setLibraryUri(phone_auth.PhoneAuthCredential, I[136]);
  dart.setFieldSignature(phone_auth.PhoneAuthCredential, () => ({
    __proto__: dart.getFields(phone_auth.PhoneAuthCredential.__proto__),
    verificationId: dart.finalFieldType(dart.nullable(core.String)),
    smsCode: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(phone_auth, {
    /*phone_auth._kProviderId*/get _kProviderId() {
      return "phone";
    }
  }, false);
  saml_auth.SAMLAuthProvider = class SAMLAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new saml_auth.SAMLAuthProvider.new(providerId);
    }
  };
  (saml_auth.SAMLAuthProvider.new = function(providerId) {
    saml_auth.SAMLAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = saml_auth.SAMLAuthProvider.prototype;
  dart.addTypeTests(saml_auth.SAMLAuthProvider);
  dart.addTypeCaches(saml_auth.SAMLAuthProvider);
  dart.setLibraryUri(saml_auth.SAMLAuthProvider, I[137]);
  twitter_auth.TwitterAuthProvider = class TwitterAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new twitter_auth.TwitterAuthProvider.new();
    }
    static credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
    static get TWITTER_SIGN_IN_METHOD() {
      return "twitter.com";
    }
    static get PROVIDER_ID() {
      return "twitter.com";
    }
    get parameters() {
      return this[S._parameters$6];
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters$6] = customOAuthParameters;
      return this;
    }
  };
  (twitter_auth.TwitterAuthProvider.new = function() {
    this[S._parameters$6] = new (T$.IdentityMapOfString$String()).new();
    twitter_auth.TwitterAuthProvider.__proto__.new.call(this, "twitter.com");
    ;
  }).prototype = twitter_auth.TwitterAuthProvider.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthProvider);
  dart.addTypeCaches(twitter_auth.TwitterAuthProvider);
  dart.setMethodSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(twitter_auth.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(twitter_auth.TwitterAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthProvider, () => ['credential']);
  dart.setGetterSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getGetters(twitter_auth.TwitterAuthProvider.__proto__),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(twitter_auth.TwitterAuthProvider, () => ['TWITTER_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(twitter_auth.TwitterAuthProvider, I[138]);
  dart.setFieldSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getFields(twitter_auth.TwitterAuthProvider.__proto__),
    [S._parameters$6]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  twitter_auth.TwitterAuthCredential = class TwitterAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static _credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static ['_#_credential#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
  };
  (twitter_auth.TwitterAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    twitter_auth.TwitterAuthCredential.__proto__.new.call(this, {providerId: "twitter.com", signInMethod: "twitter.com", accessToken: accessToken, secret: secret});
    ;
  }).prototype = twitter_auth.TwitterAuthCredential.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthCredential);
  dart.addTypeCaches(twitter_auth.TwitterAuthCredential);
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthCredential, () => ['_credential']);
  dart.setLibraryUri(twitter_auth.TwitterAuthCredential, I[138]);
  dart.defineLazy(twitter_auth, {
    /*twitter_auth._kProviderId*/get _kProviderId() {
      return "twitter.com";
    }
  }, false);
  yahoo_auth.YahooAuthProvider = class YahooAuthProvider extends auth_provider$.AuthProvider {
    static ['_#new#tearOff']() {
      return new yahoo_auth.YahooAuthProvider.new();
    }
    static credential(accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
    static get YAHOO_SIGN_IN_METHOD() {
      return "yahoo.com";
    }
    static get PROVIDER_ID() {
      return "yahoo.com";
    }
    get scopes() {
      return this[S._scopes$6];
    }
    get parameters() {
      return this[S._parameters$7];
    }
    addScope(scope) {
      this[S._scopes$6][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S._parameters$7] = customOAuthParameters;
      return this;
    }
  };
  (yahoo_auth.YahooAuthProvider.new = function() {
    this[S._scopes$6] = T$.JSArrayOfString().of([]);
    this[S._parameters$7] = new _js_helper.LinkedMap.new();
    yahoo_auth.YahooAuthProvider.__proto__.new.call(this, "yahoo.com");
    ;
  }).prototype = yahoo_auth.YahooAuthProvider.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthProvider);
  dart.addTypeCaches(yahoo_auth.YahooAuthProvider);
  dart.setMethodSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getMethods(yahoo_auth.YahooAuthProvider.__proto__),
    addScope: dart.fnType(yahoo_auth.YahooAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(yahoo_auth.YahooAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthProvider, () => ['credential']);
  dart.setGetterSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getGetters(yahoo_auth.YahooAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(yahoo_auth.YahooAuthProvider, () => ['YAHOO_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(yahoo_auth.YahooAuthProvider, I[139]);
  dart.setFieldSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getFields(yahoo_auth.YahooAuthProvider.__proto__),
    [S._scopes$6]: dart.fieldType(core.List$(core.String)),
    [S._parameters$7]: dart.fieldType(core.Map)
  }));
  yahoo_auth.YahooAuthCredential = class YahooAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
  };
  (yahoo_auth.YahooAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    yahoo_auth.YahooAuthCredential.__proto__.new.call(this, {providerId: "yahoo.com", signInMethod: "yahoo.com", accessToken: accessToken});
    ;
  }).prototype = yahoo_auth.YahooAuthCredential.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthCredential);
  dart.addTypeCaches(yahoo_auth.YahooAuthCredential);
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthCredential, () => ['_credential']);
  dart.setLibraryUri(yahoo_auth.YahooAuthCredential, I[139]);
  dart.defineLazy(yahoo_auth, {
    /*yahoo_auth._kProviderId*/get _kProviderId() {
      return "yahoo.com";
    }
  }, false);
  types.Persistence = class Persistence extends core._Enum {
    [S$._enumToString]() {
      return "Persistence." + this[S$._name];
    }
  };
  (types.Persistence.new = function(index, name) {
    types.Persistence.__proto__.new.call(this, index, name);
    ;
  }).prototype = types.Persistence.prototype;
  dart.addTypeTests(types.Persistence);
  dart.addTypeCaches(types.Persistence);
  dart.setMethodSignature(types.Persistence, () => ({
    __proto__: dart.getMethods(types.Persistence.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(types.Persistence, I[140]);
  dart.setStaticFieldSignature(types.Persistence, () => ['values', 'LOCAL', 'INDEXED_DB', 'NONE', 'SESSION']);
  dart.defineLazy(types.Persistence, {
    /*types.Persistence.values*/get values() {
      return C[111] || CT.C111;
    },
    /*types.Persistence.LOCAL*/get LOCAL() {
      return C[44] || CT.C44;
    },
    /*types.Persistence.INDEXED_DB*/get INDEXED_DB() {
      return C[45] || CT.C45;
    },
    /*types.Persistence.NONE*/get NONE() {
      return C[47] || CT.C47;
    },
    /*types.Persistence.SESSION*/get SESSION() {
      return C[46] || CT.C46;
    }
  }, false);
  user_info.UserInfo = class UserInfo extends core.Object {
    static ['_#fromPigeon#tearOff'](_data) {
      return new user_info.UserInfo.fromPigeon(_data);
    }
    static ['_#fromJson#tearOff'](data) {
      return new user_info.UserInfo.fromJson(data);
    }
    get displayName() {
      return this[S._data$4].displayName;
    }
    get email() {
      return this[S._data$4].email;
    }
    get phoneNumber() {
      return this[S._data$4].phoneNumber;
    }
    get photoURL() {
      return this[S._data$4].photoUrl;
    }
    get providerId() {
      return dart.nullCheck(this[S._data$4].providerId);
    }
    get uid() {
      return this[S._data$4].uid;
    }
    toString() {
      return dart.str(dart.wrapType(user_info.UserInfo)) + "(displayName: " + dart.str(this.displayName) + ", email: " + dart.str(this.email) + ", phoneNumber: " + dart.str(this.phoneNumber) + ", photoURL: " + dart.str(this.photoURL) + ", providerId: " + this.providerId + ", uid: " + dart.str(this.uid) + ")";
    }
  };
  (user_info.UserInfo.fromPigeon = function(_data) {
    this[S._data$4] = _data;
    ;
  }).prototype = user_info.UserInfo.prototype;
  (user_info.UserInfo.fromJson = function(data) {
    this[S._data$4] = new messages$46pigeon$0.PigeonUserInfo.new({uid: core.String.as(data[S$.$_get]("uid")), email: T$.StringN().as(data[S$.$_get]("email")), displayName: T$.StringN().as(data[S$.$_get]("displayName")), photoUrl: T$.StringN().as(data[S$.$_get]("photoUrl")), phoneNumber: T$.StringN().as(data[S$.$_get]("phoneNumber")), isAnonymous: core.bool.as(data[S$.$_get]("isAnonymous")), isEmailVerified: core.bool.as(data[S$.$_get]("isEmailVerified")), providerId: T$.StringN().as(data[S$.$_get]("providerId")), tenantId: T$.StringN().as(data[S$.$_get]("tenantId")), refreshToken: T$.StringN().as(data[S$.$_get]("refreshToken")), creationTimestamp: T$.intN().as(data[S$.$_get]("creationTimestamp")), lastSignInTimestamp: T$.intN().as(data[S$.$_get]("lastSignInTimestamp"))});
    ;
  }).prototype = user_info.UserInfo.prototype;
  dart.addTypeTests(user_info.UserInfo);
  dart.addTypeCaches(user_info.UserInfo);
  dart.setGetterSignature(user_info.UserInfo, () => ({
    __proto__: dart.getGetters(user_info.UserInfo.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerId: core.String,
    uid: dart.nullable(core.String)
  }));
  dart.setLibraryUri(user_info.UserInfo, I[141]);
  dart.setFieldSignature(user_info.UserInfo, () => ({
    __proto__: dart.getFields(user_info.UserInfo.__proto__),
    [S._data$4]: dart.finalFieldType(messages$46pigeon$0.PigeonUserInfo)
  }));
  dart.defineExtensionMethods(user_info.UserInfo, ['toString']);
  user_metadata.UserMetadata = class UserMetadata extends core.Object {
    static ['_#new#tearOff'](_creationTimestamp, _lastSignInTime) {
      return new user_metadata.UserMetadata.new(_creationTimestamp, _lastSignInTime);
    }
    get creationTime() {
      return this[S._creationTimestamp] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S._creationTimestamp]), {isUtc: true});
    }
    get lastSignInTime() {
      return this[S._lastSignInTime] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S._lastSignInTime]), {isUtc: true});
    }
    toString() {
      return "UserMetadata(creationTime: " + dart.str(this.creationTime) + ", lastSignInTime: " + dart.str(this.lastSignInTime) + ")";
    }
  };
  (user_metadata.UserMetadata.new = function(_creationTimestamp, _lastSignInTime) {
    this[S._creationTimestamp] = _creationTimestamp;
    this[S._lastSignInTime] = _lastSignInTime;
    ;
  }).prototype = user_metadata.UserMetadata.prototype;
  dart.addTypeTests(user_metadata.UserMetadata);
  dart.addTypeCaches(user_metadata.UserMetadata);
  dart.setGetterSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getGetters(user_metadata.UserMetadata.__proto__),
    creationTime: dart.nullable(core.DateTime),
    lastSignInTime: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(user_metadata.UserMetadata, I[142]);
  dart.setFieldSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getFields(user_metadata.UserMetadata.__proto__),
    [S._creationTimestamp]: dart.finalFieldType(dart.nullable(core.int)),
    [S._lastSignInTime]: dart.finalFieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(user_metadata.UserMetadata, ['toString']);
  auth_interop['AuthErrorExtension|get#code'] = function AuthErrorExtension$124get$35code($this) {
    return js_util.getProperty(core.String, $this, "code");
  };
  auth_interop['AuthErrorExtension|set#code'] = function AuthErrorExtension$124set$35code($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "code", s);
  };
  auth_interop['AuthErrorExtension|get#message'] = function AuthErrorExtension$124get$35message($this) {
    return js_util.getProperty(core.String, $this, "message");
  };
  auth_interop['AuthErrorExtension|set#message'] = function AuthErrorExtension$124set$35message($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "message", s);
  };
  auth_interop['AuthErrorExtension|get#email'] = function AuthErrorExtension$124get$35email($this) {
    return js_util.getProperty(core.String, $this, "email");
  };
  auth_interop['AuthErrorExtension|set#email'] = function AuthErrorExtension$124set$35email($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "email", s);
  };
  auth_interop['AuthErrorExtension|get#credential'] = function AuthErrorExtension$124get$35credential($this) {
    return js_util.getProperty(dart.packageJSType("firebase_auth.AuthCredential", false), $this, "credential");
  };
  auth_interop['AuthErrorExtension|set#credential'] = function AuthErrorExtension$124set$35credential($this, c) {
    return js_util._setPropertyUnchecked(dart.packageJSType("firebase_auth.AuthCredential", false), $this, "credential", c);
  };
  auth_interop['AuthErrorExtension|get#tenantId'] = function AuthErrorExtension$124get$35tenantId($this) {
    return js_util.getProperty(core.String, $this, "tenantId");
  };
  auth_interop['AuthErrorExtension|set#tenantId'] = function AuthErrorExtension$124set$35tenantId($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "tenantId", s);
  };
  auth_interop['AuthErrorExtension|get#phoneNumber'] = function AuthErrorExtension$124get$35phoneNumber($this) {
    return js_util.getProperty(core.String, $this, "phoneNumber");
  };
  auth_interop['AuthErrorExtension|set#phoneNumber'] = function AuthErrorExtension$124set$35phoneNumber($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "phoneNumber", s);
  };
  auth_interop['AuthErrorExtension|get#customData'] = function AuthErrorExtension$124get$35customData($this) {
    return js_util.getProperty(core.Object, $this, "customData");
  };
  auth_interop['AuthErrorCustomDataExtension|get#appName'] = function AuthErrorCustomDataExtension$124get$35appName($this) {
    return js_util.getProperty(core.String, $this, "appName");
  };
  auth_interop['AuthErrorCustomDataExtension|get#email'] = function AuthErrorCustomDataExtension$124get$35email($this) {
    return js_util.getProperty(T$.StringN(), $this, "email");
  };
  auth_interop['AuthErrorCustomDataExtension|get#phoneNumber'] = function AuthErrorCustomDataExtension$124get$35phoneNumber($this) {
    return js_util.getProperty(T$.StringN(), $this, "phoneNumber");
  };
  auth_interop['AuthErrorCustomDataExtension|get#tenantId'] = function AuthErrorCustomDataExtension$124get$35tenantId($this) {
    return js_util.getProperty(T$.StringN(), $this, "tenantId");
  };
  app$.App = class App extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_core.FirebaseApp", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new app$.App._fromJsObject(jsObject);
    }
    get name() {
      return this.jsObject.name;
    }
    get options() {
      return this.jsObject.options;
    }
    static getInstance(jsObject) {
      let t210, t209, t208, t207;
      t207 = app$.App._expando;
      t208 = jsObject;
      t209 = t207._get(t208);
      return t209 == null ? (t210 = new app$.App._fromJsObject(jsObject), t207._set(t208, t210), t210) : t209;
    }
    delete() {
      return utils$.handleThenable(dart.void, dart.global.firebase_core.deleteApp(this.jsObject));
    }
  };
  (app$.App._fromJsObject = function(jsObject) {
    app$.App.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = app$.App.prototype;
  dart.addTypeTests(app$.App);
  dart.addTypeCaches(app$.App);
  dart.setMethodSignature(app$.App, () => ({
    __proto__: dart.getMethods(app$.App.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(app$.App, () => ['getInstance']);
  dart.setGetterSignature(app$.App, () => ({
    __proto__: dart.getGetters(app$.App.__proto__),
    name: core.String,
    options: dart.packageJSType("FirebaseOptions", false)
  }));
  dart.setLibraryUri(app$.App, I[143]);
  dart.setStaticFieldSignature(app$.App, () => ['_expando']);
  dart.defineLazy(app$.App, {
    /*app$.App._expando*/get _expando() {
      return new (T$.ExpandoOfApp()).new();
    }
  }, false);
  method_channel_field_value_factory.MethodChannelFieldValueFactory = class MethodChannelFieldValueFactory extends platform_interface_field_value_factory.FieldValueFactoryPlatform {
    arrayRemove(elements) {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.arrayRemove, elements);
    }
    arrayUnion(elements) {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.arrayUnion, elements);
    }
    delete() {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.delete, null);
    }
    increment(value) {
      if (!(core.int.is(value) || typeof value == 'number')) dart.assertFailed(null, I[144], 31, 12, "value is int || value is double");
      if (typeof value == 'number') {
        return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.incrementDouble, value);
      } else if (core.int.is(value)) {
        return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.incrementInteger, value);
      }
      dart.throw(new core.StateError.new("MethodChannelFieldValue().increment() expects a \"num\" value"));
    }
    serverTimestamp() {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.serverTimestamp, null);
    }
    static ['_#new#tearOff']() {
      return new method_channel_field_value_factory.MethodChannelFieldValueFactory.new();
    }
  };
  (method_channel_field_value_factory.MethodChannelFieldValueFactory.new = function() {
    method_channel_field_value_factory.MethodChannelFieldValueFactory.__proto__.new.call(this);
    ;
  }).prototype = method_channel_field_value_factory.MethodChannelFieldValueFactory.prototype;
  dart.addTypeTests(method_channel_field_value_factory.MethodChannelFieldValueFactory);
  dart.addTypeCaches(method_channel_field_value_factory.MethodChannelFieldValueFactory);
  dart.setMethodSignature(method_channel_field_value_factory.MethodChannelFieldValueFactory, () => ({
    __proto__: dart.getMethods(method_channel_field_value_factory.MethodChannelFieldValueFactory.__proto__),
    arrayRemove: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.List]),
    arrayUnion: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.List]),
    delete: dart.fnType(method_channel_field_value.MethodChannelFieldValue, []),
    increment: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.num]),
    serverTimestamp: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [])
  }));
  dart.setLibraryUri(method_channel_field_value_factory.MethodChannelFieldValueFactory, I[145]);
  method_channel_firestore.MethodChannelFirebaseFirestore = class MethodChannelFirebaseFirestore extends platform_interface_firestore.FirebaseFirestorePlatform {
    get settings() {
      return this[S.settings$1];
    }
    set settings(value) {
      this[S.settings$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: app, databaseURL: databaseURL});
    }
    static querySnapshotChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/query/" + id, C[112] || CT.C112);
    }
    static documentSnapshotChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/document/" + id, C[112] || CT.C112);
    }
    static snapshotsInSyncChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/snapshotsInSync/" + id, C[112] || CT.C112);
    }
    static loadBundleChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/loadBundle/" + id, C[112] || CT.C112);
    }
    get pigeonApp() {
      let t208, t207;
      t207 = this[S.__MethodChannelFirebaseFirestore_pigeonApp];
      return t207 == null ? (t208 = new messages$46pigeon$.FirestorePigeonFirebaseApp.new({appName: dart.nullCheck(this.appInstance).name, databaseURL: this.databaseURL, settings: new messages$46pigeon$.PigeonFirebaseSettings.new({persistenceEnabled: this.settings.persistenceEnabled, host: this.settings.host, sslEnabled: this.settings.sslEnabled, cacheSizeBytes: this.settings.cacheSizeBytes, ignoreUndefinedProperties: this.settings.ignoreUndefinedProperties})}), this[S.__MethodChannelFirebaseFirestore_pigeonApp] == null ? this[S.__MethodChannelFirebaseFirestore_pigeonApp] = t208 : dart.throw(new _internal.LateError.fieldADI("pigeonApp"))) : t207;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: app, databaseURL: databaseURL});
    }
    loadBundle(bundle) {
      return new method_channel_load_bundle_task.MethodChannelLoadBundleTask.new({task: method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.loadBundle(this.pigeonApp, bundle)});
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[5] || CT.C5;
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* namedQueryGet() {
        try {
          let data = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.namedQueryGet(this.pigeonApp, name, new messages$46pigeon$.PigeonGetOptions.new({source: options.source, serverTimestampBehavior: options.serverTimestampBehavior})));
          return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(platform_interface_firestore.FirebaseFirestorePlatform.instance, data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            if (e[S$.$toString]()[S$.$contains]("Named query has not been found")) {
              core.Error.throwWithStackTrace(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: "non-existent-named-query", message: "Named query has not been found. " + "Please check it has been loaded properly via loadBundle()."}), stack);
            }
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    batch() {
      return new method_channel_write_batch.MethodChannelWriteBatch.new(this.pigeonApp);
    }
    clearPersistence() {
      return async.async(dart.void, (function* clearPersistence() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.clearPersistence(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, function* enablePersistence() {
        dart.throw(new core.UnimplementedError.new("enablePersistence() is only available for Web. Use [Settings.persistenceEnabled] for other platforms."));
      });
    }
    collection(collectionPath) {
      return new method_channel_collection_reference.MethodChannelCollectionReference.new(this, collectionPath, this.pigeonApp);
    }
    collectionGroup(collectionPath) {
      return new method_channel_query.MethodChannelQuery.new(this, collectionPath, this.pigeonApp, {isCollectionGroupQuery: true});
    }
    disableNetwork() {
      return async.async(dart.void, (function* disableNetwork() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.disableNetwork(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enableNetwork() {
      return async.async(dart.void, (function* enableNetwork() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.enableNetwork(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    doc(documentPath) {
      return new method_channel_document_reference.MethodChannelDocumentReference.new(this, documentPath, this.pigeonApp);
    }
    snapshotsInSync() {
      let snapshotStreamSubscription = null;
      let controller = null;
      function controller$35get() {
        let t212;
        t212 = controller;
        return t212 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t212;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      controller$35set(T$.StreamControllerOfvoid().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.snapshotsInSyncSetup(this.pigeonApp));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.snapshotsInSyncChannel(observerId), {arguments: new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]), onError: C[114] || CT.C114}).listen(dart.fn(event => controller$35get().add(null), T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t214;
          t214 = snapshotStreamSubscription;
          t214 == null ? null : t214.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(T, (function* runTransaction() {
        if (!(timeout.inMilliseconds > 0)) dart.assertFailed("Transaction timeout must be more than 0 milliseconds", I[146], 224, 12, "timeout.inMilliseconds > 0");
        let transactionId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionCreate(this.pigeonApp, timeout.inMilliseconds, maxAttempts));
        let completer = async.Completer$(T).new();
        let result = null;
        let result$35isSet = false;
        function result$35get() {
          return result$35isSet ? result : dart.throw(new _internal.LateError.localNI("result"));
        }
        function result$35set(result$35param) {
          result$35isSet = true;
          return result = result$35param;
        }
        let eventChannel = new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/transaction/" + transactionId, C[112] || CT.C112);
        let snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](eventChannel, {arguments: new (T$.IdentityMapOfString$dynamic()).from(["firestore", this, "timeout", timeout.inMilliseconds, "maxAttempts", maxAttempts]), onError: C[114] || CT.C114}).listen(dart.fn(event => async.async(dart.void, (function*() {
          if (dart.dsend(event, '_get', ["error"]) != null) {
            completer.completeError(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: T$.StringN().as(dart.dsend(dart.dsend(event, '_get', ["error"]), '_get', ["code"])), message: T$.StringN().as(dart.dsend(dart.dsend(event, '_get', ["error"]), '_get', ["message"]))}));
            return;
          } else if (dart.equals(dart.dsend(event, '_get', ["complete"]), true)) {
            completer.complete(result$35get());
            return;
          }
          let transaction = new method_channel_transaction.MethodChannelTransaction.new(transactionId, core.String.as(dart.dsend(event, '_get', ["appName"])), this.pigeonApp, this.databaseURL);
          try {
            result$35set(T.as(yield transactionHandler(transaction)));
          } catch (e) {
            let error = dart.getThrown(e);
            let stack = dart.stackTrace(e);
            if (core.Object.is(error)) {
              yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionStoreResult(transactionId, messages$46pigeon$.PigeonTransactionResult.failure, null);
              completer.completeError(error, stack);
              return;
            } else
              throw e;
          }
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionStoreResult(transactionId, messages$46pigeon$.PigeonTransactionResult.success, transaction.commands);
        }).bind(this)), T$.dynamicToFutureOfvoid()));
        return completer.future.whenComplete(dart.bind(snapshotStreamSubscription, 'cancel'));
      }).bind(this));
    }
    terminate() {
      return async.async(dart.void, (function* terminate() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.terminate(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    waitForPendingWrites() {
      return async.async(dart.void, (function* waitForPendingWrites() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.waitForPendingWrites(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setIndexConfiguration(indexConfiguration) {
      return async.async(dart.void, (function* setIndexConfiguration() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.setIndexConfiguration(this.pigeonApp, indexConfiguration);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setLoggingEnabled(enabled) {
      return async.async(dart.void, function* setLoggingEnabled() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.setLoggingEnabled(enabled);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      });
    }
  };
  (method_channel_firestore.MethodChannelFirebaseFirestore.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S.__MethodChannelFirebaseFirestore_pigeonApp] = null;
    this[S.settings$1] = C[4] || CT.C4;
    method_channel_firestore.MethodChannelFirebaseFirestore.__proto__.new.call(this, {appInstance: app, databaseChoice: databaseURL});
    ;
  }).prototype = method_channel_firestore.MethodChannelFirebaseFirestore.prototype;
  dart.addTypeTests(method_channel_firestore.MethodChannelFirebaseFirestore);
  dart.addTypeCaches(method_channel_firestore.MethodChannelFirebaseFirestore);
  dart.setMethodSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getMethods(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    runTransaction: dart.gFnType(T => [async.Future$(T), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ['querySnapshotChannel', 'documentSnapshotChannel', 'snapshotsInSyncChannel', 'loadBundleChannel']);
  dart.setGetterSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getGetters(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    pigeonApp: messages$46pigeon$.FirestorePigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_firestore.MethodChannelFirebaseFirestore, I[147]);
  dart.setFieldSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getFields(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    [S.__MethodChannelFirebaseFirestore_pigeonApp]: dart.fieldType(dart.nullable(messages$46pigeon$.FirestorePigeonFirebaseApp)),
    settings: dart.fieldType(settings.Settings)
  }));
  dart.setStaticFieldSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ['pigeonChannel']);
  dart.defineLazy(method_channel_firestore.MethodChannelFirebaseFirestore, {
    /*method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel*/get pigeonChannel() {
      return new messages$46pigeon$.FirebaseFirestoreHostApi.new();
    }
  }, false);
  exception$.convertPlatformExceptionToFirebaseException = function convertPlatformExceptionToFirebaseException(exception, rawStackTrace, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let stackTrace = rawStackTrace;
    if (stackTrace[S$.$_equals](core.StackTrace.empty)) {
      stackTrace = core.StackTrace.current;
    }
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$.platformExceptionToFirebaseException(exception, {plugin: plugin}), stackTrace);
  };
  exception$.platformExceptionToFirebaseException = function platformExceptionToFirebaseException(platformException, opts) {
    let t223, t223$, t223$0;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let details = platformException.details != null ? T$.LinkedHashMapOfString$Object().from(core.Map.as(platformException.details)) : null;
    let code = null;
    let message = (t223 = platformException.message, t223 == null ? "" : t223);
    if (details != null) {
      code = (t223$ = T$.StringN().as(details[S$.$_get]("code")), t223$ == null ? code : t223$);
      message = (t223$0 = T$.StringN().as(details[S$.$_get]("message")), t223$0 == null ? message : t223$0);
    }
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, code: code, message: message});
  };
  exception$['EventChannelExtension|receiveGuardedBroadcastStream'] = function EventChannelExtension$124receiveGuardedBroadcastStream($this, opts) {
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let incomingStackTrace = core.StackTrace.current;
    return $this.receiveBroadcastStream($arguments).handleError(dart.fn(error => onError(error, incomingStackTrace), T$.ObjectTodynamic()));
  };
  exception$['EventChannelExtension|get#receiveGuardedBroadcastStream'] = function EventChannelExtension$124get$35receiveGuardedBroadcastStream($this) {
    return dart.fn(opts => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      return exception$['EventChannelExtension|receiveGuardedBroadcastStream']($this, {arguments: $arguments, onError: onError});
    }, T$.__ToStream());
  };
  method_channel_firebase_auth.MethodChannelFirebaseAuth = class MethodChannelFirebaseAuth extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    get currentUser() {
      return this[S.currentUser];
    }
    set currentUser(value) {
      this[S.currentUser] = value;
    }
    get languageCode() {
      return this[S.languageCode];
    }
    set languageCode(value) {
      this[S.languageCode] = value;
    }
    [S._createBroadcastStream](T) {
      return async.StreamController$(T).broadcast();
    }
    static get instance() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    get pigeonDefault() {
      return new messages$46pigeon$0.AuthPigeonFirebaseApp.new({appName: this.app.name, tenantId: this.tenantId});
    }
    static ['_#_#tearOff']() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app});
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName) != null)) dart.assertFailed(null, I[148], 116, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName)).add(new (T$._ValueWrapperOfUserPlatform()).new(userPlatform));
    }
    [S._handleAuthStateChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleAuthStateChangesListener() {
        let streamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[S$.$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          streamController.add(C[116] || CT.C116);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, messages$46pigeon$0.PigeonUserDetails.decode(core.Object.as(userMap)));
          instance.currentUser = user;
          streamController.add(new (T$._ValueWrapperOfUserPlatform()).new(instance.currentUser));
        }
      });
    }
    [S._handleIdTokenChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleIdTokenChangesListener() {
        let idTokenStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_get](appName));
        let userChangesStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[S$.$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          idTokenStreamController.add(C[116] || CT.C116);
          userChangesStreamController.add(C[116] || CT.C116);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, messages$46pigeon$0.PigeonUserDetails.decode(core.Object.as(userMap)));
          instance.currentUser = user;
          idTokenStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
          userChangesStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
        }
      });
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$putIfAbsent](app.name, dart.fn(() => new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app}), T$.VoidToMethodChannelFirebaseAuth()));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      if (currentUser != null) {
        let multiFactor = new method_channel_multi_factor.MethodChannelMultiFactor.new(this);
        this.currentUser = new method_channel_user.MethodChannelUser.new(this, multiFactor, currentUser);
      }
      this.languageCode = languageCode;
      return this;
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          yield this[S._api$1].useEmulator(this.pigeonDefault, host, port);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this[S._api$1].applyActionCode(this.pigeonDefault, code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          let result = (yield this[S._api$1].checkActionCode(this.pigeonDefault, code));
          return new action_code_info.ActionCodeInfo.new({operation: result.operation, data: new action_code_info.ActionCodeInfoData.new({email: result.data.email, previousEmail: result.data.previousEmail})});
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this[S._api$1].confirmPasswordReset(this.pigeonDefault, code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          let result = (yield this[S._api$1].createUserWithEmailAndPassword(this.pigeonDefault, email, password));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          let result = (yield this[S._api$1].signInAnonymously(this.pigeonDefault));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          let result = (yield this[S._api$1].signInWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          let result = (yield this[S._api$1].signInWithCustomToken(this.pigeonDefault, token));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          let result = (yield this[S._api$1].signInWithEmailAndPassword(this.pigeonDefault, email, password));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          let result = (yield this[S._api$1].signInWithEmailLink(this.pigeonDefault, email, emailLink));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[S._api$1].signInWithProvider(this.pigeonDefault, new messages$46pigeon$0.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is only supported on web based platforms"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is only supported on web based platforms"));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this[S._api$1].signOut(this.pigeonDefault);
          this.currentUser = null;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          let data = (yield this[S._api$1].fetchSignInMethodsForEmail(this.pigeonDefault, email));
          return iterable_extensions['IterableNullableExtension|whereNotNull'](core.String, data)[S$.$toList]();
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this[S._api$1].sendPasswordResetEmail(this.pigeonDefault, email, actionCodeSettings == null ? null : new messages$46pigeon$0.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this[S._api$1].sendSignInLinkToEmail(this.pigeonDefault, email, new messages$46pigeon$0.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        try {
          let newLanguageCode = (yield this[S._api$1].setLanguageCode(this.pigeonDefault, languageCode));
          this.languageCode = newLanguageCode;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        if (phoneNumber != null && smsCode == null || phoneNumber == null && smsCode != null) {
          dart.throw(new core.ArgumentError.new("The [smsCode] and the [phoneNumber] must both be either 'null' or a 'String''."));
        }
        try {
          yield this[S._api$1].setSettings(this.pigeonDefault, new messages$46pigeon$0.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setPersistence(persistence) {
      dart.throw(new core.UnimplementedError.new("setPersistence() is only supported on web based platforms"));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          let userEmail = (yield this[S._api$1].verifyPasswordResetCode(this.pigeonDefault, code));
          return userEmail;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[3] || CT.C3;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t243, t243$;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.macOS) {
          dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not available on MacOS platforms."));
        }
        try {
          let eventChannelName = (yield this[S._api$1].verifyPhoneNumber(this.pigeonDefault, new messages$46pigeon$0.PigeonVerifyPhoneNumberRequest.new({phoneNumber: phoneNumber, multiFactorInfoId: (t243 = multiFactorInfo, t243 == null ? null : t243.uid), timeout: timeout.inMilliseconds, forceResendingToken: forceResendingToken, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorSessionId: (t243$ = multiFactorSession, t243$ == null ? null : t243$.id)})));
          exception$['EventChannelExtension|receiveGuardedBroadcastStream'](new platform_channel.EventChannel.new(eventChannelName), {onError: C[115] || CT.C115}).listen(dart.fn($arguments => {
            let t243, t243$, t244, t243$0, t243$1, t244$, t243$2, t243$3;
            let name = dart.dsend($arguments, '_get', ["name"]);
            if (dart.equals(name, "Auth#phoneVerificationCompleted")) {
              let token = core.int.as(dart.dsend($arguments, '_get', ["token"]));
              let smsCode = T$.StringN().as(dart.dsend($arguments, '_get', ["smsCode"]));
              let phoneAuthCredential = phone_auth.PhoneAuthProvider.credentialFromToken(token, {smsCode: smsCode});
              verificationCompleted(phoneAuthCredential);
            } else if (dart.equals(name, "Auth#phoneVerificationFailed")) {
              let error = T$.MapN().as(dart.dsend($arguments, '_get', ["error"]));
              let details = T$.MapN().as((t243 = error, t243 == null ? null : t243[S$.$_get]("details")));
              let exception = new firebase_auth_exception.FirebaseAuthException.new({message: T$.StringN().as((t243$0 = (t243$ = details, t243$ == null ? null : t243$[S$.$_get]("message")), t243$0 == null ? (t244 = error, t244 == null ? null : t244[S$.$_get]("message")) : t243$0)), code: core.String.as((t243$3 = (t243$2 = (t243$1 = details, t243$1 == null ? null : t243$1[S$.$_get]("code")), t243$2 == null ? (t244$ = error, t244$ == null ? null : t244$[S$.$_get]("code")) : t243$2), t243$3 == null ? "unknown" : t243$3))});
              verificationFailed(exception);
            } else if (dart.equals(name, "Auth#phoneCodeSent")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              let forceResendingToken = T$.intN().as(dart.dsend($arguments, '_get', ["forceResendingToken"]));
              codeSent(verificationId, forceResendingToken);
            } else if (dart.equals(name, "Auth#phoneCodeAutoRetrievalTimeout")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              codeAutoRetrievalTimeout(verificationId);
            }
          }, T$.dynamicTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      return async.async(dart.void, (function* revokeTokenWithAuthorizationCode() {
        if (platform.defaultTargetPlatform === platform.TargetPlatform.macOS || platform.defaultTargetPlatform === platform.TargetPlatform.iOS) {
          try {
            yield this[S._api$1].revokeTokenWithAuthorizationCode(this.pigeonDefault, authorizationCode);
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("revokeTokenWithAuthorizationCode() is only available on apple platforms."));
        }
      }).bind(this));
    }
  };
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.__ = function() {
    this[S._api$1] = new messages$46pigeon$0.FirebaseAuthHostApi.new();
    this[S.currentUser] = null;
    this[S.languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S._api$1] = new messages$46pigeon$0.FirebaseAuthHostApi.new();
    this[S.currentUser] = null;
    this[S.languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: app});
    this[S._api$1].registerIdTokenListener(this.pigeonDefault).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(channelName, method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[115] || CT.C115}).listen(dart.fn($arguments => {
        this[S._handleIdTokenChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringToNull()));
    this[S._api$1].registerAuthStateListener(this.pigeonDefault).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(channelName, method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[115] || CT.C115}).listen(dart.fn($arguments => {
        this[S._handleAuthStateChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringToNull()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_set](app.name, this[S._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_set](app.name, this[S._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_set](app.name, this[S._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  dart.addTypeTests(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.addTypeCaches(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.setMethodSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getMethods(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    [S._createBroadcastStream]: dart.gFnType(T => [async.StreamController$(T), []], T => [dart.nullable(core.Object)]),
    [S._handleAuthStateChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    [S._handleIdTokenChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    setInitialValues: dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [], {currentUser: dart.nullable(messages$46pigeon$0.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])})
  }));
  dart.setGetterSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getGetters(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    pigeonDefault: messages$46pigeon$0.AuthPigeonFirebaseApp
  }));
  dart.setStaticGetterSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['instance']);
  dart.setLibraryUri(method_channel_firebase_auth.MethodChannelFirebaseAuth, I[149]);
  dart.setFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getFields(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    [S._api$1]: dart.finalFieldType(messages$46pigeon$0.FirebaseAuthHostApi),
    currentUser: dart.fieldType(dart.nullable(platform_interface_user.UserPlatform)),
    languageCode: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['channel', 'methodChannelFirebaseAuthInstances', '_multiFactorInstances', '_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(method_channel_firebase_auth.MethodChannelFirebaseAuth, {
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.channel*/get channel() {
      return C[117] || CT.C117;
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances*/get methodChannelFirebaseAuthInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseAuth()).new();
    },
    set methodChannelFirebaseAuthInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances*/get _multiFactorInstances() {
      return new (T$.IdentityMapOfString$MethodChannelMultiFactor()).new();
    },
    set _multiFactorInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    }
  }, false);
  const _is__ValueWrapper_default = Symbol('_is__ValueWrapper_default');
  method_channel_firebase_auth._ValueWrapper$ = dart.generic(T => {
    class _ValueWrapper extends core.Object {
      get value() {
        return this[S.value$2];
      }
      set value(value) {
        super.value = value;
      }
      static ['_#new#tearOff'](T, value) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).new(value);
      }
      static ['_#absent#tearOff'](T) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).absent();
      }
    }
    (_ValueWrapper.new = function(value) {
      this[S.value$2] = value;
      ;
    }).prototype = _ValueWrapper.prototype;
    (_ValueWrapper.absent = function() {
      this[S.value$2] = null;
      ;
    }).prototype = _ValueWrapper.prototype;
    dart.addTypeTests(_ValueWrapper);
    _ValueWrapper.prototype[_is__ValueWrapper_default] = true;
    dart.addTypeCaches(_ValueWrapper);
    dart.setLibraryUri(_ValueWrapper, I[149]);
    dart.setFieldSignature(_ValueWrapper, () => ({
      __proto__: dart.getFields(_ValueWrapper.__proto__),
      value: dart.finalFieldType(dart.nullable(T))
    }));
    return _ValueWrapper;
  });
  method_channel_firebase_auth._ValueWrapper = method_channel_firebase_auth._ValueWrapper$();
  dart.addTypeTests(method_channel_firebase_auth._ValueWrapper, _is__ValueWrapper_default);
  method_channel_multi_factor.MethodChannelMultiFactor = class MethodChannelMultiFactor extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactor.new(auth);
    }
    get pigeonDefault() {
      return new messages$46pigeon$0.AuthPigeonFirebaseApp.new({appName: this.auth.app.name, tenantId: this.auth.tenantId});
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        try {
          let pigeonObject = (yield this[S._api$2].getSession(this.pigeonDefault));
          return new platform_interface_multi_factor.MultiFactorSession.new(pigeonObject.id);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(dart.nullCheck(_assertion.credential));
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          try {
            yield this[S._api$2].enrollPhone(this.pigeonDefault, new messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode}), displayName);
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else if (method_channel_multi_factor.TotpMultiFactorAssertion.is(_assertion)) {
          try {
            yield this[S._api$2].enrollTotp(this.pigeonDefault, _assertion.assertionId, displayName);
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            let stack = dart.stackTrace(e$0);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$0;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      return async.async(dart.void, (function* unenroll() {
        let t249, t248;
        let uidToUnenroll = (t248 = factorUid, t248 == null ? (t249 = multiFactorInfo, t249 == null ? null : t249.uid) : t248);
        if (uidToUnenroll == null) {
          dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
        }
        try {
          yield this[S._api$2].unenroll(this.pigeonDefault, uidToUnenroll);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        try {
          let data = (yield this[S._api$2].getEnrolledFactors(this.pigeonDefault));
          return pigeon_helper.multiFactorInfoPigeonToObject(data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactor.new = function(auth) {
    this[S._api$2] = new messages$46pigeon$0.MultiFactorUserHostApi.new();
    method_channel_multi_factor.MethodChannelMultiFactor.__proto__.new.call(this, auth);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactor.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.setGetterSignature(method_channel_multi_factor.MethodChannelMultiFactor, () => ({
    __proto__: dart.getGetters(method_channel_multi_factor.MethodChannelMultiFactor.__proto__),
    pigeonDefault: messages$46pigeon$0.AuthPigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactor, I[150]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactor, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactor.__proto__),
    [S._api$2]: dart.finalFieldType(messages$46pigeon$0.MultiFactorUserHostApi)
  }));
  method_channel_multi_factor.MethodChannelMultiFactorResolver = class MethodChannelMultiFactorResolver extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, resolverId, auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(hints, session, resolverId, auth);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(dart.nullCheck(_assertion.credential));
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          try {
            let result = (yield this[S._api$2].resolveSignIn(this[S._resolverId], new messages$46pigeon$0.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode}), null));
            let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this[S._auth$4], result);
            return userCredential;
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else if (method_channel_multi_factor.TotpMultiFactorAssertion.is(_assertion)) {
          try {
            let result = (yield this[S._api$2].resolveSignIn(this[S._resolverId], null, _assertion.assertionId));
            let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this[S._auth$4], result);
            return userCredential;
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            let stack = dart.stackTrace(e$0);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$0;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactorResolver.new = function(hints, session, resolverId, auth) {
    this[S._api$2] = new messages$46pigeon$0.MultiFactoResolverHostApi.new();
    this[S._resolverId] = resolverId;
    this[S._auth$4] = auth;
    method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__.new.call(this, hints, session);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactorResolver.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactorResolver, I[150]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactorResolver, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__),
    [S._resolverId]: dart.finalFieldType(core.String),
    [S._auth$4]: dart.finalFieldType(method_channel_firebase_auth.MethodChannelFirebaseAuth),
    [S._api$2]: dart.finalFieldType(messages$46pigeon$0.MultiFactoResolverHostApi)
  }));
  method_channel_multi_factor.MultiFactorAssertion = class MultiFactorAssertion extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get credential() {
      return this[S.credential$3];
    }
    set credential(value) {
      super.credential = value;
    }
    static ['_#new#tearOff'](credential) {
      return new method_channel_multi_factor.MultiFactorAssertion.new(credential);
    }
  };
  (method_channel_multi_factor.MultiFactorAssertion.new = function(credential) {
    this[S.credential$3] = credential;
    method_channel_multi_factor.MultiFactorAssertion.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.MultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.MultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.MultiFactorAssertion, I[150]);
  dart.setFieldSignature(method_channel_multi_factor.MultiFactorAssertion, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MultiFactorAssertion.__proto__),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential))
  }));
  method_channel_multi_factor.PhoneMultiFactorAssertion = class PhoneMultiFactorAssertion extends method_channel_multi_factor.MultiFactorAssertion {
    static ['_#new#tearOff'](credential) {
      return new method_channel_multi_factor.PhoneMultiFactorAssertion.new(credential);
    }
  };
  (method_channel_multi_factor.PhoneMultiFactorAssertion.new = function(credential) {
    method_channel_multi_factor.PhoneMultiFactorAssertion.__proto__.new.call(this, credential);
    ;
  }).prototype = method_channel_multi_factor.PhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.PhoneMultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.PhoneMultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.PhoneMultiFactorAssertion, I[150]);
  method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator = class MethodChannelPhoneMultiFactorGenerator extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      return new method_channel_multi_factor.PhoneMultiFactorAssertion.new(credential);
    }
    static ['_#new#tearOff']() {
      return new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new();
    }
  };
  (method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new = function() {
    method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator, I[150]);
  method_channel_multi_factor.TotpMultiFactorAssertion = class TotpMultiFactorAssertion extends method_channel_multi_factor.MultiFactorAssertion {
    get assertionId() {
      return this[S.assertionId];
    }
    set assertionId(value) {
      super.assertionId = value;
    }
    static ['_#new#tearOff'](assertionId) {
      return new method_channel_multi_factor.TotpMultiFactorAssertion.new(assertionId);
    }
  };
  (method_channel_multi_factor.TotpMultiFactorAssertion.new = function(assertionId) {
    this[S.assertionId] = assertionId;
    method_channel_multi_factor.TotpMultiFactorAssertion.__proto__.new.call(this, null);
    ;
  }).prototype = method_channel_multi_factor.TotpMultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.TotpMultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.TotpMultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.TotpMultiFactorAssertion, I[150]);
  dart.setFieldSignature(method_channel_multi_factor.TotpMultiFactorAssertion, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.TotpMultiFactorAssertion.__proto__),
    assertionId: dart.finalFieldType(core.String)
  }));
  method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator = class MethodChannelTotpMultiFactorGenerator extends platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform {
    generateSecret(session) {
      return async.async(platform_interface_multi_factor.TotpSecretPlatform, (function* generateSecret() {
        let pigeonSecret = (yield this[S._api$2].generateSecret(session.id));
        return new method_channel_multi_factor.MethodChannelTotpSecret.new(pigeonSecret.codeIntervalSeconds, pigeonSecret.codeLength, pigeonSecret.enrollmentCompletionDeadline != null ? new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(pigeonSecret.enrollmentCompletionDeadline)) : null, pigeonSecret.hashingAlgorithm, pigeonSecret.secretKey);
      }).bind(this));
    }
    getAssertionForEnrollment(secret, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, (function* getAssertionForEnrollment() {
        let totpAssertionId = (yield this[S._api$2].getAssertionForEnrollment(secret.secretKey, oneTimePassword));
        return new method_channel_multi_factor.TotpMultiFactorAssertion.new(totpAssertionId);
      }).bind(this));
    }
    getAssertionForSignIn(enrollmentId, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, (function* getAssertionForSignIn() {
        let totpAssertionId = (yield this[S._api$2].getAssertionForSignIn(enrollmentId, oneTimePassword));
        return new method_channel_multi_factor.TotpMultiFactorAssertion.new(totpAssertionId);
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.new();
    }
  };
  (method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.new = function() {
    this[S._api$2] = new messages$46pigeon$0.MultiFactorTotpHostApi.new();
    method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator, I[150]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.__proto__),
    [S._api$2]: dart.finalFieldType(messages$46pigeon$0.MultiFactorTotpHostApi)
  }));
  method_channel_multi_factor.MethodChannelTotpSecret = class MethodChannelTotpSecret extends platform_interface_multi_factor.TotpSecretPlatform {
    static ['_#new#tearOff'](codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
      return new method_channel_multi_factor.MethodChannelTotpSecret.new(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      return async.async(core.String, (function* generateQrCodeUrl() {
        let pigeonResponse = (yield this[S._api$2].generateQrCodeUrl(this.secretKey, accountName, issuer));
        return pigeonResponse;
      }).bind(this));
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, (function* openInOtpApp() {
        yield this[S._api$2].openInOtpApp(this.secretKey, qrCodeUrl);
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelTotpSecret.new = function(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
    this[S._api$2] = new messages$46pigeon$0.MultiFactorTotpSecretHostApi.new();
    method_channel_multi_factor.MethodChannelTotpSecret.__proto__.new.call(this, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelTotpSecret.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelTotpSecret);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelTotpSecret);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelTotpSecret, I[150]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelTotpSecret, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelTotpSecret.__proto__),
    [S._api$2]: dart.finalFieldType(messages$46pigeon$0.MultiFactorTotpSecretHostApi)
  }));
  authentication_challenge.AuthenticationChallenge = class AuthenticationChallenge extends core.Object {
    get scheme() {
      return this[S.scheme];
    }
    set scheme(value) {
      super.scheme = value;
    }
    get parameters() {
      return this[S.parameters$1];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static parseHeader(header) {
      return utils$1.wrapFormatException(T$.ListOfAuthenticationChallenge(), "authentication header", header, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(header);
        scanner.scan(scan.whitespace);
        let challenges = scan.parseList(authentication_challenge.AuthenticationChallenge, scanner, dart.fn(() => {
          let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner, {whitespaceName: "\" \" or \"=\""});
          let params = new (T$.IdentityMapOfString$String()).new();
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
          }
          authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params);
          let beforeComma = scanner.position;
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
            if (scanner.matches(",") || scanner.isDone) continue;
            scanner.expect(scan.token, {name: "a token"});
            let name = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
            scanner.scan(scan.whitespace);
            if (!scanner.scan("=")) {
              scanner.position = beforeComma;
              break;
            }
            scanner.scan(scan.whitespace);
            if (scanner.scan(scan.token)) {
              params[S$.$_set](name, dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
            } else {
              params[S$.$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
            }
            scanner.scan(scan.whitespace);
            beforeComma = scanner.position;
          }
          return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
        }, T$.VoidToAuthenticationChallenge()));
        scanner.expectDone();
        return challenges;
      }, T$.VoidToListOfAuthenticationChallenge()));
    }
    static parse(challenge) {
      return utils$1.wrapFormatException(authentication_challenge.AuthenticationChallenge, "authentication challenge", challenge, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(challenge);
        scanner.scan(scan.whitespace);
        let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner);
        let params = new (T$.IdentityMapOfString$String()).new();
        scan.parseList(dart.void, scanner, dart.fn(() => authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params), T$.VoidTovoid()));
        scanner.expectDone();
        return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
      }, T$.VoidToAuthenticationChallenge()));
    }
    static ['_#parse#tearOff'](challenge) {
      return authentication_challenge.AuthenticationChallenge.parse(challenge);
    }
    static _scanScheme(scanner, opts) {
      let whitespaceName = opts && 'whitespaceName' in opts ? opts.whitespaceName : null;
      scanner.expect(scan.token, {name: "a token"});
      let scheme = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[S$.$toLowerCase]();
      scanner.scan(scan.whitespace);
      if (scanner.lastMatch == null || !dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[S$.$contains](" ")) {
        scanner.expect(" ", {name: whitespaceName});
      }
      return scheme;
    }
    static _scanAuthParam(scanner, params) {
      scanner.expect(scan.token, {name: "a token"});
      let name = dart.nullCheck(scanner.lastMatch)._get(0);
      scanner.scan(scan.whitespace);
      scanner.expect("=");
      scanner.scan(scan.whitespace);
      if (scanner.scan(scan.token)) {
        params[S$.$_set](name, dart.nullCheck(scanner.lastMatch)._get(0));
      } else {
        params[S$.$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
      }
      scanner.scan(scan.whitespace);
    }
    static ['_#new#tearOff'](scheme, parameters) {
      return new authentication_challenge.AuthenticationChallenge.new(scheme, parameters);
    }
  };
  (authentication_challenge.AuthenticationChallenge.new = function(scheme, parameters) {
    this[S.scheme] = scheme;
    this[S.parameters$1] = new (T$.UnmodifiableMapViewOfString$String()).new(new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = authentication_challenge.AuthenticationChallenge.prototype;
  dart.addTypeTests(authentication_challenge.AuthenticationChallenge);
  dart.addTypeCaches(authentication_challenge.AuthenticationChallenge);
  dart.setStaticMethodSignature(authentication_challenge.AuthenticationChallenge, () => ['parseHeader', 'parse', '_scanScheme', '_scanAuthParam']);
  dart.setLibraryUri(authentication_challenge.AuthenticationChallenge, I[151]);
  dart.setFieldSignature(authentication_challenge.AuthenticationChallenge, () => ({
    __proto__: dart.getFields(authentication_challenge.AuthenticationChallenge.__proto__),
    scheme: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  const _is_CaseInsensitiveMap_default = Symbol('_is_CaseInsensitiveMap_default');
  case_insensitive_map.CaseInsensitiveMap$ = dart.generic(V => {
    class CaseInsensitiveMap extends canonicalized_map.CanonicalizedMap$(core.String, core.String, V) {
      static ['_#new#tearOff'](V) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).new();
      }
      static ['_#from#tearOff'](V, other) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).from(other);
      }
    }
    (CaseInsensitiveMap.new = function() {
      CaseInsensitiveMap.__proto__.new.call(this, dart.fn(key => key[S$.$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    (CaseInsensitiveMap.from = function(other) {
      CaseInsensitiveMap.__proto__.from.call(this, other, dart.fn(key => key[S$.$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    dart.addTypeTests(CaseInsensitiveMap);
    CaseInsensitiveMap.prototype[_is_CaseInsensitiveMap_default] = true;
    dart.addTypeCaches(CaseInsensitiveMap);
    dart.setLibraryUri(CaseInsensitiveMap, I[152]);
    return CaseInsensitiveMap;
  });
  case_insensitive_map.CaseInsensitiveMap = case_insensitive_map.CaseInsensitiveMap$();
  dart.addTypeTests(case_insensitive_map.CaseInsensitiveMap, _is_CaseInsensitiveMap_default);
  chunked_coding.ChunkedCodingCodec = class ChunkedCodingCodec extends convert.Codec$(core.List$(core.int), core.List$(core.int)) {
    get encoder() {
      return encoder.chunkedCodingEncoder;
    }
    get decoder() {
      return decoder.chunkedCodingDecoder;
    }
    static ['_#_#tearOff']() {
      return new chunked_coding.ChunkedCodingCodec.__();
    }
  };
  (chunked_coding.ChunkedCodingCodec.__ = function() {
    chunked_coding.ChunkedCodingCodec.__proto__.new.call(this);
    ;
  }).prototype = chunked_coding.ChunkedCodingCodec.prototype;
  dart.addTypeTests(chunked_coding.ChunkedCodingCodec);
  dart.addTypeCaches(chunked_coding.ChunkedCodingCodec);
  dart.setGetterSignature(chunked_coding.ChunkedCodingCodec, () => ({
    __proto__: dart.getGetters(chunked_coding.ChunkedCodingCodec.__proto__),
    encoder: encoder.ChunkedCodingEncoder,
    decoder: decoder.ChunkedCodingDecoder
  }));
  dart.setLibraryUri(chunked_coding.ChunkedCodingCodec, I[153]);
  dart.defineLazy(chunked_coding, {
    /*chunked_coding.chunkedCoding*/get chunkedCoding() {
      return C[119] || CT.C119;
    }
  }, false);
  http_date.formatHttpDate = function formatHttpDate(date) {
    let t252;
    date = date.toUtc();
    let buffer = (t252 = new core.StringBuffer.new(), (() => {
      t252.write(http_date._weekdays[S$.$_get](date.weekday - 1));
      t252.write(", ");
      t252.write(date.day <= 9 ? "0" : "");
      t252.write(date.day[S$.$toString]());
      t252.write(" ");
      t252.write(http_date._months[S$.$_get](date.month - 1));
      t252.write(" ");
      t252.write(date.year[S$.$toString]());
      t252.write(date.hour <= 9 ? " 0" : " ");
      t252.write(date.hour[S$.$toString]());
      t252.write(date.minute <= 9 ? ":0" : ":");
      t252.write(date.minute[S$.$toString]());
      t252.write(date.second <= 9 ? ":0" : ":");
      t252.write(date.second[S$.$toString]());
      t252.write(" GMT");
      return t252;
    })());
    return buffer.toString();
  };
  http_date.parseHttpDate = function parseHttpDate(date) {
    return utils$1.wrapFormatException(core.DateTime, "HTTP date", date, dart.fn(() => {
      let scanner = new string_scanner.StringScanner.new(date);
      if (scanner.scan(http_date._longWeekdayRegExp)) {
        scanner.expect(", ");
        let day = http_date._parseInt(scanner, 2);
        scanner.expect("-");
        let month = http_date._parseMonth(scanner);
        scanner.expect("-");
        let year = 1900 + http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(http_date._shortWeekdayRegExp);
      if (scanner.scan(", ")) {
        let day = http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let month = http_date._parseMonth(scanner);
        scanner.expect(" ");
        let year = http_date._parseInt(scanner, 4);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(" ");
      let month = http_date._parseMonth(scanner);
      scanner.expect(" ");
      let day = scanner.scan(" ") ? http_date._parseInt(scanner, 1) : http_date._parseInt(scanner, 2);
      scanner.expect(" ");
      let time = http_date._parseTime(scanner);
      scanner.expect(" ");
      let year = http_date._parseInt(scanner, 4);
      scanner.expectDone();
      return http_date._makeDateTime(year, month, day, time);
    }, T$.VoidToDateTime()));
  };
  http_date._parseMonth = function _parseMonth(scanner) {
    scanner.expect(http_date._monthRegExp);
    return http_date._months[S.$indexOf](dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))) + 1;
  };
  http_date._parseInt = function _parseInt(scanner, digits) {
    scanner.expect(http_date._digitRegExp);
    if (dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)).length !== digits) {
      scanner.error("expected a " + dart.str(digits) + "-digit number.");
    }
    return core.int.parse(dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
  };
  http_date._parseTime = function _parseTime(scanner) {
    let hours = http_date._parseInt(scanner, 2);
    if (hours >= 24) scanner.error("hours may not be greater than 24.");
    scanner.expect(":");
    let minutes = http_date._parseInt(scanner, 2);
    if (minutes >= 60) scanner.error("minutes may not be greater than 60.");
    scanner.expect(":");
    let seconds = http_date._parseInt(scanner, 2);
    if (seconds >= 60) scanner.error("seconds may not be greater than 60.");
    return new core.DateTime.new(1, 1, 1, hours, minutes, seconds);
  };
  http_date._makeDateTime = function _makeDateTime(year, month, day, time) {
    let dateTime = new core.DateTime.utc(year, month, day, time.hour, time.minute, time.second);
    if (dateTime.month !== month) {
      dart.throw(new core.FormatException.new("invalid day '" + dart.str(day) + "' for month '" + dart.str(month) + "'."));
    }
    return dateTime;
  };
  dart.defineLazy(http_date, {
    /*http_date._weekdays*/get _weekdays() {
      return C[120] || CT.C120;
    },
    /*http_date._months*/get _months() {
      return C[121] || CT.C121;
    },
    /*http_date._shortWeekdayRegExp*/get _shortWeekdayRegExp() {
      return core.RegExp.new("Mon|Tue|Wed|Thu|Fri|Sat|Sun");
    },
    /*http_date._longWeekdayRegExp*/get _longWeekdayRegExp() {
      return core.RegExp.new("Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday");
    },
    /*http_date._monthRegExp*/get _monthRegExp() {
      return core.RegExp.new("Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec");
    },
    /*http_date._digitRegExp*/get _digitRegExp() {
      return core.RegExp.new("\\d+");
    }
  }, false);
  media_type.MediaType = class MediaType extends core.Object {
    get type() {
      return this[S.type$6];
    }
    set type(value) {
      super.type = value;
    }
    get subtype() {
      return this[S.subtype];
    }
    set subtype(value) {
      super.subtype = value;
    }
    get parameters() {
      return this[S.parameters$2];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get mimeType() {
      return this.type + "/" + this.subtype;
    }
    static parse(mediaType) {
      return utils$1.wrapFormatException(media_type.MediaType, "media type", mediaType, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(mediaType);
        scanner.scan(scan.whitespace);
        scanner.expect(scan.token);
        let type = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.expect("/");
        scanner.expect(scan.token);
        let subtype = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.scan(scan.whitespace);
        let parameters = new (T$.IdentityMapOfString$String()).new();
        while (scanner.scan(";")) {
          scanner.scan(scan.whitespace);
          scanner.expect(scan.token);
          let attribute = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          scanner.expect("=");
          let value = null;
          if (scanner.scan(scan.token)) {
            value = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          } else {
            value = scan.expectQuotedString(scanner);
          }
          scanner.scan(scan.whitespace);
          parameters[S$.$_set](attribute, value);
        }
        scanner.expectDone();
        return new media_type.MediaType.new(type, subtype, parameters);
      }, T$.VoidToMediaType()));
    }
    static ['_#parse#tearOff'](mediaType) {
      return media_type.MediaType.parse(mediaType);
    }
    static ['_#new#tearOff'](type, subtype, parameters = null) {
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    change(opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let subtype = opts && 'subtype' in opts ? opts.subtype : null;
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let clearParameters = opts && 'clearParameters' in opts ? opts.clearParameters : false;
      if (mimeType != null) {
        if (type != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [type] and [mimeType]."));
        } else if (subtype != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [subtype] and " + "[mimeType]."));
        }
        let segments = mimeType[S$.$split]("/");
        if (segments[S$.$length] !== 2) {
          dart.throw(new core.FormatException.new("Invalid mime type \"" + dart.str(mimeType) + "\"."));
        }
        type = segments[S$.$_get](0);
        subtype = segments[S$.$_get](1);
      }
      type == null ? type = this.type : null;
      subtype == null ? subtype = this.subtype : null;
      parameters == null ? parameters = new (T$.IdentityMapOfString$String()).new() : null;
      if (!clearParameters) {
        let newParameters = parameters;
        parameters = T$.LinkedHashMapOfString$String().from(this.parameters);
        parameters[S$.$addAll](newParameters);
      }
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    toString() {
      let t252;
      let buffer = (t252 = new core.StringBuffer.new(), (() => {
        t252.write(this.type);
        t252.write("/");
        t252.write(this.subtype);
        return t252;
      })());
      this.parameters[S$.$forEach](dart.fn((attribute, value) => {
        let t252;
        buffer.write("; " + attribute + "=");
        if (scan.nonToken.hasMatch(value)) {
          t252 = buffer;
          (() => {
            t252.write("\"");
            t252.write(value[S.$replaceAllMapped](media_type._escapedChar, dart.fn(match => "\\" + dart.str(match._get(0)), T$.MatchToString())));
            t252.write("\"");
            return t252;
          })();
        } else {
          buffer.write(value);
        }
      }, T$.StringAndStringTovoid()));
      return buffer.toString();
    }
  };
  (media_type.MediaType.new = function(type, subtype, parameters = null) {
    this[S.type$6] = type[S$.$toLowerCase]();
    this[S.subtype] = subtype[S$.$toLowerCase]();
    this[S.parameters$2] = new (T$.UnmodifiableMapViewOfString$String()).new(parameters == null ? new (T$.IdentityMapOfString$String()).new() : new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = media_type.MediaType.prototype;
  dart.addTypeTests(media_type.MediaType);
  dart.addTypeCaches(media_type.MediaType);
  dart.setMethodSignature(media_type.MediaType, () => ({
    __proto__: dart.getMethods(media_type.MediaType.__proto__),
    change: dart.fnType(media_type.MediaType, [], {clearParameters: core.bool, mimeType: dart.nullable(core.String), parameters: dart.nullable(core.Map$(core.String, core.String)), subtype: dart.nullable(core.String), type: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(media_type.MediaType, () => ['parse']);
  dart.setGetterSignature(media_type.MediaType, () => ({
    __proto__: dart.getGetters(media_type.MediaType.__proto__),
    mimeType: core.String
  }));
  dart.setLibraryUri(media_type.MediaType, I[154]);
  dart.setFieldSignature(media_type.MediaType, () => ({
    __proto__: dart.getFields(media_type.MediaType.__proto__),
    type: dart.finalFieldType(core.String),
    subtype: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  dart.defineExtensionMethods(media_type.MediaType, ['toString']);
  dart.defineLazy(media_type, {
    /*media_type._escapedChar*/get _escapedChar() {
      return core.RegExp.new("[\"\\x00-\\x1F\\x7F]");
    }
  }, false);
  method_channel_field_value.FieldValueType = class FieldValueType extends core._Enum {
    [S$._enumToString]() {
      return "FieldValueType." + this[S$._name];
    }
  };
  (method_channel_field_value.FieldValueType.new = function(index, name) {
    method_channel_field_value.FieldValueType.__proto__.new.call(this, index, name);
    ;
  }).prototype = method_channel_field_value.FieldValueType.prototype;
  dart.addTypeTests(method_channel_field_value.FieldValueType);
  dart.addTypeCaches(method_channel_field_value.FieldValueType);
  dart.setMethodSignature(method_channel_field_value.FieldValueType, () => ({
    __proto__: dart.getMethods(method_channel_field_value.FieldValueType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(method_channel_field_value.FieldValueType, I[155]);
  dart.setStaticFieldSignature(method_channel_field_value.FieldValueType, () => ['values', 'arrayUnion', 'arrayRemove', 'delete', 'serverTimestamp', 'incrementDouble', 'incrementInteger']);
  dart.defineLazy(method_channel_field_value.FieldValueType, {
    /*method_channel_field_value.FieldValueType.values*/get values() {
      return C[122] || CT.C122;
    },
    /*method_channel_field_value.FieldValueType.arrayUnion*/get arrayUnion() {
      return C[71] || CT.C71;
    },
    /*method_channel_field_value.FieldValueType.arrayRemove*/get arrayRemove() {
      return C[72] || CT.C72;
    },
    /*method_channel_field_value.FieldValueType.delete*/get delete() {
      return C[73] || CT.C73;
    },
    /*method_channel_field_value.FieldValueType.serverTimestamp*/get serverTimestamp() {
      return C[74] || CT.C74;
    },
    /*method_channel_field_value.FieldValueType.incrementDouble*/get incrementDouble() {
      return C[75] || CT.C75;
    },
    /*method_channel_field_value.FieldValueType.incrementInteger*/get incrementInteger() {
      return C[76] || CT.C76;
    }
  }, false);
  method_channel_field_value.MethodChannelFieldValue = class MethodChannelFieldValue extends core.Object {
    get type() {
      return this[S.type$7];
    }
    set type(value) {
      super.type = value;
    }
    get value() {
      return this[S.value$3];
    }
    set value(value) {
      super.value = value;
    }
    static ['_#new#tearOff'](type, value) {
      return new method_channel_field_value.MethodChannelFieldValue.new(type, value);
    }
    _equals(other) {
      if (other == null) return false;
      return method_channel_field_value.MethodChannelFieldValue.is(other) && other.type === this.type && (C[17] || CT.C17).equals(other.value, this.value);
    }
    get hashCode() {
      return core.Object.hash(this.type, this.value);
    }
  };
  (method_channel_field_value.MethodChannelFieldValue.new = function(type, value) {
    this[S.type$7] = type;
    this[S.value$3] = value;
    ;
  }).prototype = method_channel_field_value.MethodChannelFieldValue.prototype;
  dart.addTypeTests(method_channel_field_value.MethodChannelFieldValue);
  dart.addTypeCaches(method_channel_field_value.MethodChannelFieldValue);
  dart.setLibraryUri(method_channel_field_value.MethodChannelFieldValue, I[155]);
  dart.setFieldSignature(method_channel_field_value.MethodChannelFieldValue, () => ({
    __proto__: dart.getFields(method_channel_field_value.MethodChannelFieldValue.__proto__),
    type: dart.finalFieldType(method_channel_field_value.FieldValueType),
    value: dart.finalFieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(method_channel_field_value.MethodChannelFieldValue, ['_equals']);
  dart.defineExtensionAccessors(method_channel_field_value.MethodChannelFieldValue, ['hashCode']);
  method_channel_query.MethodChannelQuery = class MethodChannelQuery extends platform_interface_query.QueryPlatform {
    get isCollectionGroupQuery() {
      return this[S.isCollectionGroupQuery$1];
    }
    set isCollectionGroupQuery(value) {
      super.isCollectionGroupQuery = value;
    }
    get pigeonApp() {
      return this[S.pigeonApp];
    }
    set pigeonApp(value) {
      super.pigeonApp = value;
    }
    static ['_#new#tearOff'](_firestore, path, pigeonApp, opts) {
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
      return new method_channel_query.MethodChannelQuery.new(_firestore, path, pigeonApp, {parameters: parameters, isCollectionGroupQuery: isCollectionGroupQuery});
    }
    get path() {
      return this[S._pointer$4].path;
    }
    get [S._pigeonParameters]() {
      return new messages$46pigeon$.PigeonQueryParameters.new({where: T$.ListNOfListNOfObjectN().as(this.parameters[S$.$_get]("where")), orderBy: T$.ListNOfListNOfObjectN().as(this.parameters[S$.$_get]("orderBy")), limit: T$.intN().as(this.parameters[S$.$_get]("limit")), limitToLast: T$.intN().as(this.parameters[S$.$_get]("limitToLast")), startAt: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("startAt")), startAfter: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("startAfter")), endAt: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("endAt")), endBefore: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("endBefore")), filters: T$.MapNOfStringN$ObjectN().as(this.parameters[S$.$_get]("filters"))});
    }
    [S._copyWithParameters$1](parameters) {
      let t254;
      return new method_channel_query.MethodChannelQuery.new(this.firestore, this[S._pointer$4].path, this.pigeonApp, {isCollectionGroupQuery: this.isCollectionGroupQuery, parameters: T$.MapOfString$dynamic().unmodifiable((t254 = T$.LinkedHashMapOfString$dynamic().from(this.parameters), (() => {
          t254[S$.$addAll](parameters);
          return t254;
        })()))});
    }
    endAtDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", values, "endBefore", null]));
    }
    endAt(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["endAt", fields, "endBefore", null]));
    }
    endBeforeDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", null, "endBefore", values]));
    }
    endBefore(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["endAt", null, "endBefore", fields]));
    }
    get(options = C[5] || CT.C5) {
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* get() {
        try {
          let result = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.queryGet(this.pigeonApp, this[S._pointer$4].path, this.isCollectionGroupQuery, this[S._pigeonParameters], new messages$46pigeon$.PigeonGetOptions.new({source: options.source, serverTimestampBehavior: options.serverTimestampBehavior})));
          return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(this.firestore, result);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    limit(limit) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["limit", limit, "limitToLast", null]));
    }
    limitToLast(limit) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["limit", null, "limitToLast", limit]));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[6] || CT.C6;
      let controller = null;
      function controller$35get() {
        let t256;
        t256 = controller;
        return t256 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t256;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let snapshotStreamSubscription = null;
      controller$35set(T$.StreamControllerOfQuerySnapshotPlatform().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.querySnapshot(this.pigeonApp, this[S._pointer$4].path, this.isCollectionGroupQuery, this[S._pigeonParameters], new messages$46pigeon$.PigeonGetOptions.new({source: messages$46pigeon$.Source.serverAndCache, serverTimestampBehavior: serverTimestampBehavior}), includeMetadataChanges));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.querySnapshotChannel(observerId), {onError: C[114] || CT.C114}).listen(dart.fn(snapshot => {
            let snapshotList = T$.ListOfObjectN().as(snapshot);
            let documents = core.List.as(dart.nullCheck(snapshotList[S$.$_get](0)))[S$.$map](messages$46pigeon$.PigeonDocumentSnapshot, dart.fn(e => messages$46pigeon$.PigeonDocumentSnapshot.decode(core.Object.as(e)), T$.dynamicToPigeonDocumentSnapshot()))[S$.$toList]()[S$.$cast](messages$46pigeon$.PigeonDocumentSnapshot);
            let changes = core.List.as(dart.nullCheck(snapshotList[S$.$_get](1)))[S$.$map](messages$46pigeon$.PigeonDocumentChange, dart.fn(e => messages$46pigeon$.PigeonDocumentChange.decode(core.Object.as(e)), T$.dynamicToPigeonDocumentChange()))[S$.$toList]()[S$.$cast](messages$46pigeon$.PigeonDocumentChange);
            let result = messages$46pigeon$.PigeonQuerySnapshot.decode(T$.JSArrayOfObjectN().of([documents, changes, snapshotList[S$.$_get](2)]));
            controller$35get().add(new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(this.firestore, result));
          }, T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t258;
          t258 = snapshotStreamSubscription;
          t258 == null ? null : t258.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
    orderBy(orders) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders]));
    }
    startAfterDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", null, "startAfter", values]));
    }
    startAfter(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["startAt", null, "startAfter", fields]));
    }
    startAtDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", values, "startAfter", null]));
    }
    startAt(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["startAt", fields, "startAfter", null]));
    }
    where(conditions) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["where", conditions]));
    }
    whereFilter(filter) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["filters", filter.toJson()]));
    }
    count() {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$4].path, this.pigeonApp, T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.count})]), this.isCollectionGroupQuery);
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      let fields = T$.JSArrayOfAggregateFieldN().of([aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30])[S$.$whereType](platform_interface_query.AggregateField);
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$4].path, this.pigeonApp, fields[S$.$map](messages$46pigeon$.AggregateQuery, dart.fn(e => {
        if (platform_interface_query.count.is(e)) {
          return new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.count});
        } else if (platform_interface_query.sum.is(e)) {
          return new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.sum, field: e.field});
        } else if (platform_interface_query.average.is(e)) {
          return new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.average, field: e.field});
        } else {
          dart.throw(new core.ArgumentError.new("Unsupported aggregate method " + dart.str(e[S$.$runtimeType])));
        }
      }, T$.AggregateFieldToAggregateQuery()))[S$.$toList](), this.isCollectionGroupQuery);
    }
    sum(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$4].path, this.pigeonApp, T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.sum, field: field})]), this.isCollectionGroupQuery);
    }
    average(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$4].path, this.pigeonApp, T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.average, field: field})]), this.isCollectionGroupQuery);
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && method_channel_query.MethodChannelQuery.is(other) && other.firestore._equals(this.firestore) && other[S._pointer$4]._equals(this[S._pointer$4]) && other.isCollectionGroupQuery === this.isCollectionGroupQuery && (C[17] || CT.C17).equals(other.parameters, this.parameters);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S._pointer$4], this.isCollectionGroupQuery, (C[17] || CT.C17).hash(this.parameters));
    }
  };
  (method_channel_query.MethodChannelQuery.new = function(_firestore, path, pigeonApp, opts) {
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
    this[S.pigeonApp] = pigeonApp;
    this[S.isCollectionGroupQuery$1] = isCollectionGroupQuery;
    this[S._pointer$4] = new pointer.Pointer.new(path);
    method_channel_query.MethodChannelQuery.__proto__.new.call(this, _firestore, parameters);
    ;
  }).prototype = method_channel_query.MethodChannelQuery.prototype;
  dart.addTypeTests(method_channel_query.MethodChannelQuery);
  dart.addTypeCaches(method_channel_query.MethodChannelQuery);
  dart.setMethodSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getMethods(method_channel_query.MethodChannelQuery.__proto__),
    [S._copyWithParameters$1]: dart.fnType(method_channel_query.MethodChannelQuery, [core.Map$(core.String, dart.dynamic)]),
    snapshots: dart.fnType(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], {includeMetadataChanges: core.bool, serverTimestampBehavior: messages$46pigeon$.ServerTimestampBehavior}, {}),
    where: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable$(core.List)])
  }));
  dart.setGetterSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getGetters(method_channel_query.MethodChannelQuery.__proto__),
    path: core.String,
    [S._pigeonParameters]: messages$46pigeon$.PigeonQueryParameters
  }));
  dart.setLibraryUri(method_channel_query.MethodChannelQuery, I[156]);
  dart.setFieldSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getFields(method_channel_query.MethodChannelQuery.__proto__),
    isCollectionGroupQuery: dart.finalFieldType(core.bool),
    [S._pointer$4]: dart.finalFieldType(pointer.Pointer),
    pigeonApp: dart.finalFieldType(messages$46pigeon$.FirestorePigeonFirebaseApp)
  }));
  dart.defineExtensionMethods(method_channel_query.MethodChannelQuery, ['_equals']);
  dart.defineExtensionAccessors(method_channel_query.MethodChannelQuery, ['hashCode']);
  method_channel_load_bundle_task.MethodChannelLoadBundleTask = class MethodChannelLoadBundleTask extends platform_interface_load_bundle_task.LoadBundleTaskPlatform {
    static ['_#new#tearOff'](opts) {
      let task = opts && 'task' in opts ? opts.task : null;
      return new method_channel_load_bundle_task.MethodChannelLoadBundleTask.new({task: task});
    }
    get stream() {
      let t259;
      t259 = this[S.__MethodChannelLoadBundleTask_stream];
      return t259 == null ? dart.throw(new _internal.LateError.fieldNI("stream")) : t259;
    }
    set stream(stream$35param) {
      if (this[S.__MethodChannelLoadBundleTask_stream] == null)
        this[S.__MethodChannelLoadBundleTask_stream] = stream$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("stream"));
    }
  };
  (method_channel_load_bundle_task.MethodChannelLoadBundleTask.new = function(opts) {
    let task = opts && 'task' in opts ? opts.task : null;
    this[S.__MethodChannelLoadBundleTask_stream] = null;
    method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__.new.call(this);
    function mapNativeStream() {
      return new (T$._AsyncStarImplOfLoadBundleTaskSnapshotPlatform()).new(function* mapNativeStream(stream) {
        let t259, t259$;
        let observerId = (yield task);
        let nativePlatformStream = method_channel_firestore.MethodChannelFirebaseFirestore.loadBundleChannel(dart.nullCheck(observerId)).receiveBroadcastStream();
        try {
          let iter = async.StreamIterator.new(nativePlatformStream);
          try {
            while (yield iter.moveNext()) {
              let snapshot = iter.current;
              {
                let taskState = load_bundle_task_state$.convertToTaskState(core.String.as(dart.dsend(snapshot, '_get', ["taskState"])));
                if (stream.add(new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(taskState, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(snapshot))))) return;
                yield;
                if (taskState === load_bundle_task_state.LoadBundleTaskState.success) {
                  return;
                }
              }
            }
          } finally {
            yield iter.cancel();
          }
        } catch (e) {
          let exception = dart.getThrown(e);
          if (core.Object.is(exception)) {
            if (!core.Exception.is(exception) || !message_codec.PlatformException.is(exception)) {
              dart.rethrow(e);
            }
            let details = exception.details != null ? T$.LinkedHashMapOfString$String().from(core.Map.as(exception.details)) : null;
            dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: "load-bundle-error", message: (t259$ = (t259 = details, t259 == null ? null : t259[S$.$_get]("message")), t259$ == null ? "" : t259$)}));
          } else
            throw e;
        }
      }).stream;
    }
    dart.fn(mapNativeStream, T$.VoidToStreamOfLoadBundleTaskSnapshotPlatform());
    this.stream = mapNativeStream().asBroadcastStream({onListen: dart.fn(sub => sub.resume(), T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid()), onCancel: dart.fn(sub => sub.pause(), T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid())});
  }).prototype = method_channel_load_bundle_task.MethodChannelLoadBundleTask.prototype;
  dart.addTypeTests(method_channel_load_bundle_task.MethodChannelLoadBundleTask);
  dart.addTypeCaches(method_channel_load_bundle_task.MethodChannelLoadBundleTask);
  dart.setGetterSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getGetters(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setSetterSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getSetters(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setLibraryUri(method_channel_load_bundle_task.MethodChannelLoadBundleTask, I[157]);
  dart.setFieldSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getFields(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    [S.__MethodChannelLoadBundleTask_stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))
  }));
  method_channel_query_snapshot.MethodChannelQuerySnapshot = class MethodChannelQuerySnapshot extends platform_interface_query_snapshot.QuerySnapshotPlatform {
    static ['_#new#tearOff'](firestore, data) {
      return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(firestore, data);
    }
  };
  (method_channel_query_snapshot.MethodChannelQuerySnapshot.new = function(firestore, data) {
    method_channel_query_snapshot.MethodChannelQuerySnapshot.__proto__.new.call(this, iterable_extensions['IterableNullableExtension|whereNotNull'](platform_interface_document_snapshot.DocumentSnapshotPlatform, data.documents[S$.$map](T$.DocumentSnapshotPlatformN(), dart.fn(document => {
      if (document == null) {
        return null;
      }
      return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, document.path, document.data, document.metadata);
    }, T$.PigeonDocumentSnapshotNToDocumentSnapshotPlatformN())))[S$.$toList](), iterable_extensions['IterableNullableExtension|whereNotNull'](method_channel_document_change.MethodChannelDocumentChange, data.documentChanges[S$.$map](T$.MethodChannelDocumentChangeN(), dart.fn(documentChange => {
      if (documentChange == null) {
        return null;
      }
      return new method_channel_document_change.MethodChannelDocumentChange.new(firestore, documentChange);
    }, T$.PigeonDocumentChangeNToMethodChannelDocumentChangeN())))[S$.$toList](), new snapshot_metadata.SnapshotMetadataPlatform.new(data.metadata.hasPendingWrites, data.metadata.isFromCache));
    ;
  }).prototype = method_channel_query_snapshot.MethodChannelQuerySnapshot.prototype;
  dart.addTypeTests(method_channel_query_snapshot.MethodChannelQuerySnapshot);
  dart.addTypeCaches(method_channel_query_snapshot.MethodChannelQuerySnapshot);
  dart.setLibraryUri(method_channel_query_snapshot.MethodChannelQuerySnapshot, I[158]);
  method_channel_collection_reference.MethodChannelCollectionReference = class MethodChannelCollectionReference extends method_channel_query.MethodChannelQuery {
    get [S._pointer$6]() {
      return this[S._pointer$5];
    }
    set [S._pointer$6](value) {
      super[S._pointer$6] = value;
    }
    static ['_#new#tearOff'](firestore, path, pigeonApp) {
      return new method_channel_collection_reference.MethodChannelCollectionReference.new(firestore, path, pigeonApp);
    }
    get id() {
      return this[S._pointer$6].id;
    }
    get parent() {
      let parentPath = this[S._pointer$6].parentPath();
      return parentPath == null ? null : new method_channel_document_reference.MethodChannelDocumentReference.new(this.firestore, parentPath, this.pigeonApp);
    }
    get path() {
      return this[S._pointer$6].path;
    }
    doc(path = null) {
      let documentPath = null;
      if (path != null) {
        documentPath = this[S._pointer$6].documentPath(path);
      } else {
        let autoId = auto_id_generator.AutoIdGenerator.autoId();
        documentPath = this[S._pointer$6].documentPath(autoId);
      }
      return new method_channel_document_reference.MethodChannelDocumentReference.new(this.firestore, documentPath, this.pigeonApp);
    }
    get [S$._pointer$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[123] || CT.C123)));
    }
  };
  (method_channel_collection_reference.MethodChannelCollectionReference.new = function(firestore, path, pigeonApp) {
    this[S._pointer$5] = new pointer.Pointer.new(path);
    method_channel_collection_reference.MethodChannelCollectionReference.__proto__.new.call(this, firestore, path, pigeonApp);
    ;
  }).prototype = method_channel_collection_reference.MethodChannelCollectionReference.prototype;
  dart.addTypeTests(method_channel_collection_reference.MethodChannelCollectionReference);
  dart.addTypeCaches(method_channel_collection_reference.MethodChannelCollectionReference);
  method_channel_collection_reference.MethodChannelCollectionReference[dart.implements] = () => [platform_interface_collection_reference.CollectionReferencePlatform];
  dart.setMethodSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getMethods(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getGetters(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    [S$._pointer$1]: pointer.Pointer
  }));
  dart.setLibraryUri(method_channel_collection_reference.MethodChannelCollectionReference, I[159]);
  dart.setFieldSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getFields(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    [S._pointer$6]: dart.finalFieldType(pointer.Pointer)
  }));
  method_channel_document_reference.MethodChannelDocumentReference = class MethodChannelDocumentReference extends platform_interface_document_reference.DocumentReferencePlatform {
    get pigeonApp() {
      return this[S.pigeonApp$1];
    }
    set pigeonApp(value) {
      super.pigeonApp = value;
    }
    get [S._pointer$7]() {
      let t259;
      t259 = this[S.__MethodChannelDocumentReference__pointer];
      return t259 == null ? dart.throw(new _internal.LateError.fieldNI("_pointer")) : t259;
    }
    set [S._pointer$7](_pointer$35param) {
      this[S.__MethodChannelDocumentReference__pointer] = _pointer$35param;
    }
    static ['_#new#tearOff'](firestore, path, pigeonApp) {
      return new method_channel_document_reference.MethodChannelDocumentReference.new(firestore, path, pigeonApp);
    }
    set(data, options = null) {
      return async.async(dart.void, (function* set() {
        let t259, t260, t259$;
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceSet(this.pigeonApp, new messages$46pigeon$.DocumentReferenceRequest.new({path: this[S._pointer$7].path, data: data, option: new messages$46pigeon$.PigeonDocumentOption.new({merge: (t259 = options, t259 == null ? null : t259.merge), mergeFields: (t259$ = options, t259$ == null ? null : (t260 = t259$.mergeFields, t260 == null ? null : t260[S$.$map](T$.ListOfString(), dart.fn(e => e.components, T$.FieldPathToListOfString()))[S$.$toList]()))})}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    update(data) {
      return async.async(dart.void, (function* update() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceUpdate(this.pigeonApp, new messages$46pigeon$.DocumentReferenceRequest.new({path: this[S._pointer$7].path, data: data}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get(options = C[5] || CT.C5) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        try {
          let result = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceGet(this.pigeonApp, new messages$46pigeon$.DocumentReferenceRequest.new({path: this[S._pointer$7].path, source: options.source, serverTimestampBehavior: options.serverTimestampBehavior})));
          return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this.firestore, this[S._pointer$7].path, result.data, result.metadata);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceDelete(this.pigeonApp, new messages$46pigeon$.DocumentReferenceRequest.new({path: this[S._pointer$7].path}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[6] || CT.C6;
      let controller = null;
      function controller$35get() {
        let t264;
        t264 = controller;
        return t264 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t264;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let snapshotStreamSubscription = null;
      controller$35set(T$.StreamControllerOfDocumentSnapshotPlatform().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceSnapshot(this.pigeonApp, new messages$46pigeon$.DocumentReferenceRequest.new({path: this[S._pointer$7].path, serverTimestampBehavior: serverTimestampBehavior}), includeMetadataChanges));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.documentSnapshotChannel(observerId), {onError: C[114] || CT.C114}).listen(dart.fn(snapshot => {
            let result = messages$46pigeon$.PigeonDocumentSnapshot.decode(core.Object.as(snapshot));
            controller$35get().add(new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this.firestore, result.path, result.data, result.metadata));
          }, T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t266;
          t266 = snapshotStreamSubscription;
          t266 == null ? null : t266.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
  };
  (method_channel_document_reference.MethodChannelDocumentReference.new = function(firestore, path, pigeonApp) {
    this[S.__MethodChannelDocumentReference__pointer] = null;
    this[S.pigeonApp$1] = pigeonApp;
    method_channel_document_reference.MethodChannelDocumentReference.__proto__.new.call(this, firestore, path);
    this[S._pointer$7] = new pointer.Pointer.new(path);
  }).prototype = method_channel_document_reference.MethodChannelDocumentReference.prototype;
  dart.addTypeTests(method_channel_document_reference.MethodChannelDocumentReference);
  dart.addTypeCaches(method_channel_document_reference.MethodChannelDocumentReference);
  dart.setMethodSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getMethods(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    snapshots: dart.fnType(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], {includeMetadataChanges: core.bool, serverTimestampBehavior: messages$46pigeon$.ServerTimestampBehavior}, {})
  }));
  dart.setGetterSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getGetters(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S._pointer$7]: pointer.Pointer
  }));
  dart.setSetterSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getSetters(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S._pointer$7]: pointer.Pointer
  }));
  dart.setLibraryUri(method_channel_document_reference.MethodChannelDocumentReference, I[160]);
  dart.setFieldSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getFields(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S.__MethodChannelDocumentReference__pointer]: dart.fieldType(dart.nullable(pointer.Pointer)),
    pigeonApp: dart.finalFieldType(messages$46pigeon$.FirestorePigeonFirebaseApp)
  }));
  method_channel_transaction.MethodChannelTransaction = class MethodChannelTransaction extends platform_interface_transaction.TransactionPlatform {
    get appName() {
      return this[S.appName$2];
    }
    set appName(value) {
      super.appName = value;
    }
    get databaseURL() {
      return this[S.databaseURL$4];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    get pigeonApp() {
      return this[S.pigeonApp$2];
    }
    set pigeonApp(value) {
      this[S.pigeonApp$2] = value;
    }
    get [S._transactionId]() {
      let t266;
      t266 = this[S.__MethodChannelTransaction__transactionId];
      return t266 == null ? dart.throw(new _internal.LateError.fieldNI("_transactionId")) : t266;
    }
    set [S._transactionId](_transactionId$35param) {
      this[S.__MethodChannelTransaction__transactionId] = _transactionId$35param;
    }
    get [S._firestore$3]() {
      let t266;
      t266 = this[S.__MethodChannelTransaction__firestore];
      return t266 == null ? dart.throw(new _internal.LateError.fieldNI("_firestore")) : t266;
    }
    set [S._firestore$3](_firestore$35param) {
      this[S.__MethodChannelTransaction__firestore] = _firestore$35param;
    }
    static ['_#new#tearOff'](transactionId, appName, pigeonApp, databaseURL) {
      return new method_channel_transaction.MethodChannelTransaction.new(transactionId, appName, pigeonApp, databaseURL);
    }
    get commands() {
      return this[S._commands];
    }
    get(documentPath) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        if (!this[S._commands][S$.$isEmpty]) dart.assertFailed("Transactions require all reads to be executed before all writes.", I[161], 47, 12, "_commands.isEmpty");
        try {
          let result = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionGet(this.pigeonApp, this[S._transactionId], documentPath));
          return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this[S._firestore$3], documentPath, result.data, result.metadata);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete(documentPath) {
      this[S._commands][S$.$add](new messages$46pigeon$.PigeonTransactionCommand.new({type: messages$46pigeon$.PigeonTransactionType.deleteType, path: documentPath}));
      return this;
    }
    update(documentPath, data) {
      this[S._commands][S$.$add](new messages$46pigeon$.PigeonTransactionCommand.new({type: messages$46pigeon$.PigeonTransactionType.update, path: documentPath, data: data}));
      return this;
    }
    set(documentPath, data, options = null) {
      let t267, t268, t267$;
      this[S._commands][S$.$add](new messages$46pigeon$.PigeonTransactionCommand.new({type: messages$46pigeon$.PigeonTransactionType.set, path: documentPath, data: data, option: new messages$46pigeon$.PigeonDocumentOption.new({merge: (t267 = options, t267 == null ? null : t267.merge), mergeFields: (t267$ = options, t267$ == null ? null : (t268 = t267$.mergeFields, t268 == null ? null : t268[S$.$map](T$.ListOfString(), dart.fn(e => e.components, T$.FieldPathToListOfString()))[S$.$toList]()))})}));
      return this;
    }
  };
  (method_channel_transaction.MethodChannelTransaction.new = function(transactionId, appName, pigeonApp, databaseURL) {
    this[S.__MethodChannelTransaction__transactionId] = null;
    this[S.__MethodChannelTransaction__firestore] = null;
    this[S._commands] = T$.JSArrayOfPigeonTransactionCommand().of([]);
    this[S.appName$2] = appName;
    this[S.pigeonApp$2] = pigeonApp;
    this[S.databaseURL$4] = databaseURL;
    this[S.__MethodChannelTransaction__transactionId] = transactionId;
    method_channel_transaction.MethodChannelTransaction.__proto__.new.call(this);
    this[S._firestore$3] = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: firebase_core.Firebase.app(this.appName), databaseURL: this.databaseURL});
  }).prototype = method_channel_transaction.MethodChannelTransaction.prototype;
  dart.addTypeTests(method_channel_transaction.MethodChannelTransaction);
  dart.addTypeCaches(method_channel_transaction.MethodChannelTransaction);
  dart.setMethodSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getMethods(method_channel_transaction.MethodChannelTransaction.__proto__),
    delete: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String]),
    update: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String, core.Map$(core.String, dart.dynamic)]),
    set: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)])
  }));
  dart.setGetterSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getGetters(method_channel_transaction.MethodChannelTransaction.__proto__),
    [S._transactionId]: core.String,
    [S._firestore$3]: platform_interface_firestore.FirebaseFirestorePlatform
  }));
  dart.setSetterSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getSetters(method_channel_transaction.MethodChannelTransaction.__proto__),
    [S._transactionId]: core.String,
    [S._firestore$3]: platform_interface_firestore.FirebaseFirestorePlatform
  }));
  dart.setLibraryUri(method_channel_transaction.MethodChannelTransaction, I[162]);
  dart.setFieldSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getFields(method_channel_transaction.MethodChannelTransaction.__proto__),
    appName: dart.finalFieldType(core.String),
    databaseURL: dart.finalFieldType(core.String),
    [S.__MethodChannelTransaction__transactionId]: dart.fieldType(dart.nullable(core.String)),
    [S.__MethodChannelTransaction__firestore]: dart.fieldType(dart.nullable(platform_interface_firestore.FirebaseFirestorePlatform)),
    pigeonApp: dart.fieldType(messages$46pigeon$.FirestorePigeonFirebaseApp),
    [S._commands]: dart.fieldType(core.List$(messages$46pigeon$.PigeonTransactionCommand))
  }));
  method_channel_write_batch.MethodChannelWriteBatch = class MethodChannelWriteBatch extends platform_interface_write_batch.WriteBatchPlatform {
    get pigeonApp() {
      return this[S.pigeonApp$3];
    }
    set pigeonApp(value) {
      super.pigeonApp = value;
    }
    static ['_#new#tearOff'](pigeonApp) {
      return new method_channel_write_batch.MethodChannelWriteBatch.new(pigeonApp);
    }
    commit() {
      return async.async(dart.void, (function* commit() {
        this[S._assertNotCommitted]();
        this[S._committed] = true;
        if (this[S._writes][S$.$isEmpty]) {
          return;
        }
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.writeBatchCommit(this.pigeonApp, this[S._writes]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete(documentPath) {
      this[S._assertNotCommitted]();
      this[S._writes][S$.$add](new messages$46pigeon$.PigeonTransactionCommand.new({path: documentPath, type: messages$46pigeon$.PigeonTransactionType.deleteType}));
    }
    set(documentPath, data, options = null) {
      let t268, t269, t268$;
      this[S._assertNotCommitted]();
      this[S._writes][S$.$add](new messages$46pigeon$.PigeonTransactionCommand.new({path: documentPath, type: messages$46pigeon$.PigeonTransactionType.set, data: data, option: new messages$46pigeon$.PigeonDocumentOption.new({merge: (t268 = options, t268 == null ? null : t268.merge), mergeFields: (t268$ = options, t268$ == null ? null : (t269 = t268$.mergeFields, t269 == null ? null : t269[S$.$map](T$.ListOfString(), dart.fn(e => e.components, T$.FieldPathToListOfString()))[S$.$toList]()))})}));
    }
    update(documentPath, data) {
      this[S._assertNotCommitted]();
      this[S._writes][S$.$add](new messages$46pigeon$.PigeonTransactionCommand.new({path: documentPath, type: messages$46pigeon$.PigeonTransactionType.update, data: data}));
    }
    [S._assertNotCommitted]() {
      if (this[S._committed]) {
        dart.throw(new core.StateError.new("This batch has already been committed and can no longer be changed."));
      }
    }
  };
  (method_channel_write_batch.MethodChannelWriteBatch.new = function(pigeonApp) {
    this[S._writes] = T$.JSArrayOfPigeonTransactionCommand().of([]);
    this[S._committed] = false;
    this[S.pigeonApp$3] = pigeonApp;
    method_channel_write_batch.MethodChannelWriteBatch.__proto__.new.call(this);
    ;
  }).prototype = method_channel_write_batch.MethodChannelWriteBatch.prototype;
  dart.addTypeTests(method_channel_write_batch.MethodChannelWriteBatch);
  dart.addTypeCaches(method_channel_write_batch.MethodChannelWriteBatch);
  dart.setMethodSignature(method_channel_write_batch.MethodChannelWriteBatch, () => ({
    __proto__: dart.getMethods(method_channel_write_batch.MethodChannelWriteBatch.__proto__),
    [S._assertNotCommitted]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(method_channel_write_batch.MethodChannelWriteBatch, I[163]);
  dart.setFieldSignature(method_channel_write_batch.MethodChannelWriteBatch, () => ({
    __proto__: dart.getFields(method_channel_write_batch.MethodChannelWriteBatch.__proto__),
    pigeonApp: dart.finalFieldType(messages$46pigeon$.FirestorePigeonFirebaseApp),
    [S._writes]: dart.fieldType(core.List$(messages$46pigeon$.PigeonTransactionCommand)),
    [S._committed]: dart.fieldType(core.bool)
  }));
  exception.convertPlatformException = function convertPlatformException(exception, stackTrace) {
    exception$.convertPlatformExceptionToFirebaseException(exception, stackTrace, {plugin: "cloud_firestore"});
  };
  convert_auth_provider.convertToOAuthProvider = function convertToOAuthProvider(authProvider) {
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    return authProvider;
  };
  const multiFactor$ = Symbol("multiFactor");
  method_channel_user.MethodChannelUser = class MethodChannelUser extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, data) {
      return new method_channel_user.MethodChannelUser.new(auth, multiFactor, data);
    }
    get pigeonDefault() {
      return new messages$46pigeon$0.AuthPigeonFirebaseApp.new({appName: this.auth.app.name, tenantId: this.auth.tenantId});
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield this[S._api$3].delete(this.pigeonDefault);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(T$.StringN(), (function* getIdToken() {
        try {
          let data = (yield this[S._api$3].getIdToken(this.pigeonDefault, forceRefresh));
          return data.token;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        try {
          let data = (yield this[S._api$3].getIdToken(this.pigeonDefault, forceRefresh));
          return new id_token_result.IdTokenResult.new(data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        try {
          let result = (yield this[S._api$3].linkWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[S._api$3].linkWithProvider(this.pigeonDefault, new messages$46pigeon$0.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        try {
          let result = (yield this[S._api$3].reauthenticateWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[S._api$3].reauthenticateWithProvider(this.pigeonDefault, new messages$46pigeon$0.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        try {
          let result = (yield this[S._api$3].reload(this.pigeonDefault));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, (function* sendEmailVerification() {
        try {
          yield this[S._api$3].sendEmailVerification(this.pigeonDefault, actionCodeSettings == null ? null : new messages$46pigeon$0.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        try {
          let result = (yield this[S._api$3].unlink(this.pigeonDefault, providerId));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          let user = T$.MethodChannelUserN().as(userCredential.user);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
          return dart.nullCheck(user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        try {
          let result = (yield this[S._api$3].updateEmail(this.pigeonDefault, newEmail));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        try {
          let result = (yield this[S._api$3].updatePassword(this.pigeonDefault, newPassword));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        try {
          let result = (yield this[S._api$3].updatePhoneNumber(this.pigeonDefault, phoneCredential.asMap()));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        try {
          let result = (yield this[S._api$3].updateProfile(this.pigeonDefault, new messages$46pigeon$0.PigeonUserProfile.new({displayName: profile[S$.$_get]("displayName"), photoUrl: profile[S$.$_get]("photoURL"), displayNameChanged: profile[S$.$containsKey]("displayName"), photoUrlChanged: profile[S$.$containsKey]("photoURL")})));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        try {
          yield this[S._api$3].verifyBeforeUpdateEmail(this.pigeonDefault, newEmail, actionCodeSettings == null ? null : new messages$46pigeon$0.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get [multiFactor$]() {
      return super.multiFactor;
    }
  };
  (method_channel_user.MethodChannelUser.new = function(auth, multiFactor, data) {
    this[S._api$3] = new messages$46pigeon$0.FirebaseAuthUserHostApi.new();
    method_channel_user.MethodChannelUser.__proto__.new.call(this, auth, multiFactor, data);
    ;
  }).prototype = method_channel_user.MethodChannelUser.prototype;
  dart.addTypeTests(method_channel_user.MethodChannelUser);
  dart.addTypeCaches(method_channel_user.MethodChannelUser);
  dart.setGetterSignature(method_channel_user.MethodChannelUser, () => ({
    __proto__: dart.getGetters(method_channel_user.MethodChannelUser.__proto__),
    pigeonDefault: messages$46pigeon$0.AuthPigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_user.MethodChannelUser, I[164]);
  dart.setFieldSignature(method_channel_user.MethodChannelUser, () => ({
    __proto__: dart.getFields(method_channel_user.MethodChannelUser.__proto__),
    [S._api$3]: dart.finalFieldType(messages$46pigeon$0.FirebaseAuthUserHostApi)
  }));
  method_channel_user_credential.MethodChannelUserCredential = class MethodChannelUserCredential extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, data) {
      return new method_channel_user_credential.MethodChannelUserCredential.new(auth, data);
    }
  };
  (method_channel_user_credential.MethodChannelUserCredential.new = function(auth, data) {
    let t283, t283$;
    method_channel_user_credential.MethodChannelUserCredential.__proto__.new.call(this, {auth: auth, additionalUserInfo: data.additionalUserInfo == null ? null : new additional_user_info.AdditionalUserInfo.new({isNewUser: dart.nullCheck(data.additionalUserInfo).isNewUser, profile: T$.LinkedHashMapOfString$dynamic().from((t283 = dart.nullCheck(data.additionalUserInfo).profile, t283 == null ? new _js_helper.LinkedMap.new() : t283)), providerId: dart.nullCheck(data.additionalUserInfo).providerId, username: dart.nullCheck(data.additionalUserInfo).username, authorizationCode: (t283$ = data.additionalUserInfo, t283$ == null ? null : t283$.authorizationCode)}), credential: data.credential == null ? null : new auth_credential.AuthCredential.new({providerId: dart.nullCheck(data.credential).providerId, signInMethod: dart.nullCheck(data.credential).signInMethod, token: dart.nullCheck(data.credential).nativeId, accessToken: dart.nullCheck(data.credential).accessToken}), user: data.user == null ? null : new method_channel_user.MethodChannelUser.new(auth, new method_channel_multi_factor.MethodChannelMultiFactor.new(auth), dart.nullCheck(data.user))});
    ;
  }).prototype = method_channel_user_credential.MethodChannelUserCredential.prototype;
  dart.addTypeTests(method_channel_user_credential.MethodChannelUserCredential);
  dart.addTypeCaches(method_channel_user_credential.MethodChannelUserCredential);
  dart.setLibraryUri(method_channel_user_credential.MethodChannelUserCredential, I[165]);
  exception$0.convertPlatformException = function convertPlatformException$(exception, stackTrace, opts) {
    let fromPigeon = opts && 'fromPigeon' in opts ? opts.fromPigeon : true;
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$0.platformExceptionToFirebaseAuthException(exception, {fromPigeon: fromPigeon}), stackTrace);
  };
  exception$0.platformExceptionToFirebaseAuthException = function platformExceptionToFirebaseAuthException(platformException, opts) {
    let t283, t283$, t283$0;
    let fromPigeon = opts && 'fromPigeon' in opts ? opts.fromPigeon : true;
    if (fromPigeon) {
      let code = platformException.code[S$.$replaceAll]("ERROR_", "")[S$.$toLowerCase]()[S$.$replaceAll]("_", "-");
      let customCode = exception$0._getCustomCode(T$.MapN().as(platformException.details), platformException.message);
      if (customCode != null) {
        code = customCode;
      }
      if (code[S$.$isNotEmpty]) {
        if (code === "second-factor-required") {
          return exception$0.parseMultiFactorError(platformException);
        }
      }
      let credential = null;
      let email = null;
      if (platformException.details != null) {
        if (dart.dsend(platformException.details, '_get', ["authCredential"]) != null && messages$46pigeon$0.PigeonAuthCredential.is(dart.dsend(platformException.details, '_get', ["authCredential"]))) {
          let pigeonAuthCredential = messages$46pigeon$0.PigeonAuthCredential.as(dart.dsend(platformException.details, '_get', ["authCredential"]));
          credential = new auth_credential.AuthCredential.new({providerId: pigeonAuthCredential.providerId, signInMethod: pigeonAuthCredential.signInMethod, token: pigeonAuthCredential.nativeId, accessToken: pigeonAuthCredential.accessToken});
        }
        if (dart.dsend(platformException.details, '_get', ["email"]) != null) {
          email = T$.StringN().as(dart.dsend(platformException.details, '_get', ["email"]));
        }
      }
      return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: (t283 = platformException.message, t283 == null ? null : t283[S$.$split](": ")[S$.$last]), credential: credential, email: email});
    }
    let details = platformException.details != null ? T$.LinkedHashMapOfString$dynamic().from(core.Map.as(platformException.details)) : null;
    let code = "unknown";
    let message = platformException.message;
    let email = null;
    let credential = null;
    if (details != null) {
      code = core.String.as((t283$ = details[S$.$_get]("code"), t283$ == null ? code : t283$));
      if (code === "second-factor-required") {
        return exception$0.parseMultiFactorError(platformException);
      }
      message = T$.StringN().as((t283$0 = details[S$.$_get]("message"), t283$0 == null ? message : t283$0));
      let additionalData = details[S$.$_get]("additionalData");
      if (additionalData != null) {
        if (dart.dsend(additionalData, '_get', ["authCredential"]) != null) {
          credential = new auth_credential.AuthCredential.new({providerId: core.String.as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["providerId"])), signInMethod: core.String.as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["signInMethod"])), token: T$.intN().as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["token"]))});
        }
        if (dart.dsend(additionalData, '_get', ["email"]) != null) {
          email = T$.StringN().as(dart.dsend(additionalData, '_get', ["email"]));
        }
      }
      let customCode = exception$0._getCustomCode(T$.MapN().as(additionalData), message);
      if (customCode != null) {
        code = customCode;
      }
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: email, credential: credential});
  };
  exception$0._getCustomCode = function _getCustomCode(additionalData, message) {
    let t283, t283$, t283$0;
    let listOfRecognizedCode = T$.JSArrayOfString().of(["INVALID_LOGIN_CREDENTIALS", "BLOCKING_FUNCTION_ERROR_RESPONSE"]);
    for (let recognizedCode of listOfRecognizedCode) {
      if (dart.equals((t283 = additionalData, t283 == null ? null : t283[S$.$_get]("message")), recognizedCode) || dart.test((t283$0 = (t283$ = message, t283$ == null ? null : t283$[S$.$contains](recognizedCode)), t283$0 == null ? false : t283$0))) {
        return recognizedCode;
      }
    }
    return null;
  };
  exception$0.parseMultiFactorError = function parseMultiFactorError(exception) {
    let t283;
    let message = exception.message;
    let additionalData = T$.MapNOfObjectN$ObjectN().as(exception.details);
    if (additionalData == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let pigeonMultiFactorInfo = iterable_extensions['IterableNullableExtension|whereNotNull'](core.Object, (t283 = T$.ListNOfObjectN().as(additionalData[S$.$_get]("multiFactorHints")), t283 == null ? T$.JSArrayOfObjectN().of([]) : t283))[S$.$map](messages$46pigeon$0.PigeonMultiFactorInfo, C[124] || CT.C124)[S$.$toList]();
    let multiFactorInfo = pigeon_helper.multiFactorInfoPigeonToObject(pigeonMultiFactorInfo);
    let auth = method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](additionalData[S$.$_get]("appName"));
    if (auth == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "second-factor-required", message: message}));
    }
    let sessionId = T$.StringN().as(additionalData[S$.$_get]("multiFactorSessionId"));
    let resolverId = T$.StringN().as(additionalData[S$.$_get]("multiFactorResolverId"));
    if (sessionId == null || resolverId == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let multiFactorResolver = new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(multiFactorInfo, new platform_interface_multi_factor.MultiFactorSession.new(sessionId), resolverId, auth);
    return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: "second-factor-required", message: message, resolver: multiFactorResolver});
  };
  dart.defineLazy(exception$0, {
    /*exception$0.kMultiFactorError*/get kMultiFactorError() {
      return "second-factor-required";
    }
  }, false);
  pigeon_helper.multiFactorInfoPigeonToObject = function multiFactorInfoPigeonToObject(pigeonMultiFactorInfo) {
    return iterable_extensions['IterableNullableExtension|whereNotNull'](messages$46pigeon$0.PigeonMultiFactorInfo, pigeonMultiFactorInfo)[S$.$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => {
      let t283, t283$, t283$0;
      if (e.phoneNumber != null) {
        return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t283 = e.factorId, t283 == null ? "phone" : t283), uid: e.uid, phoneNumber: dart.nullCheck(e.phoneNumber)});
      }
      if (e.factorId === "totp") {
        return new platform_interface_multi_factor.TotpMultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t283$ = e.factorId, t283$ == null ? "totp" : t283$), uid: e.uid});
      }
      return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t283$0 = e.factorId, t283$0 == null ? "" : t283$0), uid: e.uid});
    }, T$.PigeonMultiFactorInfoToMultiFactorInfo()))[S$.$toList]();
  };
  scan.parseList = function parseList(T, scanner, parseElement) {
    let result = _interceptors.JSArray$(T).of([]);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
    }
    result[S$.$add](parseElement());
    scanner.scan(scan.whitespace);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
      if (scanner.matches(",") || scanner.isDone) continue;
      result[S$.$add](parseElement());
      scanner.scan(scan.whitespace);
    }
    return result;
  };
  scan.expectQuotedString = function expectQuotedString(scanner, opts) {
    let name = opts && 'name' in opts ? opts.name : "quoted string";
    scanner.expect(scan._quotedString, {name: name});
    let string = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
    return string[S$.$substring](1, string.length - 1)[S.$replaceAllMapped](scan._quotedPair, dart.fn(match => dart.nullCheck(match._get(1)), T$.MatchToString()));
  };
  dart.defineLazy(scan, {
    /*scan.token*/get token() {
      return core.RegExp.new("[^()<>@,;:\"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+");
    },
    /*scan._lws*/get _lws() {
      return core.RegExp.new("(?:\\r\\n)?[ \\t]+");
    },
    /*scan._quotedString*/get _quotedString() {
      return core.RegExp.new("\"(?:[^\"\\x00-\\x1F\\x7F]|\\\\.)*\"");
    },
    /*scan._quotedPair*/get _quotedPair() {
      return core.RegExp.new("\\\\(.)");
    },
    /*scan.nonToken*/get nonToken() {
      return core.RegExp.new("[()<>@,;:\"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]");
    },
    /*scan.whitespace*/get whitespace() {
      return core.RegExp.new("(?:" + scan._lws.pattern + ")*");
    }
  }, false);
  utils$1.wrapFormatException = function wrapFormatException(T, name, value, body) {
    try {
      return body();
    } catch (e) {
      let ex = dart.getThrown(e);
      if (span_exception.SourceSpanFormatException.is(ex)) {
        let error = ex;
        dart.throw(new span_exception.SourceSpanFormatException.new("Invalid " + name + ": " + error.message, error.span, error.source));
      } else if (core.FormatException.is(ex)) {
        let error = ex;
        dart.throw(new core.FormatException.new("Invalid " + name + " \"" + value + "\": " + error.message, error.source, error.offset));
      } else
        throw e;
    }
  };
  decoder.ChunkedCodingDecoder = class ChunkedCodingDecoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new decoder.ChunkedCodingDecoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      let sink = new decoder._Sink.new(T$.StreamControllerOfListOfint().new());
      let output = sink[S._decode](input, 0, input[S$.$length]);
      if (sink[S._state][S$.$_equals](decoder._State.end)) return output;
      dart.throw(new core.FormatException.new("Input ended unexpectedly.", input, input[S$.$length]));
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new decoder._Sink.new(sink);
    }
  };
  (decoder.ChunkedCodingDecoder.__ = function() {
    decoder.ChunkedCodingDecoder.__proto__.new.call(this);
    ;
  }).prototype = decoder.ChunkedCodingDecoder.prototype;
  dart.addTypeTests(decoder.ChunkedCodingDecoder);
  dart.addTypeCaches(decoder.ChunkedCodingDecoder);
  dart.setMethodSignature(decoder.ChunkedCodingDecoder, () => ({
    __proto__: dart.getMethods(decoder.ChunkedCodingDecoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(decoder.ChunkedCodingDecoder, I[166]);
  decoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    get [S._size]() {
      let t285;
      t285 = this[S.___Sink__size];
      return t285 == null ? dart.throw(new _internal.LateError.fieldNI("_size")) : t285;
    }
    set [S._size](_size$35param) {
      this[S.___Sink__size] = _size$35param;
    }
    static ['_#new#tearOff'](_sink) {
      return new decoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      return this.addSlice(chunk, 0, chunk[S$.$length], false);
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[S$.$length]);
      let output = this[S._decode](chunk, start, end);
      if (output[S$.$isNotEmpty]) this[S._sink].add(output);
      if (isLast) this[S._close](chunk, end);
    }
    close() {
      return this[S._close]();
    }
    [S._close](chunk = null, index = null) {
      if (!this[S._state][S$.$_equals](decoder._State.end)) {
        dart.throw(new core.FormatException.new("Input ended unexpectedly.", chunk, index));
      }
      this[S._sink].close();
    }
    [S._decode](bytes, start, end) {
      function assertCurrentChar(char, name) {
        if (bytes[S$.$_get](start) !== char) {
          dart.throw(new core.FormatException.new("Expected " + name + ".", bytes, start));
        }
      }
      dart.fn(assertCurrentChar, T$.intAndStringTovoid());
      let buffer = new typed_buffer.Uint8Buffer.new();
      while (start !== end) {
        switch (this[S._state]) {
          case C[125] || CT.C125:
            {
              this[S._size] = this[S._digitForByte](bytes, start);
              this[S._state] = decoder._State.size;
              start = start + 1;
              break;
            }
          case C[126] || CT.C126:
            {
              if (bytes[S$.$_get](start) === 13) {
                this[S._state] = decoder._State.sizeBeforeLF;
              } else {
                this[S._size] = (this[S._size] << 4 >>> 0) + this[S._digitForByte](bytes, start);
              }
              start = start + 1;
              break;
            }
          case C[127] || CT.C127:
            {
              assertCurrentChar(10, "LF");
              this[S._state] = this[S._size] === 0 ? decoder._State.endBeforeCR : decoder._State.body;
              start = start + 1;
              break;
            }
          case C[128] || CT.C128:
            {
              let chunkEnd = math.min(core.int, end, start + this[S._size]);
              buffer.addAll(bytes, start, chunkEnd);
              this[S._size] = this[S._size] - (chunkEnd - start);
              start = chunkEnd;
              if (this[S._size] === 0) this[S._state] = decoder._State.bodyBeforeCR;
              break;
            }
          case C[129] || CT.C129:
            {
              assertCurrentChar(13, "CR");
              this[S._state] = decoder._State.bodyBeforeLF;
              start = start + 1;
              break;
            }
          case C[130] || CT.C130:
            {
              assertCurrentChar(10, "LF");
              this[S._state] = decoder._State.boundary;
              start = start + 1;
              break;
            }
          case C[131] || CT.C131:
            {
              assertCurrentChar(13, "CR");
              this[S._state] = decoder._State.endBeforeLF;
              start = start + 1;
              break;
            }
          case C[132] || CT.C132:
            {
              assertCurrentChar(10, "LF");
              this[S._state] = decoder._State.end;
              start = start + 1;
              break;
            }
          case C[133] || CT.C133:
            {
              dart.throw(new core.FormatException.new("Expected no more data.", bytes, start));
            }
        }
      }
      return buffer.buffer[S.$asUint8List](0, buffer.length);
    }
    [S._digitForByte](bytes, index) {
      let byte = bytes[S$.$_get](index);
      let digit = (48 ^ byte) >>> 0;
      if (digit <= 9) {
        if (digit >= 0) return digit;
      } else {
        let letter = (32 | byte) >>> 0;
        if (97 <= letter && letter <= 102) return letter - 97 + 10;
      }
      dart.throw(new core.FormatException.new("Invalid hexadecimal byte 0x" + byte[S.$toRadixString](16)[S.$toUpperCase]() + ".", bytes, index));
    }
  };
  (decoder._Sink.new = function(_sink) {
    this[S._state] = decoder._State.boundary;
    this[S.___Sink__size] = null;
    this[S._sink] = _sink;
    decoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = decoder._Sink.prototype;
  dart.addTypeTests(decoder._Sink);
  dart.addTypeCaches(decoder._Sink);
  dart.setMethodSignature(decoder._Sink, () => ({
    __proto__: dart.getMethods(decoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, []),
    [S._close]: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.int)), dart.nullable(core.int)]),
    [S._decode]: dart.fnType(typed_data.Uint8List, [core.List$(core.int), core.int, core.int]),
    [S._digitForByte]: dart.fnType(core.int, [core.List$(core.int), core.int])
  }));
  dart.setGetterSignature(decoder._Sink, () => ({
    __proto__: dart.getGetters(decoder._Sink.__proto__),
    [S._size]: core.int
  }));
  dart.setSetterSignature(decoder._Sink, () => ({
    __proto__: dart.getSetters(decoder._Sink.__proto__),
    [S._size]: core.int
  }));
  dart.setLibraryUri(decoder._Sink, I[166]);
  dart.setFieldSignature(decoder._Sink, () => ({
    __proto__: dart.getFields(decoder._Sink.__proto__),
    [S._sink]: dart.finalFieldType(core.Sink$(core.List$(core.int))),
    [S._state]: dart.fieldType(decoder._State),
    [S.___Sink__size]: dart.fieldType(dart.nullable(core.int))
  }));
  decoder._State = class _State extends core.Object {
    get [S._name$2]() {
      return this[S._name$1];
    }
    set [S._name$2](value) {
      super[S._name$2] = value;
    }
    static ['_#_#tearOff'](_name) {
      return new decoder._State.__(_name);
    }
    toString() {
      return this[S._name$2];
    }
  };
  (decoder._State.__ = function(_name) {
    this[S._name$1] = _name;
    ;
  }).prototype = decoder._State.prototype;
  dart.addTypeTests(decoder._State);
  dart.addTypeCaches(decoder._State);
  dart.setLibraryUri(decoder._State, I[166]);
  dart.setFieldSignature(decoder._State, () => ({
    __proto__: dart.getFields(decoder._State.__proto__),
    [S._name$2]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(decoder._State, () => ['boundary', 'size', 'sizeBeforeLF', 'body', 'bodyBeforeCR', 'bodyBeforeLF', 'endBeforeCR', 'endBeforeLF', 'end']);
  dart.defineExtensionMethods(decoder._State, ['toString']);
  dart.defineLazy(decoder._State, {
    /*decoder._State.boundary*/get boundary() {
      return C[125] || CT.C125;
    },
    /*decoder._State.size*/get size() {
      return C[126] || CT.C126;
    },
    /*decoder._State.sizeBeforeLF*/get sizeBeforeLF() {
      return C[127] || CT.C127;
    },
    /*decoder._State.body*/get body() {
      return C[128] || CT.C128;
    },
    /*decoder._State.bodyBeforeCR*/get bodyBeforeCR() {
      return C[129] || CT.C129;
    },
    /*decoder._State.bodyBeforeLF*/get bodyBeforeLF() {
      return C[130] || CT.C130;
    },
    /*decoder._State.endBeforeCR*/get endBeforeCR() {
      return C[131] || CT.C131;
    },
    /*decoder._State.endBeforeLF*/get endBeforeLF() {
      return C[132] || CT.C132;
    },
    /*decoder._State.end*/get end() {
      return C[133] || CT.C133;
    }
  }, false);
  dart.defineLazy(decoder, {
    /*decoder.chunkedCodingDecoder*/get chunkedCodingDecoder() {
      return C[134] || CT.C134;
    }
  }, false);
  encoder.ChunkedCodingEncoder = class ChunkedCodingEncoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new encoder.ChunkedCodingEncoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      return encoder._convert(input, 0, input[S$.$length], {isLast: true});
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new encoder._Sink.new(sink);
    }
  };
  (encoder.ChunkedCodingEncoder.__ = function() {
    encoder.ChunkedCodingEncoder.__proto__.new.call(this);
    ;
  }).prototype = encoder.ChunkedCodingEncoder.prototype;
  dart.addTypeTests(encoder.ChunkedCodingEncoder);
  dart.addTypeCaches(encoder.ChunkedCodingEncoder);
  dart.setMethodSignature(encoder.ChunkedCodingEncoder, () => ({
    __proto__: dart.getMethods(encoder.ChunkedCodingEncoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.ChunkedCodingEncoder, I[167]);
  encoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    static ['_#new#tearOff'](_sink) {
      return new encoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      this[S._sink$1].add(encoder._convert(chunk, 0, chunk[S$.$length]));
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[S$.$length]);
      this[S._sink$1].add(encoder._convert(chunk, start, end, {isLast: isLast}));
      if (isLast) this[S._sink$1].close();
    }
    close() {
      this[S._sink$1].add(encoder._doneChunk);
      this[S._sink$1].close();
    }
  };
  (encoder._Sink.new = function(_sink) {
    this[S._sink$1] = _sink;
    encoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = encoder._Sink.prototype;
  dart.addTypeTests(encoder._Sink);
  dart.addTypeCaches(encoder._Sink);
  dart.setMethodSignature(encoder._Sink, () => ({
    __proto__: dart.getMethods(encoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(encoder._Sink, I[167]);
  dart.setFieldSignature(encoder._Sink, () => ({
    __proto__: dart.getFields(encoder._Sink.__proto__),
    [S._sink$1]: dart.finalFieldType(core.Sink$(core.List$(core.int)))
  }));
  encoder._convert = function _convert(bytes, start, end, opts) {
    let t285, t285$, t285$0, t285$1;
    let isLast = opts && 'isLast' in opts ? opts.isLast : false;
    if (end === start) return isLast ? encoder._doneChunk : C[135] || CT.C135;
    let size = end - start;
    let sizeInHex = size[S.$toRadixString](16);
    let footerSize = isLast ? encoder._doneChunk[S$.$length] : 0;
    let list = _native_typed_data.NativeUint8List.new(sizeInHex.length + 4 + size + footerSize);
    list[S.$setRange](0, sizeInHex.length, sizeInHex[S.$codeUnits]);
    let cursor = sizeInHex.length;
    list[S$.$_set]((t285 = cursor, cursor = t285 + 1, t285), 13);
    list[S$.$_set]((t285$ = cursor, cursor = t285$ + 1, t285$), 10);
    list[S.$setRange](cursor, cursor + end - start, bytes, start);
    cursor = cursor + (end - start);
    list[S$.$_set]((t285$0 = cursor, cursor = t285$0 + 1, t285$0), 13);
    list[S$.$_set]((t285$1 = cursor, cursor = t285$1 + 1, t285$1), 10);
    if (isLast) {
      list[S.$setRange](list[S$.$length] - footerSize, list[S$.$length], encoder._doneChunk);
    }
    return list;
  };
  dart.defineLazy(encoder, {
    /*encoder.chunkedCodingEncoder*/get chunkedCodingEncoder() {
      return C[136] || CT.C136;
    },
    /*encoder._doneChunk*/get _doneChunk() {
      return _native_typed_data.NativeUint8List.fromList(T$.JSArrayOfint().of([48, 13, 10, 13, 10]));
    }
  }, false);
  method_channel_aggregate_query.MethodChannelAggregateQuery = class MethodChannelAggregateQuery extends platform_interface_aggregate_query.AggregateQueryPlatform {
    static ['_#new#tearOff'](query, _pigeonParameters, _path, _pigeonApp, _aggregateQueries, _isCollectionGroupQuery) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(query, _pigeonParameters, _path, _pigeonApp, _aggregateQueries, _isCollectionGroupQuery);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      return async.async(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, (function* get() {
        let data = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.aggregateQuery(this[S._pigeonApp], this[S._path$1], this[S._pigeonParameters$1], source, this[S._aggregateQueries$1], this[S._isCollectionGroupQuery]));
        let count = null;
        let sum = T$.JSArrayOfAggregateQueryResponse().of([]);
        let average = T$.JSArrayOfAggregateQueryResponse().of([]);
        for (let query of data) {
          if (query == null) continue;
          switch (query.type) {
            case C[32] || CT.C32:
              {
                count = query.value[S$.$toInt]();
                break;
              }
            case C[33] || CT.C33:
              {
                sum[S$.$add](query);
                break;
              }
            case C[34] || CT.C34:
              {
                average[S$.$add](query);
                break;
              }
          }
        }
        return new platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new({count: count, sum: sum, average: average});
      }).bind(this));
    }
    count() {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this.query, this[S._pigeonParameters$1], this[S._path$1], this[S._pigeonApp], (() => {
        let t285 = T$.ListOfAggregateQuery().of(this[S._aggregateQueries$1]);
        t285.push(new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.count}));
        return t285;
      })(), this[S._isCollectionGroupQuery]);
    }
    sum(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this.query, this[S._pigeonParameters$1], this[S._path$1], this[S._pigeonApp], (() => {
        let t286 = T$.ListOfAggregateQuery().of(this[S._aggregateQueries$1]);
        t286.push(new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.sum, field: field}));
        return t286;
      })(), this[S._isCollectionGroupQuery]);
    }
    average(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this.query, this[S._pigeonParameters$1], this[S._path$1], this[S._pigeonApp], (() => {
        let t287 = T$.ListOfAggregateQuery().of(this[S._aggregateQueries$1]);
        t287.push(new messages$46pigeon$.AggregateQuery.new({type: messages$46pigeon$.AggregateType.average, field: field}));
        return t287;
      })(), this[S._isCollectionGroupQuery]);
    }
  };
  (method_channel_aggregate_query.MethodChannelAggregateQuery.new = function(query, _pigeonParameters, _path, _pigeonApp, _aggregateQueries, _isCollectionGroupQuery) {
    this[S._pigeonParameters$1] = _pigeonParameters;
    this[S._path$1] = _path;
    this[S._pigeonApp] = _pigeonApp;
    this[S._aggregateQueries$1] = _aggregateQueries;
    this[S._isCollectionGroupQuery] = _isCollectionGroupQuery;
    method_channel_aggregate_query.MethodChannelAggregateQuery.__proto__.new.call(this, platform_interface_query.QueryPlatform.as(query));
    ;
  }).prototype = method_channel_aggregate_query.MethodChannelAggregateQuery.prototype;
  dart.addTypeTests(method_channel_aggregate_query.MethodChannelAggregateQuery);
  dart.addTypeCaches(method_channel_aggregate_query.MethodChannelAggregateQuery);
  dart.setLibraryUri(method_channel_aggregate_query.MethodChannelAggregateQuery, I[168]);
  dart.setFieldSignature(method_channel_aggregate_query.MethodChannelAggregateQuery, () => ({
    __proto__: dart.getFields(method_channel_aggregate_query.MethodChannelAggregateQuery.__proto__),
    [S._pigeonApp]: dart.finalFieldType(messages$46pigeon$.FirestorePigeonFirebaseApp),
    [S._path$1]: dart.finalFieldType(core.String),
    [S._pigeonParameters$1]: dart.finalFieldType(messages$46pigeon$.PigeonQueryParameters),
    [S._isCollectionGroupQuery]: dart.finalFieldType(core.bool),
    [S._aggregateQueries$1]: dart.finalFieldType(core.List$(messages$46pigeon$.AggregateQuery))
  }));
  method_channel_document_change.MethodChannelDocumentChange = class MethodChannelDocumentChange extends platform_interface_document_change.DocumentChangePlatform {
    static ['_#new#tearOff'](firestore, documentChange) {
      return new method_channel_document_change.MethodChannelDocumentChange.new(firestore, documentChange);
    }
  };
  (method_channel_document_change.MethodChannelDocumentChange.new = function(firestore, documentChange) {
    method_channel_document_change.MethodChannelDocumentChange.__proto__.new.call(this, documentChange.type, documentChange.oldIndex, documentChange.newIndex, new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, documentChange.document.path, documentChange.document.data, documentChange.document.metadata));
    ;
  }).prototype = method_channel_document_change.MethodChannelDocumentChange.prototype;
  dart.addTypeTests(method_channel_document_change.MethodChannelDocumentChange);
  dart.addTypeCaches(method_channel_document_change.MethodChannelDocumentChange);
  dart.setLibraryUri(method_channel_document_change.MethodChannelDocumentChange, I[169]);
  auto_id_generator.AutoIdGenerator = class AutoIdGenerator extends core.Object {
    static autoId() {
      let stringBuffer = new core.StringBuffer.new();
      for (let i = 0; i < 20; i = i + 1) {
        stringBuffer.write(auto_id_generator.AutoIdGenerator._AUTO_ID_ALPHABET[S$.$_get](auto_id_generator.AutoIdGenerator._random.nextInt(62)));
      }
      return stringBuffer.toString();
    }
    static ['_#new#tearOff']() {
      return new auto_id_generator.AutoIdGenerator.new();
    }
  };
  (auto_id_generator.AutoIdGenerator.new = function() {
    ;
  }).prototype = auto_id_generator.AutoIdGenerator.prototype;
  dart.addTypeTests(auto_id_generator.AutoIdGenerator);
  dart.addTypeCaches(auto_id_generator.AutoIdGenerator);
  dart.setStaticMethodSignature(auto_id_generator.AutoIdGenerator, () => ['autoId']);
  dart.setLibraryUri(auto_id_generator.AutoIdGenerator, I[170]);
  dart.setStaticFieldSignature(auto_id_generator.AutoIdGenerator, () => ['_AUTO_ID_LENGTH', '_AUTO_ID_ALPHABET', '_random']);
  dart.defineLazy(auto_id_generator.AutoIdGenerator, {
    /*auto_id_generator.AutoIdGenerator._AUTO_ID_LENGTH*/get _AUTO_ID_LENGTH() {
      return 20;
    },
    /*auto_id_generator.AutoIdGenerator._AUTO_ID_ALPHABET*/get _AUTO_ID_ALPHABET() {
      return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    },
    /*auto_id_generator.AutoIdGenerator._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  dart.defineLazy(charcodes, {
    /*charcodes.$lf*/get $lf() {
      return 10;
    },
    /*charcodes.$cr*/get $cr() {
      return 13;
    },
    /*charcodes.$0*/get $0() {
      return 48;
    },
    /*charcodes.$1*/get $1() {
      return 49;
    },
    /*charcodes.$3*/get $3() {
      return 51;
    },
    /*charcodes.$4*/get $4() {
      return 52;
    },
    /*charcodes.$7*/get $7() {
      return 55;
    },
    /*charcodes.$A*/get $A() {
      return 65;
    },
    /*charcodes.$q*/get $q() {
      return 113;
    },
    /*charcodes.$a*/get $a() {
      return 97;
    },
    /*charcodes.$f*/get $f() {
      return 102;
    }
  }, false);
  const _is__TypedQueue_default = Symbol('_is__TypedQueue_default');
  typed_queue._TypedQueue$ = dart.generic((E, L) => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$ListOfE = () => (__t$ListOfE = dart.constFn(core.List$(E)))();
    var __t$EN = () => (__t$EN = dart.constFn(dart.nullable(E)))();
    const Object_ListMixin$36 = class Object_ListMixin extends core.Object {};
    (Object_ListMixin$36.new = function() {
    }).prototype = Object_ListMixin$36.prototype;
    dart.applyMixin(Object_ListMixin$36, collection.ListMixin$(E));
    class _TypedQueue extends Object_ListMixin$36 {
      get [S._table$1]() {
        return this[S._table];
      }
      set [S._table$1](value) {
        this[S._table] = value;
      }
      get [S._head$1]() {
        return this[S._head];
      }
      set [S._head$1](value) {
        this[S._head] = value;
      }
      get [S._tail$1]() {
        return this[S._tail];
      }
      set [S._tail$1](value) {
        this[S._tail] = value;
      }
      get length() {
        return (this[S._tail$1] - this[S._head$1] & this[S._table$1][S$.$length] - 1) >>> 0;
      }
      toList(opts) {
        let growable = opts && 'growable' in opts ? opts.growable : true;
        let list = growable ? this[S._createBuffer](this.length) : this[S._createList](this.length);
        this[S._writeToList](list);
        return list;
      }
      cast(T) {
        if (queue_list.QueueList$(T).is(this)) return queue_list.QueueList$(T).as(this);
        dart.throw(new core.UnsupportedError.new(dart.str(this) + " cannot be cast to the desired type."));
      }
      retype(T) {
        return this.cast(T);
      }
      addLast(value) {
        E.as(value);
        this[S._table$1][S$.$_set](this[S._tail$1], value);
        this[S._tail$1] = (this[S._tail$1] + 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        if (this[S._head$1] === this[S._tail$1]) this[S._growAtCapacity]();
      }
      addFirst(value) {
        E.as(value);
        this[S._head$1] = (this[S._head$1] - 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        this[S._table$1][S$.$_set](this[S._head$1], value);
        if (this[S._head$1] === this[S._tail$1]) this[S._growAtCapacity]();
      }
      removeFirst() {
        if (this[S._head$1] === this[S._tail$1]) dart.throw(new core.StateError.new("No element"));
        let result = this[S._table$1][S$.$_get](this[S._head$1]);
        this[S._head$1] = (this[S._head$1] + 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        return result;
      }
      removeLast() {
        if (this[S._head$1] === this[S._tail$1]) dart.throw(new core.StateError.new("No element"));
        this[S._tail$1] = (this[S._tail$1] - 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        return this[S._table$1][S$.$_get](this[S._tail$1]);
      }
      add(value) {
        E.as(value);
        return this.addLast(value);
      }
      set length(value) {
        core.RangeError.checkNotNegative(value, "length");
        let delta = value - this.length;
        if (delta >= 0) {
          let needsToGrow = this[S._table$1][S$.$length] <= value;
          if (needsToGrow) this[S._growTo](value);
          this[S._tail$1] = (this[S._tail$1] + delta & this[S._table$1][S$.$length] - 1) >>> 0;
          if (!needsToGrow) this.fillRange(value - delta, value, this[S._defaultValue]);
        } else {
          this.removeRange(value, this.length);
        }
      }
      _get(index) {
        core.RangeError.checkValidIndex(index, this, null, this.length);
        return this[S._table$1][S$.$_get]((this[S._head$1] + index & this[S._table$1][S$.$length] - 1) >>> 0);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        core.RangeError.checkValidIndex(index, this);
        this[S._table$1][S$.$_set]((this[S._head$1] + index & this[S._table$1][S$.$length] - 1) >>> 0, value);
        return value$;
      }
      removeRange(start, end) {
        let length = this.length;
        core.RangeError.checkValidRange(start, end, length);
        if (start === 0) {
          this[S._head$1] = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
          return;
        }
        let elementsAfter = length - end;
        if (elementsAfter === 0) {
          this[S._tail$1] = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
          return;
        }
        let removedElements = end - start;
        if (start < elementsAfter) {
          this.setRange(removedElements, end, this);
          this[S._head$1] = (this[S._head$1] + removedElements & this[S._table$1][S$.$length] - 1) >>> 0;
        } else {
          this.setRange(start, length - removedElements, this, end);
          this[S._tail$1] = (this[S._tail$1] - removedElements & this[S._table$1][S$.$length] - 1) >>> 0;
        }
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        core.RangeError.checkValidRange(start, end, this.length);
        if (start === end) return;
        let targetStart = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
        let targetEnd = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
        let targetIsContiguous = targetStart < targetEnd;
        if (iterable === this) {
          let sourceStart = (this[S._head$1] + skipCount & this[S._table$1][S$.$length] - 1) >>> 0;
          let sourceEnd = (sourceStart + (end - start) & this[S._table$1][S$.$length] - 1) >>> 0;
          if (sourceStart === targetStart) return;
          let sourceIsContiguous = sourceStart < sourceEnd;
          if (targetIsContiguous && sourceIsContiguous) {
            this[S._table$1][S.$setRange](targetStart, targetEnd, this[S._table$1], sourceStart);
          } else if (!targetIsContiguous && !sourceIsContiguous) {
            if (sourceStart > targetStart) {
              let startGap = sourceStart - targetStart;
              let firstEnd = this[S._table$1][S$.$length] - startGap;
              this[S._table$1][S.$setRange](targetStart, firstEnd, this[S._table$1], sourceStart);
              this[S._table$1][S.$setRange](firstEnd, this[S._table$1][S$.$length], this[S._table$1]);
              this[S._table$1][S.$setRange](0, targetEnd, this[S._table$1], startGap);
            } else if (sourceEnd < targetEnd) {
              let firstStart = targetEnd - sourceEnd;
              this[S._table$1][S.$setRange](firstStart, targetEnd, this[S._table$1]);
              this[S._table$1][S.$setRange](0, firstStart, this[S._table$1], this[S._table$1][S$.$length] - firstStart);
              this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
            }
          } else if (sourceStart < targetEnd) {
            if (sourceIsContiguous) {
              this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
              this[S._table$1][S.$setRange](0, targetEnd, this[S._table$1], sourceStart + (this[S._table$1][S$.$length] - targetStart));
            } else {
              let firstEnd = this[S._table$1][S$.$length] - sourceStart;
              this[S._table$1][S.$setRange](targetStart, firstEnd, this[S._table$1], sourceStart);
              this[S._table$1][S.$setRange](firstEnd, targetEnd, this[S._table$1]);
            }
          } else {
            if (sourceIsContiguous) {
              this[S._table$1][S.$setRange](0, targetEnd, this[S._table$1], sourceStart + (this[S._table$1][S$.$length] - targetStart));
              this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
            } else {
              let firstStart = targetEnd - sourceEnd;
              this[S._table$1][S.$setRange](firstStart, targetEnd, this[S._table$1]);
              this[S._table$1][S.$setRange](targetStart, firstStart, this[S._table$1], sourceStart);
            }
          }
        } else if (targetIsContiguous) {
          this[S._table$1][S.$setRange](targetStart, targetEnd, iterable, skipCount);
        } else if (__t$ListOfE().is(iterable)) {
          this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], iterable, skipCount);
          this[S._table$1][S.$setRange](0, targetEnd, iterable, skipCount + (this[S._table$1][S$.$length] - targetStart));
        } else {
          super.setRange(start, end, iterable, skipCount);
        }
      }
      fillRange(start, end, value = null) {
        __t$EN().as(value);
        let startInTable = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
        let endInTable = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          this[S._table$1][S.$fillRange](startInTable, endInTable, value);
        } else {
          this[S._table$1][S.$fillRange](startInTable, this[S._table$1][S$.$length], value);
          this[S._table$1][S.$fillRange](0, endInTable, value);
        }
      }
      sublist(start, end = null) {
        let length = this.length;
        let nonNullEnd = core.RangeError.checkValidRange(start, end, length);
        let list = this[S._createList](nonNullEnd - start);
        this[S._writeToList](list, start, nonNullEnd);
        return list;
      }
      [S._writeToList](target, start = null, end = null) {
        start == null ? start = 0 : null;
        end == null ? end = this.length : null;
        if (!(target[S$.$length] >= dart.notNull(end) - dart.notNull(start))) dart.assertFailed(null, I[171], 278, 12, "target.length >= end - start");
        if (!(dart.notNull(start) <= dart.notNull(end))) dart.assertFailed(null, I[171], 279, 12, "start <= end");
        let elementsToWrite = dart.notNull(end) - dart.notNull(start);
        let startInTable = (this[S._head$1] + dart.notNull(start) & this[S._table$1][S$.$length] - 1) >>> 0;
        let endInTable = (this[S._head$1] + dart.notNull(end) & this[S._table$1][S$.$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          target[S.$setRange](0, elementsToWrite, this[S._table$1], startInTable);
        } else {
          let firstPartSize = this[S._table$1][S$.$length] - startInTable;
          target[S.$setRange](0, firstPartSize, this[S._table$1], startInTable);
          target[S.$setRange](firstPartSize, firstPartSize + endInTable, this[S._table$1], 0);
        }
        return elementsToWrite;
      }
      [S._growAtCapacity]() {
        if (!(this[S._head$1] === this[S._tail$1])) dart.assertFailed(null, I[171], 297, 12, "_head == _tail");
        let newTable = this[S._createList](this[S._table$1][S$.$length] * 2);
        let partitionPoint = this[S._table$1][S$.$length] - this[S._head$1];
        newTable[S.$setRange](0, partitionPoint, this[S._table$1], this[S._head$1]);
        if (partitionPoint !== this[S._table$1][S$.$length]) {
          newTable[S.$setRange](partitionPoint, this[S._table$1][S$.$length], this[S._table$1]);
        }
        this[S._head$1] = 0;
        this[S._tail$1] = this[S._table$1][S$.$length];
        this[S._table$1] = newTable;
      }
      [S._growTo](newElementCount) {
        if (!(newElementCount >= this.length)) dart.assertFailed(null, I[171], 316, 12, "newElementCount >= length");
        newElementCount = newElementCount + newElementCount[S.$rightShift](1);
        let newTable = this[S._createList](typed_queue._nextPowerOf2(newElementCount));
        this[S._tail$1] = this[S._writeToList](newTable);
        this[S._table$1] = newTable;
        this[S._head$1] = 0;
      }
    }
    (_TypedQueue.new = function(table) {
      this[S._table] = L.as(table);
      this[S._head] = 0;
      this[S._tail] = 0;
      ;
    }).prototype = _TypedQueue.prototype;
    dart.addTypeTests(_TypedQueue);
    _TypedQueue.prototype[_is__TypedQueue_default] = true;
    dart.addTypeCaches(_TypedQueue);
    dart.setMethodSignature(_TypedQueue, () => ({
      __proto__: dart.getMethods(_TypedQueue.__proto__),
      cast: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      [S$.$cast]: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      retype: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      addLast: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      addFirst: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      removeFirst: dart.fnType(E, []),
      _get: dart.fnType(E, [core.int]),
      [S$.$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S$.$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      sublist: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [S.$sublist]: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [S._writeToList]: dart.fnType(core.int, [core.List$(E)], [dart.nullable(core.int), dart.nullable(core.int)]),
      [S._growAtCapacity]: dart.fnType(dart.void, []),
      [S._growTo]: dart.fnType(dart.void, [core.int])
    }));
    dart.setGetterSignature(_TypedQueue, () => ({
      __proto__: dart.getGetters(_TypedQueue.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setSetterSignature(_TypedQueue, () => ({
      __proto__: dart.getSetters(_TypedQueue.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setLibraryUri(_TypedQueue, I[172]);
    dart.setFieldSignature(_TypedQueue, () => ({
      __proto__: dart.getFields(_TypedQueue.__proto__),
      [S._table$1]: dart.fieldType(L),
      [S._head$1]: dart.fieldType(core.int),
      [S._tail$1]: dart.fieldType(core.int)
    }));
    dart.defineExtensionMethods(_TypedQueue, [
      'toList',
      'cast',
      'removeLast',
      'add',
      '_get',
      '_set',
      'removeRange',
      'setRange',
      'fillRange',
      'sublist'
    ]);
    dart.defineExtensionAccessors(_TypedQueue, ['length']);
    return _TypedQueue;
  });
  typed_queue._TypedQueue = typed_queue._TypedQueue$();
  dart.addTypeTests(typed_queue._TypedQueue, _is__TypedQueue_default);
  const _is__IntQueue_default = Symbol('_is__IntQueue_default');
  typed_queue._IntQueue$ = dart.generic(L => {
    class _IntQueue extends typed_queue._TypedQueue$(core.int, L) {
      get [S._defaultValue]() {
        return 0;
      }
    }
    (_IntQueue.new = function(queue) {
      _IntQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _IntQueue.prototype;
    dart.addTypeTests(_IntQueue);
    _IntQueue.prototype[_is__IntQueue_default] = true;
    dart.addTypeCaches(_IntQueue);
    dart.setGetterSignature(_IntQueue, () => ({
      __proto__: dart.getGetters(_IntQueue.__proto__),
      [S._defaultValue]: core.int
    }));
    dart.setLibraryUri(_IntQueue, I[172]);
    return _IntQueue;
  });
  typed_queue._IntQueue = typed_queue._IntQueue$();
  dart.addTypeTests(typed_queue._IntQueue, _is__IntQueue_default);
  const _is__FloatQueue_default = Symbol('_is__FloatQueue_default');
  typed_queue._FloatQueue$ = dart.generic(L => {
    class _FloatQueue extends typed_queue._TypedQueue$(core.double, L) {
      get [S._defaultValue]() {
        return 0;
      }
    }
    (_FloatQueue.new = function(queue) {
      _FloatQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _FloatQueue.prototype;
    dart.addTypeTests(_FloatQueue);
    _FloatQueue.prototype[_is__FloatQueue_default] = true;
    dart.addTypeCaches(_FloatQueue);
    dart.setGetterSignature(_FloatQueue, () => ({
      __proto__: dart.getGetters(_FloatQueue.__proto__),
      [S._defaultValue]: core.double
    }));
    dart.setLibraryUri(_FloatQueue, I[172]);
    return _FloatQueue;
  });
  typed_queue._FloatQueue = typed_queue._FloatQueue$();
  dart.addTypeTests(typed_queue._FloatQueue, _is__FloatQueue_default);
  typed_queue.Uint8Queue = class Uint8Queue extends typed_queue._IntQueue$(typed_data.Uint8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Uint8Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint8Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Uint8Queue.new = function(initialCapacity = null) {
    typed_queue.Uint8Queue.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8Queue.prototype;
  dart.addTypeTests(typed_queue.Uint8Queue);
  dart.addTypeCaches(typed_queue.Uint8Queue);
  typed_queue.Uint8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint8List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint8Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8Queue, I[172]);
  typed_queue.Int8Queue = class Int8Queue extends typed_queue._IntQueue$(typed_data.Int8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Int8Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int8Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int8Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Int8Queue.new = function(initialCapacity = null) {
    typed_queue.Int8Queue.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int8Queue.prototype;
  dart.addTypeTests(typed_queue.Int8Queue);
  dart.addTypeCaches(typed_queue.Int8Queue);
  typed_queue.Int8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int8Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int8List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int8Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int8Queue, I[172]);
  typed_queue.Uint8ClampedQueue = class Uint8ClampedQueue extends typed_queue._IntQueue$(typed_data.Uint8ClampedList) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8ClampedQueue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Uint8ClampedQueue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8ClampedQueue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint8ClampedBuffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Uint8ClampedQueue.new = function(initialCapacity = null) {
    typed_queue.Uint8ClampedQueue.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8ClampedQueue.prototype;
  dart.addTypeTests(typed_queue.Uint8ClampedQueue);
  dart.addTypeCaches(typed_queue.Uint8ClampedQueue);
  typed_queue.Uint8ClampedQueue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8ClampedQueue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint8ClampedList, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint8ClampedBuffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8ClampedQueue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8ClampedQueue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8ClampedQueue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8ClampedQueue, I[172]);
  typed_queue.Uint16Queue = class Uint16Queue extends typed_queue._IntQueue$(typed_data.Uint16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Uint16Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint16Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint16Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Uint16Queue.new = function(initialCapacity = null) {
    typed_queue.Uint16Queue.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint16Queue.prototype;
  dart.addTypeTests(typed_queue.Uint16Queue);
  dart.addTypeCaches(typed_queue.Uint16Queue);
  typed_queue.Uint16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint16Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint16List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint16Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint16Queue, I[172]);
  typed_queue.Int16Queue = class Int16Queue extends typed_queue._IntQueue$(typed_data.Int16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Int16Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int16Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int16Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Int16Queue.new = function(initialCapacity = null) {
    typed_queue.Int16Queue.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int16Queue.prototype;
  dart.addTypeTests(typed_queue.Int16Queue);
  dart.addTypeCaches(typed_queue.Int16Queue);
  typed_queue.Int16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int16Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int16List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int16Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int16Queue, I[172]);
  typed_queue.Uint32Queue = class Uint32Queue extends typed_queue._IntQueue$(typed_data.Uint32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Uint32Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Uint32Queue.new = function(initialCapacity = null) {
    typed_queue.Uint32Queue.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint32Queue.prototype;
  dart.addTypeTests(typed_queue.Uint32Queue);
  dart.addTypeCaches(typed_queue.Uint32Queue);
  typed_queue.Uint32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint32Queue, I[172]);
  typed_queue.Int32Queue = class Int32Queue extends typed_queue._IntQueue$(typed_data.Int32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Int32Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Int32Queue.new = function(initialCapacity = null) {
    typed_queue.Int32Queue.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32Queue.prototype;
  dart.addTypeTests(typed_queue.Int32Queue);
  dart.addTypeCaches(typed_queue.Int32Queue);
  typed_queue.Int32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32Queue, I[172]);
  typed_queue.Uint64Queue = class Uint64Queue extends typed_queue._IntQueue$(typed_data.Uint64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Uint64Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint64Queue.fromList(elements);
    }
    [S._createList](size) {
      return typed_data.Uint64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Uint64Queue.new = function(initialCapacity = null) {
    typed_queue.Uint64Queue.__proto__.new.call(this, typed_data.Uint64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint64Queue.prototype;
  dart.addTypeTests(typed_queue.Uint64Queue);
  dart.addTypeCaches(typed_queue.Uint64Queue);
  typed_queue.Uint64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint64Queue, I[172]);
  typed_queue.Int64Queue = class Int64Queue extends typed_queue._IntQueue$(typed_data.Int64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Int64Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int64Queue.fromList(elements);
    }
    [S._createList](size) {
      return typed_data.Int64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Int64Queue.new = function(initialCapacity = null) {
    typed_queue.Int64Queue.__proto__.new.call(this, typed_data.Int64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int64Queue.prototype;
  dart.addTypeTests(typed_queue.Int64Queue);
  dart.addTypeCaches(typed_queue.Int64Queue);
  typed_queue.Int64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int64Queue, I[172]);
  typed_queue.Float32Queue = class Float32Queue extends typed_queue._FloatQueue$(typed_data.Float32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Float32Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Float32Queue.new = function(initialCapacity = null) {
    typed_queue.Float32Queue.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32Queue.prototype;
  dart.addTypeTests(typed_queue.Float32Queue);
  dart.addTypeCaches(typed_queue.Float32Queue);
  typed_queue.Float32Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.double]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32Queue, I[172]);
  typed_queue.Float64Queue = class Float64Queue extends typed_queue._FloatQueue$(typed_data.Float64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Float64Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float64Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Float64Queue.new = function(initialCapacity = null) {
    typed_queue.Float64Queue.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float64Queue.prototype;
  dart.addTypeTests(typed_queue.Float64Queue);
  dart.addTypeCaches(typed_queue.Float64Queue);
  typed_queue.Float64Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.double]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float64Queue, I[172]);
  typed_queue.Int32x4Queue = class Int32x4Queue extends typed_queue._TypedQueue$(typed_data.Int32x4, typed_data.Int32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Int32x4Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32x4Queue.fromList(elements);
    }
    [S._createList](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int32x4Buffer.new(size);
    }
    get [S._defaultValue]() {
      return typed_queue.Int32x4Queue._zero;
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Int32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Int32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Int32x4Queue);
  dart.addTypeCaches(typed_queue.Int32x4Queue);
  typed_queue.Int32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Int32x4)];
  dart.setMethodSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32x4Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int32x4List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int32x4Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [typed_data.Int32x4]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Int32x4))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32x4Queue.__proto__),
    [S._defaultValue]: typed_data.Int32x4,
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Int32x4)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32x4Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Int32x4)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32x4Queue, I[172]);
  dart.setStaticFieldSignature(typed_queue.Int32x4Queue, () => ['_zero']);
  dart.defineLazy(typed_queue.Int32x4Queue, {
    /*typed_queue.Int32x4Queue._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_queue.Float32x4Queue = class Float32x4Queue extends typed_queue._TypedQueue$(typed_data.Float32x4, typed_data.Float32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t288;
      t288 = new typed_queue.Float32x4Queue.new(elements[S$.$length]);
      return (() => {
        t288.addAll(elements);
        return t288;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32x4Queue.fromList(elements);
    }
    [S._createList](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float32x4Buffer.new(size);
    }
    get [S._defaultValue]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[137] || CT.C137, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[138] || CT.C138)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[139] || CT.C139, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[140] || CT.C140, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[141] || CT.C141, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[142] || CT.C142)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[143] || CT.C143)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[144] || CT.C144, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[145] || CT.C145, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[146] || CT.C146, value)));
    }
  };
  (typed_queue.Float32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Float32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Float32x4Queue);
  dart.addTypeCaches(typed_queue.Float32x4Queue);
  typed_queue.Float32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Float32x4)];
  dart.setMethodSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32x4Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float32x4List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float32x4Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [typed_data.Float32x4]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Float32x4))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32x4Queue.__proto__),
    [S._defaultValue]: typed_data.Float32x4,
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Float32x4)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32x4Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Float32x4)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32x4Queue, I[172]);
  typed_queue._chooseRealInitialCapacity = function _chooseRealInitialCapacity(initialCapacity) {
    if (initialCapacity == null || dart.notNull(initialCapacity) < 16) {
      return 16;
    } else if (!typed_queue._isPowerOf2(initialCapacity)) {
      return typed_queue._nextPowerOf2(initialCapacity);
    } else {
      return initialCapacity;
    }
  };
  typed_queue._isPowerOf2 = function _isPowerOf2(number) {
    return (number & number - 1) === 0;
  };
  typed_queue._nextPowerOf2 = function _nextPowerOf2(number) {
    if (!(number > 0)) dart.assertFailed(null, I[171], 691, 10, "number > 0");
    number = (number << 1 >>> 0) - 1;
    for (;;) {
      let nextNumber = (number & number - 1) >>> 0;
      if (nextNumber === 0) return number;
      number = nextNumber;
    }
  };
  dart.defineLazy(typed_queue, {
    /*typed_queue._defaultInitialCapacity*/get _defaultInitialCapacity() {
      return 16;
    }
  }, false);
  const _is_TypedDataBuffer_default = Symbol('_is_TypedDataBuffer_default');
  typed_buffer.TypedDataBuffer$ = dart.generic(E => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$TypedDataBufferOfE = () => (__t$TypedDataBufferOfE = dart.constFn(typed_buffer.TypedDataBuffer$(E)))();
    class TypedDataBuffer extends collection.ListBase$(E) {
      get [S._typedBuffer]() {
        return typed_data.TypedData.as(this[S._buffer]);
      }
      get length() {
        return this[S._length];
      }
      _get(index) {
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        return this[S._buffer][S$.$_get](index);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        this[S._buffer][S$.$_set](index, value);
        return value$;
      }
      set length(newLength) {
        if (newLength < this[S._length]) {
          let defaultValue = this[S._defaultValue$1];
          for (let i = newLength; i < this[S._length]; i = i + 1) {
            this[S._buffer][S$.$_set](i, defaultValue);
          }
        } else if (newLength > this[S._buffer][S$.$length]) {
          let newBuffer = null;
          if (this[S._buffer][S$.$isEmpty]) {
            newBuffer = this[S._createBuffer$1](newLength);
          } else {
            newBuffer = this[S._createBiggerBuffer](newLength);
          }
          newBuffer[S.$setRange](0, this[S._length], this[S._buffer]);
          this[S._buffer] = newBuffer;
        }
        this[S._length] = newLength;
      }
      [S._add$2](value) {
        let t288;
        if (this[S._length] === this[S._buffer][S$.$length]) this[S._grow$2](this[S._length]);
        this[S._buffer][S$.$_set]((t288 = this[S._length], this[S._length] = t288 + 1, t288), value);
      }
      add(element) {
        E.as(element);
        this[S._add$2](element);
      }
      addAll(values, start = 0, end = null) {
        __t$IterableOfE().as(values);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null && start > dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, null, "end"));
        }
        this[S._addAll](values, start, end);
      }
      insertAll(index, values, start = 0, end = null) {
        let t288;
        __t$IterableOfE().as(values);
        core.RangeError.checkValidIndex(index, this, "index", this[S._length] + 1);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null) {
          if (start > dart.notNull(end)) {
            dart.throw(new core.RangeError.range(end, start, null, "end"));
          }
          if (start === end) return;
        }
        if (index === this[S._length]) {
          this[S._addAll](values, start, end);
          return;
        }
        if (end == null && core.List.is(values)) {
          end = values[S$.$length];
        }
        if (end != null) {
          this[S._insertKnownLength](index, values, start, end);
          return;
        }
        let writeIndex = this[S._length];
        let skipCount = start;
        for (let value of values) {
          if (skipCount > 0) {
            skipCount = skipCount - 1;
            continue;
          }
          if (writeIndex === this[S._buffer][S$.$length]) {
            this[S._grow$2](writeIndex);
          }
          this[S._buffer][S$.$_set]((t288 = writeIndex, writeIndex = t288 + 1, t288), value);
        }
        if (skipCount > 0) {
          dart.throw(new core.StateError.new("Too few elements"));
        }
        if (end != null && writeIndex < dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, writeIndex, "end"));
        }
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer], index, this[S._length]);
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer], this[S._length], writeIndex);
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer], index, writeIndex);
        this[S._length] = writeIndex;
        return;
      }
      static _reverse(buffer, start, end) {
        end = end - 1;
        while (start < end) {
          let first = buffer[S$.$_get](start);
          let last = buffer[S$.$_get](end);
          buffer[S$.$_set](end, first);
          buffer[S$.$_set](start, last);
          start = start + 1;
          end = end - 1;
        }
      }
      [S._addAll](values, start = 0, end = null) {
        if (core.List.is(values)) end == null ? end = values[S$.$length] : null;
        if (end != null) {
          this[S._insertKnownLength](this[S._length], values, start, end);
          return;
        }
        let i = 0;
        for (let value of values) {
          if (i >= start) this.add(value);
          i = i + 1;
        }
        if (i < start) dart.throw(new core.StateError.new("Too few elements"));
      }
      [S._insertKnownLength](index, values, start, end) {
        if (core.List.is(values)) {
          if (start > values[S$.$length] || end > values[S$.$length]) {
            dart.throw(new core.StateError.new("Too few elements"));
          }
        }
        let valuesLength = end - start;
        let newLength = this[S._length] + valuesLength;
        this[S._ensureCapacity](newLength);
        this[S._buffer][S.$setRange](index + valuesLength, this[S._length] + valuesLength, this[S._buffer], index);
        this[S._buffer][S.$setRange](index, index + valuesLength, values, start);
        this[S._length] = newLength;
      }
      insert(index, element) {
        E.as(element);
        if (index < 0 || index > this[S._length]) {
          dart.throw(new core.RangeError.range(index, 0, this[S._length]));
        }
        if (this[S._length] < this[S._buffer][S$.$length]) {
          this[S._buffer][S.$setRange](index + 1, this[S._length] + 1, this[S._buffer], index);
          this[S._buffer][S$.$_set](index, element);
          this[S._length] = this[S._length] + 1;
          return;
        }
        let newBuffer = this[S._createBiggerBuffer](null);
        newBuffer[S.$setRange](0, index, this[S._buffer]);
        newBuffer[S.$setRange](index + 1, this[S._length] + 1, this[S._buffer], index);
        newBuffer[S$.$_set](index, element);
        this[S._length] = this[S._length] + 1;
        this[S._buffer] = newBuffer;
      }
      [S._ensureCapacity](requiredCapacity) {
        if (requiredCapacity <= this[S._buffer][S$.$length]) return;
        let newBuffer = this[S._createBiggerBuffer](requiredCapacity);
        newBuffer[S.$setRange](0, this[S._length], this[S._buffer]);
        this[S._buffer] = newBuffer;
      }
      [S._createBiggerBuffer](requiredCapacity) {
        let newLength = this[S._buffer][S$.$length] * 2;
        if (requiredCapacity != null && dart.notNull(newLength) < dart.notNull(requiredCapacity)) {
          newLength = requiredCapacity;
        } else if (dart.notNull(newLength) < 8) {
          newLength = 8;
        }
        return this[S._createBuffer$1](newLength);
      }
      [S._grow$2](length) {
        let t288;
        this[S._buffer] = (t288 = this[S._createBiggerBuffer](null), (() => {
          t288[S.$setRange](0, length, this[S._buffer]);
          return t288;
        })());
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        if (end > this[S._length]) dart.throw(new core.RangeError.range(end, 0, this[S._length]));
        this[S._setRange](start, end, iterable, skipCount);
      }
      [S._setRange](start, end, source, skipCount) {
        if (__t$TypedDataBufferOfE().is(source)) {
          this[S._buffer][S.$setRange](start, end, source[S._buffer], skipCount);
        } else {
          this[S._buffer][S.$setRange](start, end, source, skipCount);
        }
      }
      get elementSizeInBytes() {
        return this[S._typedBuffer][S.$elementSizeInBytes];
      }
      get lengthInBytes() {
        return this[S._length] * this[S._typedBuffer][S.$elementSizeInBytes];
      }
      get offsetInBytes() {
        return this[S._typedBuffer][S.$offsetInBytes];
      }
      get buffer() {
        return this[S._typedBuffer][S.$buffer];
      }
    }
    (TypedDataBuffer.new = function(buffer) {
      this[S._buffer] = buffer;
      this[S._length] = buffer[S$.$length];
      ;
    }).prototype = TypedDataBuffer.prototype;
    dart.addTypeTests(TypedDataBuffer);
    TypedDataBuffer.prototype[_is_TypedDataBuffer_default] = true;
    dart.addTypeCaches(TypedDataBuffer);
    dart.setMethodSignature(TypedDataBuffer, () => ({
      __proto__: dart.getMethods(TypedDataBuffer.__proto__),
      _get: dart.fnType(E, [core.int]),
      [S$.$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S$.$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S._add$2]: dart.fnType(dart.void, [E]),
      addAll: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S$.$addAll]: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      insertAll: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S.$insertAll]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S._addAll]: dart.fnType(dart.void, [core.Iterable$(E)], [core.int, dart.nullable(core.int)]),
      [S._insertKnownLength]: dart.fnType(dart.void, [core.int, core.Iterable$(E), core.int, core.int]),
      [S._ensureCapacity]: dart.fnType(dart.void, [core.int]),
      [S._createBiggerBuffer]: dart.fnType(core.List$(E), [dart.nullable(core.int)]),
      [S._grow$2]: dart.fnType(dart.void, [core.int]),
      [S._setRange]: dart.fnType(dart.void, [core.int, core.int, core.Iterable$(E), core.int])
    }));
    dart.setStaticMethodSignature(TypedDataBuffer, () => ['_reverse']);
    dart.setGetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getGetters(TypedDataBuffer.__proto__),
      [S._typedBuffer]: typed_data.TypedData,
      length: core.int,
      [S$.$length]: core.int,
      elementSizeInBytes: core.int,
      lengthInBytes: core.int,
      offsetInBytes: core.int,
      buffer: typed_data.ByteBuffer
    }));
    dart.setSetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getSetters(TypedDataBuffer.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setLibraryUri(TypedDataBuffer, I[173]);
    dart.setFieldSignature(TypedDataBuffer, () => ({
      __proto__: dart.getFields(TypedDataBuffer.__proto__),
      [S._buffer]: dart.fieldType(core.List$(E)),
      [S._length]: dart.fieldType(core.int)
    }));
    dart.setStaticFieldSignature(TypedDataBuffer, () => ['_initialLength']);
    dart.defineExtensionMethods(TypedDataBuffer, [
      '_get',
      '_set',
      'add',
      'addAll',
      'insertAll',
      'insert',
      'setRange'
    ]);
    dart.defineExtensionAccessors(TypedDataBuffer, ['length']);
    return TypedDataBuffer;
  });
  typed_buffer.TypedDataBuffer = typed_buffer.TypedDataBuffer$();
  dart.defineLazy(typed_buffer.TypedDataBuffer, {
    /*typed_buffer.TypedDataBuffer._initialLength*/get _initialLength() {
      return 8;
    }
  }, false);
  dart.addTypeTests(typed_buffer.TypedDataBuffer, _is_TypedDataBuffer_default);
  typed_buffer._IntBuffer = class _IntBuffer extends typed_buffer.TypedDataBuffer$(core.int) {
    get [S._defaultValue$1]() {
      return 0;
    }
  };
  (typed_buffer._IntBuffer.new = function(buffer) {
    typed_buffer._IntBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._IntBuffer.prototype;
  dart.addTypeTests(typed_buffer._IntBuffer);
  dart.addTypeCaches(typed_buffer._IntBuffer);
  dart.setGetterSignature(typed_buffer._IntBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._IntBuffer.__proto__),
    [S._defaultValue$1]: core.int
  }));
  dart.setLibraryUri(typed_buffer._IntBuffer, I[173]);
  typed_buffer._FloatBuffer = class _FloatBuffer extends typed_buffer.TypedDataBuffer$(core.double) {
    get [S._defaultValue$1]() {
      return 0;
    }
  };
  (typed_buffer._FloatBuffer.new = function(buffer) {
    typed_buffer._FloatBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._FloatBuffer.prototype;
  dart.addTypeTests(typed_buffer._FloatBuffer);
  dart.addTypeCaches(typed_buffer._FloatBuffer);
  dart.setGetterSignature(typed_buffer._FloatBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._FloatBuffer.__proto__),
    [S._defaultValue$1]: core.double
  }));
  dart.setLibraryUri(typed_buffer._FloatBuffer, I[173]);
  typed_buffer.Uint8Buffer = class Uint8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
  };
  (typed_buffer.Uint8Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint8Buffer.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8Buffer);
  dart.addTypeCaches(typed_buffer.Uint8Buffer);
  dart.setMethodSignature(typed_buffer.Uint8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8Buffer, I[173]);
  typed_buffer.Int8Buffer = class Int8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int8Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
  };
  (typed_buffer.Int8Buffer.new = function(initialLength = 0) {
    typed_buffer.Int8Buffer.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int8Buffer);
  dart.addTypeCaches(typed_buffer.Int8Buffer);
  dart.setMethodSignature(typed_buffer.Int8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int8Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int8Buffer, I[173]);
  typed_buffer.Uint8ClampedBuffer = class Uint8ClampedBuffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8ClampedBuffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
  };
  (typed_buffer.Uint8ClampedBuffer.new = function(initialLength = 0) {
    typed_buffer.Uint8ClampedBuffer.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8ClampedBuffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8ClampedBuffer);
  dart.addTypeCaches(typed_buffer.Uint8ClampedBuffer);
  dart.setMethodSignature(typed_buffer.Uint8ClampedBuffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8ClampedBuffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint8ClampedList, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8ClampedBuffer, I[173]);
  typed_buffer.Uint16Buffer = class Uint16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint16Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
  };
  (typed_buffer.Uint16Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint16Buffer.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint16Buffer);
  dart.addTypeCaches(typed_buffer.Uint16Buffer);
  dart.setMethodSignature(typed_buffer.Uint16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint16Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint16Buffer, I[173]);
  typed_buffer.Int16Buffer = class Int16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int16Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
  };
  (typed_buffer.Int16Buffer.new = function(initialLength = 0) {
    typed_buffer.Int16Buffer.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int16Buffer);
  dart.addTypeCaches(typed_buffer.Int16Buffer);
  dart.setMethodSignature(typed_buffer.Int16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int16Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int16Buffer, I[173]);
  typed_buffer.Uint32Buffer = class Uint32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
  };
  (typed_buffer.Uint32Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint32Buffer.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint32Buffer);
  dart.addTypeCaches(typed_buffer.Uint32Buffer);
  dart.setMethodSignature(typed_buffer.Uint32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint32Buffer, I[173]);
  typed_buffer.Int32Buffer = class Int32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
  };
  (typed_buffer.Int32Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32Buffer.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32Buffer);
  dart.addTypeCaches(typed_buffer.Int32Buffer);
  dart.setMethodSignature(typed_buffer.Int32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int32Buffer, I[173]);
  typed_buffer.Uint64Buffer = class Uint64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return typed_data.Uint64List.new(size);
    }
  };
  (typed_buffer.Uint64Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint64Buffer.__proto__.new.call(this, typed_data.Uint64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint64Buffer);
  dart.addTypeCaches(typed_buffer.Uint64Buffer);
  dart.setMethodSignature(typed_buffer.Uint64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint64Buffer, I[173]);
  typed_buffer.Int64Buffer = class Int64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return typed_data.Int64List.new(size);
    }
  };
  (typed_buffer.Int64Buffer.new = function(initialLength = 0) {
    typed_buffer.Int64Buffer.__proto__.new.call(this, typed_data.Int64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int64Buffer);
  dart.addTypeCaches(typed_buffer.Int64Buffer);
  dart.setMethodSignature(typed_buffer.Int64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int64Buffer, I[173]);
  typed_buffer.Float32Buffer = class Float32Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
  };
  (typed_buffer.Float32Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32Buffer);
  dart.addTypeCaches(typed_buffer.Float32Buffer);
  dart.setMethodSignature(typed_buffer.Float32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float32Buffer, I[173]);
  typed_buffer.Float64Buffer = class Float64Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
  };
  (typed_buffer.Float64Buffer.new = function(initialLength = 0) {
    typed_buffer.Float64Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float64Buffer);
  dart.addTypeCaches(typed_buffer.Float64Buffer);
  dart.setMethodSignature(typed_buffer.Float64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float64Buffer, I[173]);
  typed_buffer.Int32x4Buffer = class Int32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Int32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32x4Buffer.new(initialLength);
    }
    get [S._defaultValue$1]() {
      return typed_buffer.Int32x4Buffer._zero;
    }
    [S._createBuffer$1](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
  };
  (typed_buffer.Int32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32x4Buffer);
  dart.addTypeCaches(typed_buffer.Int32x4Buffer);
  dart.setMethodSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32x4Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Int32x4Buffer.__proto__),
    [S._defaultValue$1]: typed_data.Int32x4
  }));
  dart.setLibraryUri(typed_buffer.Int32x4Buffer, I[173]);
  dart.setStaticFieldSignature(typed_buffer.Int32x4Buffer, () => ['_zero']);
  dart.defineLazy(typed_buffer.Int32x4Buffer, {
    /*typed_buffer.Int32x4Buffer._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_buffer.Float32x4Buffer = class Float32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Float32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32x4Buffer.new(initialLength);
    }
    get [S._defaultValue$1]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [S._createBuffer$1](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
  };
  (typed_buffer.Float32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32x4Buffer);
  dart.addTypeCaches(typed_buffer.Float32x4Buffer);
  dart.setMethodSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32x4Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Float32x4Buffer.__proto__),
    [S._defaultValue$1]: typed_data.Float32x4
  }));
  dart.setLibraryUri(typed_buffer.Float32x4Buffer, I[173]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:firebase_core/firebase_core.dart": firebase_core,
    "package:provider/provider.dart": provider,
    "file:///zapp/project/lib/providers/auth_provider.dart": auth_provider,
    "file:///zapp/project/lib/providers/product_provider.dart": product_provider,
    "file:///zapp/project/lib/screens/home_screen.dart": home_screen,
    "file:///zapp/project/lib/screens/login_screen.dart": login_screen,
    "file:///zapp/project/lib/screens/signup_screen.dart": signup_screen,
    "file:///zapp/project/lib/screens/cart_screen.dart": cart_screen,
    "package:cloud_firestore_web/cloud_firestore_web.dart": cloud_firestore_web,
    "package:firebase_auth_web/firebase_auth_web.dart": firebase_auth_web,
    "package:firebase_core_web/firebase_core_web.dart": firebase_core_web,
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": firebase_core_platform_interface,
    "package:provider/src/async_provider.dart": async_provider,
    "package:provider/src/change_notifier_provider.dart": change_notifier_provider,
    "package:provider/src/consumer.dart": consumer,
    "package:provider/src/listenable_provider.dart": listenable_provider,
    "package:provider/src/provider.dart": provider$,
    "package:provider/src/proxy_provider.dart": proxy_provider,
    "package:provider/src/reassemble_handler.dart": reassemble_handler,
    "package:provider/src/selector.dart": selector$,
    "package:provider/src/value_listenable_provider.dart": value_listenable_provider,
    "package:firebase_auth/firebase_auth.dart": firebase_auth,
    "package:cloud_firestore/cloud_firestore.dart": cloud_firestore,
    "file:///zapp/project/lib/models/product.dart": product,
    "file:///zapp/project/lib/screens/product_details_screen.dart": product_details_screen,
    "file:///zapp/project/lib/providers/cart_provider.dart": cart_provider,
    "file:///zapp/project/lib/widgets/cart_item_widget.dart": cart_item_widget,
    "package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart": cloud_firestore_platform_interface,
    "package:cloud_firestore_web/src/internals.dart": internals,
    "package:cloud_firestore_web/src/load_bundle_task_web.dart": load_bundle_task_web,
    "package:cloud_firestore_web/src/utils/web_utils.dart": web_utils,
    "package:firebase_core_web/firebase_core_web_interop.dart": firebase_core_web_interop,
    "package:cloud_firestore_web/src/collection_reference_web.dart": collection_reference_web,
    "package:cloud_firestore_web/src/document_reference_web.dart": document_reference_web,
    "package:cloud_firestore_web/src/field_value_factory_web.dart": field_value_factory_web,
    "package:cloud_firestore_web/src/interop/firestore.dart": firestore$,
    "package:cloud_firestore_web/src/query_web.dart": query_web,
    "package:cloud_firestore_web/src/transaction_web.dart": transaction_web,
    "package:cloud_firestore_web/src/write_batch_web.dart": write_batch_web,
    "package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart": firebase_auth_platform_interface,
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart": firebase_auth_web_multi_factor,
    "package:firebase_auth_web/src/interop/utils/utils.dart": utils,
    "package:firebase_auth_web/src/utils/web_utils.dart": web_utils$,
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart": firebase_auth_web_confirmation_result,
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart": firebase_auth_web_recaptcha_verifier_factory,
    "package:firebase_auth_web/src/firebase_auth_web_user.dart": firebase_auth_web_user,
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart": firebase_auth_web_user_credential,
    "package:firebase_auth_web/src/interop/auth.dart": auth$,
    "package:firebase_auth_web/src/interop/multi_factor.dart": multi_factor,
    "package:firebase_core_web/src/interop/js.dart": js$,
    "package:firebase_core_web/src/interop/core.dart": core$,
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart": mocks,
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart": test_api,
    "package:nested/nested.dart": nested,
    "file:///zapp/project/lib/models/cart_item.dart": cart_item,
    "package:cloud_firestore_platform_interface/src/internal/pointer.dart": pointer,
    "package:cloud_firestore_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon$,
    "package:cloud_firestore_platform_interface/src/blob.dart": blob,
    "package:cloud_firestore_platform_interface/src/field_path.dart": field_path,
    "package:cloud_firestore_platform_interface/src/field_path_type.dart": field_path_type,
    "package:cloud_firestore_platform_interface/src/filters.dart": filters,
    "package:cloud_firestore_platform_interface/src/geo_point.dart": geo_point,
    "package:cloud_firestore_platform_interface/src/get_options.dart": get_options,
    "package:cloud_firestore_platform_interface/src/load_bundle_task_state.dart": load_bundle_task_state,
    "package:cloud_firestore_platform_interface/src/persistence_settings.dart": persistence_settings,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query.dart": platform_interface_aggregate_query,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query_snapshot.dart": platform_interface_aggregate_query_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_collection_reference.dart": platform_interface_collection_reference,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_change.dart": platform_interface_document_change,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_reference.dart": platform_interface_document_reference,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_snapshot.dart": platform_interface_document_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value.dart": platform_interface_field_value,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value_factory.dart": platform_interface_field_value_factory,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_firestore.dart": platform_interface_firestore,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_index_definitions.dart": platform_interface_index_definitions,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task.dart": platform_interface_load_bundle_task,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart": platform_interface_load_bundle_task_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query.dart": platform_interface_query,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query_snapshot.dart": platform_interface_query_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_transaction.dart": platform_interface_transaction,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_write_batch.dart": platform_interface_write_batch,
    "package:cloud_firestore_platform_interface/src/platform_interface/utils/load_bundle_task_state.dart": load_bundle_task_state$,
    "package:cloud_firestore_platform_interface/src/set_options.dart": set_options,
    "package:cloud_firestore_platform_interface/src/settings.dart": settings,
    "package:cloud_firestore_platform_interface/src/snapshot_metadata.dart": snapshot_metadata,
    "package:cloud_firestore_platform_interface/src/timestamp.dart": timestamp,
    "package:_flutterfire_internals/_flutterfire_internals.dart": _flutterfire_internals,
    "package:cloud_firestore_web/src/interop/firestore_interop.dart": firestore_interop,
    "package:cloud_firestore_web/src/utils/decode_utility.dart": decode_utility,
    "package:firebase_core_web/src/interop/utils/es6_interop.dart": es6_interop,
    "package:firebase_core_web/src/interop/utils/func.dart": func,
    "package:firebase_core_web/src/interop/utils/js.dart": js$0,
    "package:firebase_core_web/src/interop/utils/js_interop.dart": js_interop,
    "package:firebase_core_web/src/interop/utils/utils.dart": utils$,
    "package:cloud_firestore_web/src/utils/encode_utility.dart": encode_utility,
    "package:cloud_firestore_web/src/field_value_web.dart": field_value_web,
    "package:cloud_firestore_web/src/interop/utils/utils.dart": utils$0,
    "package:cloud_firestore_web/src/aggregate_query_web.dart": aggregate_query_web,
    "package:firebase_auth_platform_interface/src/action_code_info.dart": action_code_info,
    "package:firebase_auth_platform_interface/src/action_code_settings.dart": action_code_settings,
    "package:firebase_auth_platform_interface/src/additional_user_info.dart": additional_user_info,
    "package:firebase_auth_platform_interface/src/auth_credential.dart": auth_credential,
    "package:firebase_auth_platform_interface/src/auth_provider.dart": auth_provider$,
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart": firebase_auth_exception,
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart": firebase_auth_multi_factor_exception,
    "package:firebase_auth_platform_interface/src/id_token_result.dart": id_token_result,
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon$0,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart": platform_interface_confirmation_result,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart": platform_interface_firebase_auth,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart": platform_interface_multi_factor,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart": platform_interface_recaptcha_verifier_factory,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart": platform_interface_user,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart": platform_interface_user_credential,
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart": apple_auth,
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart": email_auth,
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart": facebook_auth,
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart": github_auth,
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart": google_auth,
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart": microsoft_auth,
    "package:firebase_auth_platform_interface/src/providers/oauth.dart": oauth,
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart": phone_auth,
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart": saml_auth,
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart": twitter_auth,
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart": yahoo_auth,
    "package:firebase_auth_platform_interface/src/types.dart": types,
    "package:firebase_auth_platform_interface/src/user_info.dart": user_info,
    "package:firebase_auth_platform_interface/src/user_metadata.dart": user_metadata,
    "package:firebase_auth_web/src/interop/window_interop.dart": window_interop,
    "package:http_parser/http_parser.dart": http_parser,
    "package:firebase_auth_web/src/interop/auth_interop.dart": auth_interop,
    "package:firebase_core_web/src/interop/app.dart": app$,
    "package:firebase_core_web/src/interop/core_interop.dart": core_interop,
    "package:firebase_core_web/src/interop/app_interop.dart": app_interop,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/firestore_message_codec.dart": firestore_message_codec,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value_factory.dart": method_channel_field_value_factory,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_firestore.dart": method_channel_firestore,
    "package:_flutterfire_internals/src/exception.dart": exception$,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart": method_channel_firebase_auth,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart": method_channel_multi_factor,
    "package:http_parser/src/authentication_challenge.dart": authentication_challenge,
    "package:http_parser/src/case_insensitive_map.dart": case_insensitive_map,
    "package:http_parser/src/chunked_coding.dart": chunked_coding,
    "package:http_parser/src/http_date.dart": http_date,
    "package:http_parser/src/media_type.dart": media_type,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value.dart": method_channel_field_value,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query.dart": method_channel_query,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_load_bundle_task.dart": method_channel_load_bundle_task,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query_snapshot.dart": method_channel_query_snapshot,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_collection_reference.dart": method_channel_collection_reference,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_reference.dart": method_channel_document_reference,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_transaction.dart": method_channel_transaction,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_write_batch.dart": method_channel_write_batch,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/exception.dart": exception,
    "package:firebase_auth_platform_interface/src/method_channel/utils/convert_auth_provider.dart": convert_auth_provider,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart": method_channel_user,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart": method_channel_user_credential,
    "package:firebase_auth_platform_interface/src/method_channel/utils/exception.dart": exception$0,
    "package:firebase_auth_platform_interface/src/method_channel/utils/pigeon_helper.dart": pigeon_helper,
    "package:http_parser/src/scan.dart": scan,
    "package:http_parser/src/utils.dart": utils$1,
    "package:http_parser/src/chunked_coding/decoder.dart": decoder,
    "package:http_parser/src/chunked_coding/encoder.dart": encoder,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_aggregate_query.dart": method_channel_aggregate_query,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_change.dart": method_channel_document_change,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/auto_id_generator.dart": auto_id_generator,
    "package:typed_data/typed_data.dart": typed_data$,
    "package:http_parser/src/chunked_coding/charcodes.dart": charcodes,
    "package:typed_data/src/typed_queue.dart": typed_queue,
    "package:typed_data/typed_buffers.dart": typed_buffers,
    "package:typed_data/src/typed_buffer.dart": typed_buffer
  }, {
    "package:firebase_core/firebase_core.dart": ["src/firebase_app.dart", "src/firebase.dart"],
    "package:firebase_core_web/firebase_core_web.dart": ["src/firebase_app_web.dart", "src/firebase_core_web.dart", "src/firebase_sdk_version.dart"],
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": ["src/firebase_core_exceptions.dart", "src/firebase_exception.dart", "src/firebase_options.dart", "src/method_channel/method_channel_firebase.dart", "src/method_channel/method_channel_firebase_app.dart", "src/platform_interface/platform_interface_firebase.dart", "src/platform_interface/platform_interface_firebase_app.dart", "src/platform_interface/platform_interface_firebase_plugin.dart"],
    "package:provider/src/provider.dart": ["deferred_inherited_provider.dart", "devtool.dart", "inherited_provider.dart"],
    "package:firebase_auth/firebase_auth.dart": ["src/confirmation_result.dart", "src/firebase_auth.dart", "src/multi_factor.dart", "src/recaptcha_verifier.dart", "src/user.dart", "src/user_credential.dart"],
    "package:cloud_firestore/cloud_firestore.dart": ["src/aggregate_query.dart", "src/aggregate_query_snapshot.dart", "src/collection_reference.dart", "src/document_change.dart", "src/document_reference.dart", "src/document_snapshot.dart", "src/field_value.dart", "src/filters.dart", "src/firestore.dart", "src/load_bundle_task.dart", "src/load_bundle_task_snapshot.dart", "src/query.dart", "src/query_document_snapshot.dart", "src/query_snapshot.dart", "src/snapshot_metadata.dart", "src/transaction.dart", "src/utils/codec_utility.dart", "src/write_batch.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.24.2/lib/src/firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.24.2/lib/src/firebase.dart","/zapp/project/lib/providers/auth_provider.dart","/zapp/project/lib/providers/product_provider.dart","/zapp/project/lib/screens/home_screen.dart","/zapp/project/lib/screens/login_screen.dart","/zapp/project/lib/screens/signup_screen.dart","/zapp/project/lib/screens/cart_screen.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/cloud_firestore_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/firebase_auth_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/platform_interface/platform_interface_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_app_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/platform_interface/platform_interface_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_sdk_version.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/firebase_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/firebase_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/method_channel/method_channel_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/method_channel/method_channel_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/platform_interface/platform_interface_firebase_plugin.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/firebase_core_exceptions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/firebase_core_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/async_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/change_notifier_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart","/workspace/build/dart-sdk/packages/flutter/lib/src/widgets/framework.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/proxy_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/reassemble_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/value_listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/firebase_auth_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/recaptcha_verifier.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/aggregate_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/aggregate_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/filters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/filters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/load_bundle_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query_document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/snapshot_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/utils/codec_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/write_batch.dart","/zapp/project/lib/models/product.dart","/zapp/project/lib/screens/product_details_screen.dart","/zapp/project/lib/providers/cart_provider.dart","/zapp/project/lib/widgets/cart_item_widget.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/cloud_firestore_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/load_bundle_task_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/utils/web_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/query_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/collection_reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/document_reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_field_value_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/field_value_factory_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/interop/firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/transaction_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_write_batch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/write_batch_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/utils/web_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/core.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/pigeon/mocks.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.1.0/lib/src/pigeon/test_api.dart","/zapp/project/lib/models/cart_item.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/internal/pointer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/utils/firestore_message_codec.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/blob.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/field_path.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/field_path_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/geo_point.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/get_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/load_bundle_task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/persistence_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_aggregate_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_aggregate_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_index_definitions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/utils/load_bundle_task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/set_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/snapshot_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/timestamp.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/_flutterfire_internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/utils/decode_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/js_interop.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/utils/encode_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/field_value_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/aggregate_query_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/action_code_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/action_code_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/additional_user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/auth_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/firebase_auth_multi_factor_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/id_token_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/apple_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/oauth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/email_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/facebook_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/github_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/google_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/microsoft_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/phone_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/saml_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/twitter_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/yahoo_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/user_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/auth_interop.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_field_value_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/authentication_challenge.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/case_insensitive_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/http_date.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/media_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_write_batch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/utils/convert_auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/utils/pigeon_helper.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/scan.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/decoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/encoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_aggregate_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/utils/auto_id_generator.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/charcodes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_buffer.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    firebase_core: firebase_core,
    provider: provider,
    zapp__project__lib__providers__auth_provider: auth_provider,
    zapp__project__lib__providers__product_provider: product_provider,
    zapp__project__lib__screens__home_screen: home_screen,
    zapp__project__lib__screens__login_screen: login_screen,
    zapp__project__lib__screens__signup_screen: signup_screen,
    zapp__project__lib__screens__cart_screen: cart_screen,
    cloud_firestore_web: cloud_firestore_web,
    firebase_auth_web: firebase_auth_web,
    firebase_core_web: firebase_core_web,
    firebase_core_platform_interface: firebase_core_platform_interface,
    src__async_provider: async_provider,
    src__change_notifier_provider: change_notifier_provider,
    src__consumer: consumer,
    src__listenable_provider: listenable_provider,
    src__provider: provider$,
    src__proxy_provider: proxy_provider,
    src__reassemble_handler: reassemble_handler,
    src__selector: selector$,
    src__value_listenable_provider: value_listenable_provider,
    firebase_auth: firebase_auth,
    cloud_firestore: cloud_firestore,
    zapp__project__lib__models__product: product,
    zapp__project__lib__screens__product_details_screen: product_details_screen,
    zapp__project__lib__providers__cart_provider: cart_provider,
    zapp__project__lib__widgets__cart_item_widget: cart_item_widget,
    cloud_firestore_platform_interface: cloud_firestore_platform_interface,
    src__internals: internals,
    src__load_bundle_task_web: load_bundle_task_web,
    src__utils__web_utils: web_utils,
    firebase_core_web_interop: firebase_core_web_interop,
    src__collection_reference_web: collection_reference_web,
    src__document_reference_web: document_reference_web,
    src__field_value_factory_web: field_value_factory_web,
    src__interop__firestore: firestore$,
    src__query_web: query_web,
    src__transaction_web: transaction_web,
    src__write_batch_web: write_batch_web,
    firebase_auth_platform_interface: firebase_auth_platform_interface,
    src__firebase_auth_web_multi_factor: firebase_auth_web_multi_factor,
    src__interop__utils__utils: utils,
    src__utils__web_utils: web_utils$,
    src__firebase_auth_web_confirmation_result: firebase_auth_web_confirmation_result,
    src__firebase_auth_web_recaptcha_verifier_factory: firebase_auth_web_recaptcha_verifier_factory,
    src__firebase_auth_web_user: firebase_auth_web_user,
    src__firebase_auth_web_user_credential: firebase_auth_web_user_credential,
    src__interop__auth: auth$,
    src__interop__multi_factor: multi_factor,
    src__interop__js: js$,
    src__interop__core: core$,
    src__pigeon__messages$46pigeon: messages$46pigeon,
    plugin_platform_interface: plugin_platform_interface,
    src__pigeon__mocks: mocks,
    src__pigeon__test_api: test_api,
    nested: nested,
    zapp__project__lib__models__cart_item: cart_item,
    src__internal__pointer: pointer,
    src__pigeon__messages$46pigeon: messages$46pigeon$,
    src__blob: blob,
    src__field_path: field_path,
    src__field_path_type: field_path_type,
    src__filters: filters,
    src__geo_point: geo_point,
    src__get_options: get_options,
    src__load_bundle_task_state: load_bundle_task_state,
    src__persistence_settings: persistence_settings,
    src__platform_interface__platform_interface_aggregate_query: platform_interface_aggregate_query,
    src__platform_interface__platform_interface_aggregate_query_snapshot: platform_interface_aggregate_query_snapshot,
    src__platform_interface__platform_interface_collection_reference: platform_interface_collection_reference,
    src__platform_interface__platform_interface_document_change: platform_interface_document_change,
    src__platform_interface__platform_interface_document_reference: platform_interface_document_reference,
    src__platform_interface__platform_interface_document_snapshot: platform_interface_document_snapshot,
    src__platform_interface__platform_interface_field_value: platform_interface_field_value,
    src__platform_interface__platform_interface_field_value_factory: platform_interface_field_value_factory,
    src__platform_interface__platform_interface_firestore: platform_interface_firestore,
    src__platform_interface__platform_interface_index_definitions: platform_interface_index_definitions,
    src__platform_interface__platform_interface_load_bundle_task: platform_interface_load_bundle_task,
    src__platform_interface__platform_interface_load_bundle_task_snapshot: platform_interface_load_bundle_task_snapshot,
    src__platform_interface__platform_interface_query: platform_interface_query,
    src__platform_interface__platform_interface_query_snapshot: platform_interface_query_snapshot,
    src__platform_interface__platform_interface_transaction: platform_interface_transaction,
    src__platform_interface__platform_interface_write_batch: platform_interface_write_batch,
    src__platform_interface__utils__load_bundle_task_state: load_bundle_task_state$,
    src__set_options: set_options,
    src__settings: settings,
    src__snapshot_metadata: snapshot_metadata,
    src__timestamp: timestamp,
    _flutterfire_internals: _flutterfire_internals,
    src__interop__firestore_interop: firestore_interop,
    src__utils__decode_utility: decode_utility,
    src__interop__utils__es6_interop: es6_interop,
    src__interop__utils__func: func,
    src__interop__utils__js: js$0,
    src__interop__utils__js_interop: js_interop,
    src__interop__utils__utils: utils$,
    src__utils__encode_utility: encode_utility,
    src__field_value_web: field_value_web,
    src__interop__utils__utils: utils$0,
    src__aggregate_query_web: aggregate_query_web,
    src__action_code_info: action_code_info,
    src__action_code_settings: action_code_settings,
    src__additional_user_info: additional_user_info,
    src__auth_credential: auth_credential,
    src__auth_provider: auth_provider$,
    src__firebase_auth_exception: firebase_auth_exception,
    src__firebase_auth_multi_factor_exception: firebase_auth_multi_factor_exception,
    src__id_token_result: id_token_result,
    src__pigeon__messages$46pigeon: messages$46pigeon$0,
    src__platform_interface__platform_interface_confirmation_result: platform_interface_confirmation_result,
    src__platform_interface__platform_interface_firebase_auth: platform_interface_firebase_auth,
    src__platform_interface__platform_interface_multi_factor: platform_interface_multi_factor,
    src__platform_interface__platform_interface_recaptcha_verifier_factory: platform_interface_recaptcha_verifier_factory,
    src__platform_interface__platform_interface_user: platform_interface_user,
    src__platform_interface__platform_interface_user_credential: platform_interface_user_credential,
    src__providers__apple_auth: apple_auth,
    src__providers__email_auth: email_auth,
    src__providers__facebook_auth: facebook_auth,
    src__providers__github_auth: github_auth,
    src__providers__google_auth: google_auth,
    src__providers__microsoft_auth: microsoft_auth,
    src__providers__oauth: oauth,
    src__providers__phone_auth: phone_auth,
    src__providers__saml_auth: saml_auth,
    src__providers__twitter_auth: twitter_auth,
    src__providers__yahoo_auth: yahoo_auth,
    src__types: types,
    src__user_info: user_info,
    src__user_metadata: user_metadata,
    src__interop__window_interop: window_interop,
    http_parser: http_parser,
    src__interop__auth_interop: auth_interop,
    src__interop__app: app$,
    src__interop__core_interop: core_interop,
    src__interop__app_interop: app_interop,
    src__method_channel__utils__firestore_message_codec: firestore_message_codec,
    src__method_channel__method_channel_field_value_factory: method_channel_field_value_factory,
    src__method_channel__method_channel_firestore: method_channel_firestore,
    src__exception: exception$,
    src__method_channel__method_channel_firebase_auth: method_channel_firebase_auth,
    src__method_channel__method_channel_multi_factor: method_channel_multi_factor,
    src__authentication_challenge: authentication_challenge,
    src__case_insensitive_map: case_insensitive_map,
    src__chunked_coding: chunked_coding,
    src__http_date: http_date,
    src__media_type: media_type,
    src__method_channel__method_channel_field_value: method_channel_field_value,
    src__method_channel__method_channel_query: method_channel_query,
    src__method_channel__method_channel_load_bundle_task: method_channel_load_bundle_task,
    src__method_channel__method_channel_query_snapshot: method_channel_query_snapshot,
    src__method_channel__method_channel_collection_reference: method_channel_collection_reference,
    src__method_channel__method_channel_document_reference: method_channel_document_reference,
    src__method_channel__method_channel_transaction: method_channel_transaction,
    src__method_channel__method_channel_write_batch: method_channel_write_batch,
    src__method_channel__utils__exception: exception,
    src__method_channel__utils__convert_auth_provider: convert_auth_provider,
    src__method_channel__method_channel_user: method_channel_user,
    src__method_channel__method_channel_user_credential: method_channel_user_credential,
    src__method_channel__utils__exception: exception$0,
    src__method_channel__utils__pigeon_helper: pigeon_helper,
    src__scan: scan,
    src__utils: utils$1,
    src__chunked_coding__decoder: decoder,
    src__chunked_coding__encoder: encoder,
    src__method_channel__method_channel_aggregate_query: method_channel_aggregate_query,
    src__method_channel__method_channel_document_change: method_channel_document_change,
    src__method_channel__utils__auto_id_generator: auto_id_generator,
    typed_data: typed_data$,
    src__chunked_coding__charcodes: charcodes,
    src__typed_queue: typed_queue,
    typed_buffers: typed_buffers,
    src__typed_buffer: typed_buffer
  };
}));

//# sourceMappingURL=main.js.map
